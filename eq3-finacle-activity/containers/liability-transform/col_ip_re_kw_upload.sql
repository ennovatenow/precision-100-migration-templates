-- FILE NAME           : COL_TRADABLE_UPLOAD.SQL
-- FILE CREATED FOR    : UPLOAD FILE FOR COLLATERAL FOR IMMOVABLE PROPERTIES RE
-- CREATED BY          : REVATHI
-- CLIENT              : ENBD
-- CREATED ON          : 26-11-2015
-------------------------------------------------------------------
TRUNCATE TABLE COL_IP_RE_O_TABLE;
INSERT INTO COL_IP_RE_O_TABLE
SELECT distinct 
-- COL_TYPE                    NVARCHAR2(1),
'I',
-- COL_CODE                    NVARCHAR2(8),
CASE WHEN HYCLP ='010' THEN 'REL-KWD'
WHEN HYCLP ='011' THEN 'RES-KWD'
WHEN HYCLP ='025' THEN 'FRA-KWD'
END,
--  CEILING_LIMIT               NVARCHAR2(17),
'9999999999999',
--  COL_CLASS                   NVARCHAR2(5),
'',
--  COL_GROUP                   NVARCHAR2(5),
'',
--  MARGIN                      NVARCHAR2(16),
'0',
--  LTV_PCNT                    NVARCHAR2(16),
HYSVM,
--  DR_ACC_FOR_FEES             NVARCHAR2(11),
'',
--  LAST_VALUATION_DT           NVARCHAR2(10),
'',
--  REASON_CODE                 NVARCHAR2(5),
'',
--  NATURE_OF_CHARGE            NVARCHAR2(5),
case when trim(HYNR4) like '%F' then '005' when trim(HYNR4) like '%S' then '007' else '999' end,
--  THIRD_PARTY_LIEN_VALUE      NVARCHAR2(17),
'',
--  DERIVE_VALUE_FROM           NVARCHAR2(1),
'M',
--  ASSESSED_VALUE              NVARCHAR2(17),
'',--TO_NUMBER((HYPF.HYTOTA)/POWER(10,C8CED))
--  INVOICE_VALUE               NVARCHAR2(17),
'',
--  MARKET_VALUE                NVARCHAR2(17),
CASE WHEN HYBKV!=0 THEN TO_NUMBER((HYPF.HYBKV)/POWER(10,C8CED)) ELSE 0.01 END,
--  WRITTEN_DOWN_VALUE          NVARCHAR2(17),
'',
--  APPORTIONED_VALUE           NVARCHAR2(17),
'',
--  COLLATERAL_VALUE            NVARCHAR2(17),
--CASE WHEN HYPF.HYCLV=0 THEN 0.001 ELSE TO_NUMBER((HYPF.HYCLV)/POWER(10,C8CED)) END ,
TO_NUMBER((HYPF.HYCLV)/POWER(10,C8CED)),
--  PROPERTY_DOCUMENT_NO        NVARCHAR2(20),
trim(replace(case when length(trim(HYCLR)) <11 then  substr(trim(HYCLR),1,6) else substr(trim(HYCLR),10,8) end,' ','')),
--  LODGED_DATE                 NVARCHAR2(10),
GET_PARAM('EOD_DATE'),
--  REVIEW_DATE                 NVARCHAR2(10),
CASE WHEN HYNRD<>0 AND GET_DATE_FM_BTRV(HYNRD)<> 'ERROR' THEN TO_CHAR(TO_DATE(GET_DATE_FM_BTRV(HYNRD),'YYYYMMDD'),'DD-MM-YYYY') 
     WHEN CONV_TO_VALID_DATE( GET_DATE_FM_BTRV(HYCXD),'YYYYMMDD') <= to_date(get_param('EOD_DATE'),'dd-mm-yyyy') THEN TO_CHAR(TO_DATE(get_param('EOD_DATE'),'DD-MM-YYYY')-1,'DD-MM-YYYY')
     ELSE ''
END,
--  RECEIVED_DATE               NVARCHAR2(10),
'',
--  DUE_DATE                    NVARCHAR2(10),
CASE WHEN HYCXD='9999999' THEN '31-12-2099'
     WHEN CONV_TO_VALID_DATE( GET_DATE_FM_BTRV(HYCXD),'YYYYMMDD') <= to_date(get_param('EOD_DATE'),'dd-mm-yyyy') THEN get_param('EOD_DATE')
ELSE       
     NVL(TO_CHAR(TO_DATE(GET_DATE_FM_BTRV(HYCXD),'YYYYMMDD'),'DD-MM-YYYY'),'31-12-2099')
END,
--  DATE_OF_PURCHASE            NVARCHAR2(10),
'',
--  BUILT_AREA                  NVARCHAR2(15),
'',
--  UNIT_OF_MEASUREMENT_1       NVARCHAR2(5),
'',
--  LAND_AREA                   NVARCHAR2(15),
'',
--  UNIT_OF_MEASUREMENT_2       NVARCHAR2(5),
'',
--  BUILDER_NAME                NVARCHAR2(20),
'',
--  PROPERTY_RATING             NVARCHAR2(5),
TRIM(NARRATIVE_LINE4),
--  YEAR_OF_CONSTRUCTION        NVARCHAR2(5),
'',
--  ADDRESSLINE_1               NVARCHAR2(45),
NVL(TRN1,'ZZZ'),
--  ADDRESSLINE_2               NVARCHAR2(45),
TRN2,
--  CITY_CODE_1                 NVARCHAR2(5),
'ZZZ',
--  STATE_CODE_1                NVARCHAR2(5),
'',
--  COUNTRY_CODE_1              NVARCHAR2(5),
'',
--  PIN_CODE                    NVARCHAR2(6),
'',
--  PROPERTY_OWNER              NVARCHAR2(240),
trim(HYNR1),
--  LEASED                      NVARCHAR2(1),
'',
--  LEASE_EXPIRY_DATE           NVARCHAR2(10),
'',
--  CIF_ID                      NVARCHAR2(9),
MAP_CIF.FIN_CIF_ID,
--  AGE_OF_BUILDING             NVARCHAR2(5),
'',
--  NOTES0                      NVARCHAR2(240),
'',
--  INSPECTION_TYPE             NVARCHAR2(5),
'999',
--ADDRESS_LINE1
'',
--  ADDRESS_LINE2               NVARCHAR2(45),
'',
--  CITY_CODE_2                 NVARCHAR2(5),
'',
--  STATE_CODE_2                NVARCHAR2(5),
'',
--  ZIP_CODE_2                  NVARCHAR2(6),
'',
--  TELEPHONE_NUMBER            NVARCHAR2(20),
'',
--  DATE_OF_VISIT               NVARCHAR2(10),
'31-12-2099',   
--  DUE_DATE_OF_VISIT           NVARCHAR2(10),
'31-12-2099',
--  INSPECTED_VALUE             NVARCHAR2(17),
'',
--  INSPECTED_EMP_ID            NVARCHAR2(10),
'',
--  NOTES1                      NVARCHAR2(240),
'ZZZ999',
--  NOTES2                      NVARCHAR2(240),
'',
--  DUMMY_FIELD                 NVARCHAR2(50),
'',
--  INSURANCE_TYPE              NVARCHAR2(5),
case when HYISV <> 0 then '999' end,
--  INSURER_DETAILS             NVARCHAR2(80),
'',
--  INSURANCE_POLICY_NUMBER     NVARCHAR2(15),
case when HYISV <> 0 then '999' end,
--  INSURANCE_POLICY_AMOUNT     NVARCHAR2(17),
case when trim(HYISV) <> 0 then (HYPF.HYISV)/POWER(10,C8CED) end,
--  RISK_COVER_START_DATE       NVARCHAR2(10),
'',
--  RISK_COVER_END_DATE         NVARCHAR2(10),
case when trim(HYISV) <> 0 and trim(HYIXD)='9999999' THEN '31-12-2099' when trim(HYISV) <> 0 and trim(HYIXD)!='9999999' then TO_CHAR(TO_DATE(GET_DATE_FM_BTRV(trim(HYIXD)),'YYYYMMDD'),'DD-MM-YYYY') end ,
--  LAST_PREMIUM_PAID_DATE      NVARCHAR2(10),
'',
--  PREMIUM_AMOUNT              NVARCHAR2(17),
case when trim(HYISV) <> 0 then (HYPF.HYISV)/POWER(10,C8CED) end,
 -- FREQUENCY_OF_THE_STATEMENT  NVARCHAR2(1),
case when HYISV <> 0 then 'Y' end,
--ITEMS_INSURED
'',
 --  NOTES                       NVARCHAR2(240)
TRIM(REPLACE(REPLACE(TRIM(TRIM(HYNR1)||' '||TRIM(HYNR2)||' '||TRIM(HYNR3)||' '||TRIM(HYNR4)||' '||
CASE WHEN CONV_TO_VALID_DATE( GET_DATE_FM_BTRV(HYCXD),'YYYYMMDD') <= to_date(get_param('EOD_DATE'),'dd-mm-yyyy') THEN CONV_TO_VALID_DATE( GET_DATE_FM_BTRV(HYCXD),'YYYYMMDD') END ),CHR(10),' '),CHR(13),' ')),
--COLLATERAL_STATUS
'',
--LINKAGE TYPE
'',
--ACCOUNT TO BE LINKED
CASE WHEN MAP_ACC.FIN_ACC_NUM IS NOT NULL THEN 
MAP_ACC.FIN_ACC_NUM ELSE '' END,
--LIMIT PREFIX
'',
--LIMIT SUFFIX
'',
--SERIAL NUMBER
'I',--||ROWNUM
--FORACID_COLL_VALUE
'',
--CC_FINONE_ACCNT
TRIM(HYCLR),
--UPLOAD_STATUS
'0',
--FINACLE_COLLATERAL_ID
--'',
--COL_DOC_ID
--''
--ASSET_CODE
TRIM(HYCLR),
--COL_LOCATION
trim(HYCLO),
--LAST_REVIEW_DATE
CASE WHEN HYLRD<>0 AND GET_DATE_FM_BTRV(HYLRD)<> 'ERROR' THEN TO_DATE(GET_DATE_FM_BTRV(HYLRD),'YYYYMMDD') END
FROM (select DISTINCT HYCUS,HYCLC,HYCCY,HYCLR,HYCLP,HYCLV,HYSVM,HYBKV,HYNRD,HYCXD,HYCLO,HYLRD,HYNR1,HYISV,HYIXD,HYNR2,HYNR3,HYNR4,org,lent,trn1,len_trn1,
case when lent <=90 then substrc(org,len_trn1+1,45) 
else substrc(org,len_trn1+1,
decode(instrc(substrc(org,len_trn1+1,45),' ',-1),0,45,instrc(substrc(org,len_trn1+1,45),' ',-1))) 
end trn2,
length(case when lent <=90 then substrc(org,len_trn1+1,45) 
else substrc(org,len_trn1+1,
decode(instrc(substrc(org,len_trn1+1,45),' ',-1),0,45,instrc(substrc(org,len_trn1+1,45),' ',-1))) 
end ) len_trn2
from 
(select HYCUS,HYCLC,HYCCY,HYCLR,HYCLP,HYCLV,HYSVM,HYBKV,HYNRD,HYCXD,HYCLO,HYLRD,HYNR1,HYISV,HYIXD,HYNR2,HYNR3,HYNR4,length(TRIM(HYNR2)||TRIM(HYNR3)) lent,TRIM(HYNR2)||TRIM(HYNR3) org,
case when length(TRIM(HYNR2)||TRIM(HYNR3))<45 then TRIM(HYNR2)||TRIM(HYNR3)
when INSTRc(substrc(TRIM(HYNR2)||TRIM(HYNR3),1,45),' ',-1) = 0 then substrc(TRIM(HYNR2)||TRIM(HYNR3),1,45)
else substrc(TRIM(HYNR2)||TRIM(HYNR3),1,INSTRc(substrc(TRIM(HYNR2)||TRIM(HYNR3),1,45),' ',-1))
end
trn1,length(case when length(TRIM(HYNR2)||TRIM(HYNR3))<45 then TRIM(HYNR2)||TRIM(HYNR3)
when INSTRc(substrc(TRIM(HYNR2)||TRIM(HYNR3),1,45),' ',-1) = 0 then substrc(TRIM(HYNR2)||TRIM(HYNR3),1,45)
else substrc(TRIM(HYNR2)||TRIM(HYNR3),1,INSTRc(substrc(TRIM(HYNR2)||TRIM(HYNR3),1,45),' ',-1))
end)len_trn1
from HYPF)aa)HYPF  
INNER JOIN C8PF ON C8CCY=HYCCY 
INNER JOIN MAP_CIF ON TRIM(HYCUS)=TRIM(GFCUS) AND NVL(TRIM(HYCLC),' ')=NVL(TRIM(GFCLC),' ') 
LEFT JOIN YCCLC5PF01 ON   TRIM(HYCLR)=TRIM(CCC5_CLR)
LEFT JOIN REAL_ESTATE_COLLATERAL ON TRIM(HYCLR)||TRIM(HYCLP) = TRIM(COLL_REF)||TRIM(COLLATERAL_TYPE)
LEFT JOIN (SELECT * FROM MAP_ACC WHERE SCHM_TYPE<>'OOO')MAP_ACC ON LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS=LPAD(CCC5_CLC,4,0)||CCC5_CUS||LPAD(CCC5_CSEQ,3,0)
WHERE HYCLP IN('010','011','025')
--AND TO_NUMBER((HYPF.HYCLV)/POWER(10,C8CED)) <> 0  AND (CONV_TO_VALID_DATE( GET_DATE_FM_BTRV(HYCXD),'YYYYMMDD') > to_date(get_param('EOD_DATE'),'dd-mm-yyyy') or HYCXD='9999999' OR TRIM(HYCXD) IS NULL)
;
COMMIT;
UPDATE COL_IP_RE_O_TABLE SET LTV_PCNT='100' WHERE LTV_PCNT='99.999';
UPDATE COL_IP_RE_O_TABLE SET SERIAL_NUMBER='I'||ROWNUM,NOTES=REPLACE(REPLACE(TRIM(NOTES),CHR(10),' '),CHR(13),' ');
UPDATE  COL_IP_RE_O_TABLE SET REVIEW_DATE=GET_PARAM('EOD_DATE') WHERE TO_DATE(REVIEW_DATE,'DD-MM-YYYY')<TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY')  or TRIM(REVIEW_DATE) is null; 
COMMIT;
update COL_IP_RE_O_TABLE set PROPERTY_DOCUMENT_NO=CIF_ID where trim(PROPERTY_DOCUMENT_NO) is null;
COMMIT;
UPDATE COL_IP_RE_O_TABLE A SET PROPERTY_DOCUMENT_NO = (SELECT PROPERTY_DOCUMENT_NO FROM (
select ASSET_CODE ,PROPERTY_DOCUMENT_NO||'_'||(dense_rank() over(partition by PROPERTY_DOCUMENT_NO order by ASSET_CODE )) PROPERTY_DOCUMENT_NO from COL_IP_RE_O_TABLE WHERE PROPERTY_DOCUMENT_NO IN(SELECT PROPERTY_DOCUMENT_NO FROM COL_IP_RE_O_TABLE GROUP BY PROPERTY_DOCUMENT_NO HAVING COUNT(*)>1)
) B WHERE A.ASSET_CODE = B.ASSET_CODE
)
WHERE  PROPERTY_DOCUMENT_NO IN(SELECT PROPERTY_DOCUMENT_NO FROM COL_IP_RE_O_TABLE GROUP BY PROPERTY_DOCUMENT_NO HAVING COUNT(*)>1);
commit;
TRUNCATE TABLE SIP_MIG;
INSERT INTO SIP_MIG
SELECT 'S' SECU_LINKAGE_TYPE,
       '!' ACID,
       '!' LIMIT_B2KID,
       SECU_SRL_NUM,
       '1' INSU_SRL_NUM,
       'Y' ENTITY_CRE_FLG,
       'N' DEL_FLG,
       TRIM(INSURANCE_POLICY_NUMBER) INSU_REF_NUM,
       TRIM(A.INSURANCE_TYPE) INSU_TYPE,
       TRIM(INSURANCE_POLICY_AMOUNT) POLICY_AMT,
       '' COMPANY_NAME,
       '' ITEMS_INSURD,
       TO_DATE(A.RISK_COVER_START_DATE,'DD-MM-YYYY') RISK_COVER_START_DATE,
       TO_DATE(A.RISK_COVER_END_DATE,'DD-MM-YYYY') RISK_COVER_END_DATE,
       '' FREE_TEXT,
       'SYSTEM' LCHG_USER_ID,
       'SYSTEM' RCRE_USER_ID,
       SYSDATE LCHG_TIME,
       SYSDATE RCRE_TIME,
       TRIM(SUBSTR(COL_CODE,INSTR(COL_CODE,'-',1)+1)) CRNCY_CODE,
       '0' TS_CNT,
       TO_DATE(A.LAST_PREMIUM_PAID_DATE,'DD-MM-YYYY') LAST_PREMIUM_PAID,
       'Y' PREMIUM_FREQ_TYPE,
       TRIM(A.PREMIUM_AMOUNT) PREMIUM_AMT,
       GET_PARAM('BANK_ID') BANK_ID
  FROM COL_IP_RE_O_TABLE A
  LEFT JOIN MIGADM.C_COLLIMMOV B ON TRIM(A.CC_FINONE_ACCNT) = TRIM(B.CC_FINONE_ACCNT)  
   WHERE INSURANCE_POLICY_AMOUNT <> 0;
   COMMIT;
EXIT;
 