DROP TABLE limit_link_to_acct_report;

CREATE TABLE limit_link_to_acct_report AS
SELECT  DISTINCT HMLC LEG_LIMIT_LINE,LOT.LIMIT_PREFIX,FIN_LIMIT_LINK.LIMIT_PREFIX FIN_LIMIT_PREFIX,CASE WHEN LOT.LIMIT_PREFIX = FIN_LIMIT_LINK.LIMIT_PREFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_PREFIX,
LOT.LIMIT_SUFFIX LEG_LIMIT_SUFFIX,FIN_LIMIT_LINK.LIMIT_SUFFIX FIN_LIMIT_SUFFIX,CASE WHEN LOT.LIMIT_SUFFIX = FIN_LIMIT_LINK.LIMIT_SUFFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_SUFFIX,
HM.HMCCY LIMIT_CCY,FIN_LIMIT_LINK.CRNCY_CODE ,CASE WHEN HM.HMCCY = FIN_LIMIT_LINK.CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_CURRENCY,
LOT.SANCTION_LIMIT LEG_SANCTION_LIMIT,FIN_LIMIT_LINK.SANCT_LIM FIN_SANCTION_LIMIT,CASE WHEN LOT.SANCTION_LIMIT = FIN_LIMIT_LINK.SANCT_LIM THEN 'TRUE' ELSE 'FALSE' END MATCH_SANCTION_LIMIT,
HNAMT LEG_UTILIZATION_AMOUNT,
map_Acc.fin_Acc_num LEG_ACCT_NUM,FIN_LIMIT_LINK.FORACID FIN_ACCT_NUMBER,CASE WHEN map_Acc.fin_Acc_num = FIN_LIMIT_LINK.FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCT_NUMBER
  FROM LIMIT_CORE_o_TABLE LOT
  left join (select LIMIT_LINE,CASE WHEN TRIM(LM.level_7) IS NOT NULL THEN TRIM(LM.level_7)
            WHEN TRIM(LM.level_7) IS NULL AND TRIM(LM.level_6) IS NOT NULL THEN TRIM(LM.level_6)
            WHEN TRIM(LM.level_7) IS NULL AND TRIM(LM.level_6) IS NULL AND TRIM(LM.level_5) IS NOT NULL THEN TRIM(LM.level_5)
            WHEN TRIM(LM.level_7) IS NULL AND TRIM(LM.level_6) IS NULL AND TRIM(LM.level_5) IS NULL AND TRIM(LM.level_4) IS NOT NULL THEN TRIM(LM.level_4) END limit_node from limit_mapping lm) LM on trim(LM.limit_node)=trim(LOT.limit_suffix)
left join map_cif on  trim(map_cif.FIN_CIF_ID)=trim(LOT.BORROWER_NAME)       
  INNER JOIN HMPF HM ON ((NVL (trim(HM.HMCLC), ' ')  = NVL (trim(map_cif.GFCLC ), ' ')  and trim(HM.HMCUS) = trim(map_cif.GFCUS) ) or trim(LOT.BORROWER_NAME) = trim(HM.HMGRP)) AND trim(LM.LIMIT_LINE) like '%'||trim(HM.HMLC)||'%'
INNER JOIN HNPF HN ON trim(HM.HMSEQ)=trim(HN.HNSEQ)
LEFT JOIN C8PF C8 ON C8.C8CCY = HM.HMCCY
LEFT JOIN (select * from MAP_ACC where schm_type<>'OOO')map_Acc on LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS=trim(HN.HNAB)||trim(HN.HNAN)||trim(HN.HNAS)
LEFT JOIN 
(select DISTINCT LLT.SANCT_LIM,LLT.LIM_SANCT_DATE,LLT.ORIG_LIM_EXP_DATE,LLT.CUST_ID,LLT.LIMIT_PREFIX,LLT.LIMIT_SUFFIX,GAM.FORACID,LLT.CRNCY_CODE,llt.BANK_ID
from tbaadm.llt
inner join tbaadm.dht on dht.LIMIT_B2KID = llt.LIMIT_B2KID and llt.bank_id=GET_PARAM('BANK_ID') and dht.bank_id=GET_PARAM('BANK_ID')
INNER JOIN TBAADM.GAM ON GAM.ACID=DHT.ACID) FIN_LIMIT_LINK ON FIN_LIMIT_LINK.LIMIT_PREFIX = LOT.LIMIT_PREFIX 
AND FIN_LIMIT_LINK.LIMIT_SUFFIX = LOT.LIMIT_SUFFIX
--AND LOT.CRNCY_CODE = FIN_LIMIT_LINK.CRNCY_CODE
 AND map_Acc.fin_Acc_num = FIN_LIMIT_LINK.FORACID 
WHERE map_Acc.fin_Acc_num IS NOT NULL;






select DISTINCT a.LIMIT_PREFIX LEG_LIMIT_PREFIX,FIN_LIMIT_LINK.LIMIT_PREFIX FIN_LIMIT_PREFIX,CASE WHEN  A.LIMIT_PREFIX = FIN_LIMIT_LINK.LIMIT_PREFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_PREFIX,
a.LIMIT_SUFFIX LEG_LIMIT_SUFFIX,FIN_LIMIT_LINK.LIMIT_SUFFIX FIN_LIMIT_SUFFIX,CASE WHEN  a.LIMIT_SUFFIX = FIN_LIMIT_LINK.LIMIT_SUFFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_SUFFIX,
LIMIT_AMOUNT LEG_LIMIT_AMOUNT,SANCT_LIM FIN_LIMIT_AMOUNT,CASE WHEN  LIMIT_AMOUNT  = SANCT_LIM THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_AMOUNT,
abs(SCBAL/c8pwd) leg_limit_utilisation,abs(SCBAL/c8pwd)*c8lsar leg_utilisation_AMOUNT_equ_kwd,fin_utilisation_AMOUNT fin_utilisation_AMOUNT_equ_kwd ,
CASE WHEN  round(abs(SCBAL/c8pwd)*c8lsar)  = round(fin_utilisation_AMOUNT)  THEN 'TRUE' ELSE 'FALSE' END MATCH_utilisation_AMOUNT,
 case when SCBAL <0 then 'DR' else 'CR' end DR_CR_ACCOUNT_BAL,
LIMIT_CCY LEG_LIMIT_CCY,CRNCY_CODE FIN_CRNCY_CODE,CASE WHEN  LIMIT_CCY  = CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_CCY,
ACCT_NUM LEG_ACCT_NUM,FORACID FIN_ACCT_NUM,CASE WHEN  ACCT_NUM  = FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCT_NUM
 from LIMIT_LINKAGE_TO_ACCT_O_TABLE A
LEFT JOIN MAP_ACC  ON A.ACCT_NUM = FIN_ACC_NUM
left join scpf on scab||scan||SCAS = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
left join c8pf on  trim(C8CCY) = trim(SCCCY)
LEFT JOIN
(select DISTINCT LLT.SANCT_LIM,LLT.LIM_SANCT_DATE,LLT.ORIG_LIM_EXP_DATE,LLT.CUST_ID,LLT.LIMIT_PREFIX,LLT.LIMIT_SUFFIX,GAM.FORACID,LLT.CRNCY_CODE,llt.BANK_ID,UTIL_LIMIT_FUND_BASED,LIAB,LC_SINGLE_TRAN_FLG,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end)*c8lsar fin_utilisation_AMOUNT
from tbaadm.llt
left join c8pf on LLT.CRNCY_CODE = c8ccy
inner join (select a.* from tbaadm.dht a
inner join (select ACID,max(SERIAL_NUM) SERIAL_NUM from tbaadm.dht group by ACID) b on a.ACID = b.ACID and a.SERIAL_NUM = b.SERIAL_NUM) dht on dht.LIMIT_B2KID = llt.LIMIT_B2KID and llt.bank_id=GET_PARAM('BANK_ID') and dht.bank_id=GET_PARAM('BANK_ID')
INNER JOIN TBAADM.GAM ON GAM.ACID=DHT.ACID) FIN_LIMIT_LINK ON TRIM(FIN_LIMIT_LINK.LIMIT_PREFIX) = TRIM(A.LIMIT_PREFIX) 
AND TRIM(FIN_LIMIT_LINK.LIMIT_SUFFIX) = TRIM(A.LIMIT_SUFFIX)
AND TRIM(A.ACCT_NUM) = TRIM(FIN_LIMIT_LINK.FORACID) 




select DISTINCT a.LIMIT_PREFIX LEG_LIMIT_PREFIX,FIN_LIMIT_LINK.LIMIT_PREFIX FIN_LIMIT_PREFIX,CASE WHEN  A.LIMIT_PREFIX = FIN_LIMIT_LINK.LIMIT_PREFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_PREFIX,
a.LIMIT_SUFFIX LEG_LIMIT_SUFFIX,FIN_LIMIT_LINK.LIMIT_SUFFIX FIN_LIMIT_SUFFIX,CASE WHEN  a.LIMIT_SUFFIX = FIN_LIMIT_LINK.LIMIT_SUFFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_SUFFIX,
LIMIT_AMOUNT LEG_LIMIT_AMOUNT,SANCT_LIM FIN_LIMIT_AMOUNT,CASE WHEN  LIMIT_AMOUNT  = SANCT_LIM THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_AMOUNT,
ABS((SCBAL+scsuma)/c8pwd) leg_limit_utilisation,ABS(((SCBAL+scsuma)/c8pwd)*c8lsar) leg_utilisation_AMOUNT_equ_KWD,ABS(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN clr_bal_amt+future_bal_amt ELSE fin_utilisation_AMOUNT END) fin_utilisation_AMOUNT_equ_KWD ,
CASE WHEN  ABS(round(((SCBAL+scsuma)/c8pwd)*c8lsar))  = ABS(round(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN clr_bal_amt+future_bal_amt ELSE fin_utilisation_AMOUNT END))  THEN 'TRUE' ELSE 'FALSE' END MATCH_utilisation_AMOUNT,
 case when (SCBAL+scsuma) <0 then 'DR' else 'CR' end DR_CR_ACCOUNT_BAL,
LIMIT_CCY LEG_LIMIT_CCY,CRNCY_CODE FIN_CRNCY_CODE,CASE WHEN  LIMIT_CCY  = CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_CCY,
LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS LEG_ACCT_NUM,FORACID FIN_ACCT_NUM,CASE WHEN  ACCT_NUM  = FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCT_NUM
 from LIMIT_LINKAGE_TO_ACCT_O_TABLE A
 left join (select DISTINCT LIMIT_SUFFIX_CODE LIMIT_SUFFIX from LIMIT_SUFFIX_CODE_AND_DESC where upper(LIMIT_SUFFIX_DESC) like '%LOA%' OR upper(LIMIT_SUFFIX_DESC) like '%OD%') LND on a.LIMIT_SUFFIX = LND.LIMIT_SUFFIX
LEFT JOIN MAP_ACC  ON A.ACCT_NUM = FIN_ACC_NUM
left join scpf on scab||scan||SCAS = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
left join c8pf on  trim(C8CCY) = trim(SCCCY)
LEFT JOIN
(select DISTINCT LLT.SANCT_LIM,LLT.LIM_SANCT_DATE,LLT.ORIG_LIM_EXP_DATE,LLT.CUST_ID,LLT.LIMIT_PREFIX,LLT.LIMIT_SUFFIX,GAM.FORACID,LLT.CRNCY_CODE,llt.BANK_ID,UTIL_LIMIT_FUND_BASED,LIAB,LC_SINGLE_TRAN_FLG,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end)*c8lsar fin_utilisation_AMOUNT,gam.clr_bal_amt,gam.future_bal_amt
from tbaadm.llt
left join c8pf on LLT.CRNCY_CODE = c8ccy
inner join (select a.* from tbaadm.dht a
inner join (select ACID,max(SERIAL_NUM) SERIAL_NUM from tbaadm.dht group by ACID) b on a.ACID = b.ACID and a.SERIAL_NUM = b.SERIAL_NUM) dht on dht.LIMIT_B2KID = llt.LIMIT_B2KID and llt.bank_id=GET_PARAM('BANK_ID') and dht.bank_id=GET_PARAM('BANK_ID')
INNER JOIN TBAADM.GAM ON GAM.ACID=DHT.ACID) FIN_LIMIT_LINK ON TRIM(FIN_LIMIT_LINK.LIMIT_PREFIX) = TRIM(A.LIMIT_PREFIX) 
AND TRIM(FIN_LIMIT_LINK.LIMIT_SUFFIX) = TRIM(A.LIMIT_SUFFIX)
AND TRIM(A.ACCT_NUM) = TRIM(FIN_LIMIT_LINK.FORACID) 





select DISTINCT a.LIMIT_PREFIX LEG_LIMIT_PREFIX,FIN_LIMIT_LINK.LIMIT_PREFIX FIN_LIMIT_PREFIX,CASE WHEN  A.LIMIT_PREFIX = FIN_LIMIT_LINK.LIMIT_PREFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_PREFIX,
a.LIMIT_SUFFIX LEG_LIMIT_SUFFIX,FIN_LIMIT_LINK.LIMIT_SUFFIX FIN_LIMIT_SUFFIX,CASE WHEN  a.LIMIT_SUFFIX = FIN_LIMIT_LINK.LIMIT_SUFFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_SUFFIX,
LIMIT_AMOUNT LEG_LIMIT_AMOUNT,SANCT_LIM FIN_LIMIT_AMOUNT,CASE WHEN  LIMIT_AMOUNT  = SANCT_LIM THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_AMOUNT,
ABS((SCBAL+scsuma)/c8pwd) leg_fcy_limit_utilisation,ABS(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (clr_bal_amt+future_bal_amt) ELSE fin_FCY_utilisation_AMOUNT END) fin_fcy_limit_utilisation,
ABS(((SCBAL+scsuma)/c8pwd)*c8lsar) leg_utilisation_AMOUNT_equ_KWD,ABS(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END) fin_utilisation_AMOUNT_equ_KWD ,
CASE WHEN  ABS(((SCBAL+scsuma)/c8pwd)*c8lsar)   = ABS(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END)  THEN 'TRUE' ELSE 'FALSE' END MATCH_utilisation_AMOUNT,
 case when (SCBAL+scsuma) <0 then 'DR' else 'CR' end DR_CR_ACCOUNT_BAL,
LIMIT_CCY LEG_LIMIT_CCY,CRNCY_CODE FIN_CRNCY_CODE,CASE WHEN  LIMIT_CCY  = CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_CCY,
LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS LEG_ACCT_NUM,FORACID FIN_ACCT_NUM,CASE WHEN  ACCT_NUM  = FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCT_NUM,
abs(sum(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt)*c8lsar ELSE fin_KWD_utilisation_AMOUNT*c8lsar END) over( order by LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS )  ) group_fin_amount
 from LIMIT_LINKAGE_TO_ACCT_O_TABLE A
 left join (select DISTINCT LIMIT_SUFFIX_CODE LIMIT_SUFFIX from LIMIT_SUFFIX_CODE_AND_DESC where upper(LIMIT_SUFFIX_DESC) like '%LOA%' OR upper(LIMIT_SUFFIX_DESC) like '%OD%') LND on a.LIMIT_SUFFIX = LND.LIMIT_SUFFIX
LEFT JOIN MAP_ACC  ON A.ACCT_NUM = FIN_ACC_NUM
left join scpf on scab||scan||SCAS = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
left join c8pf on  trim(C8CCY) = trim(SCCCY)
LEFT JOIN
(select DISTINCT LLT.SANCT_LIM,LLT.LIM_SANCT_DATE,LLT.ORIG_LIM_EXP_DATE,LLT.CUST_ID,LLT.LIMIT_PREFIX,LLT.LIMIT_SUFFIX,GAM.FORACID,LLT.CRNCY_CODE,llt.BANK_ID,UTIL_LIMIT_FUND_BASED,LIAB,LC_SINGLE_TRAN_FLG,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end) fin_fcy_utilisation_AMOUNT,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end)*c81.c8lsar fin_KWD_utilisation_AMOUNT,
gam.clr_bal_amt,gam.clr_bal_amt*c82.c8lsar KWD_clr_bal_amt, gam.future_bal_amt,gam.future_bal_amt*c82.c8lsar KWD_future_bal_amt
from tbaadm.llt
left join c8pf c81 on LLT.CRNCY_CODE = c81.c8ccy
inner join (select a.* from tbaadm.dht a
inner join (select ACID,max(SERIAL_NUM) SERIAL_NUM from tbaadm.dht group by ACID) b on a.ACID = b.ACID and a.SERIAL_NUM = b.SERIAL_NUM) dht on dht.LIMIT_B2KID = llt.LIMIT_B2KID and llt.bank_id=GET_PARAM('BANK_ID') and dht.bank_id=GET_PARAM('BANK_ID')
INNER JOIN TBAADM.GAM ON GAM.ACID=DHT.ACID
left join c8pf c82 on acct_crncy_code = c82.c8ccy) FIN_LIMIT_LINK ON TRIM(FIN_LIMIT_LINK.LIMIT_PREFIX) = TRIM(A.LIMIT_PREFIX) 
AND TRIM(FIN_LIMIT_LINK.LIMIT_SUFFIX) = TRIM(A.LIMIT_SUFFIX)
AND TRIM(A.ACCT_NUM) = TRIM(FIN_LIMIT_LINK.FORACID)







drop table limit_core_linkage_report

create table limit_core_linkage_report as
select DISTINCT a.LIMIT_PREFIX LEG_LIMIT_PREFIX,FIN_LIMIT_LINK.LIMIT_PREFIX FIN_LIMIT_PREFIX,CASE WHEN  A.LIMIT_PREFIX = FIN_LIMIT_LINK.LIMIT_PREFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_PREFIX,
a.LIMIT_SUFFIX LEG_LIMIT_SUFFIX,FIN_LIMIT_LINK.LIMIT_SUFFIX FIN_LIMIT_SUFFIX,CASE WHEN  a.LIMIT_SUFFIX = FIN_LIMIT_LINK.LIMIT_SUFFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_SUFFIX,
LIMIT_AMOUNT LEG_LIMIT_AMOUNT,SANCT_LIM FIN_LIMIT_AMOUNT,CASE WHEN  LIMIT_AMOUNT  = SANCT_LIM THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_AMOUNT,
((SCBAL+scsuma)/c8pwd) leg_fcy_limit_utilisation,(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (clr_bal_amt+future_bal_amt) ELSE fin_FCY_utilisation_AMOUNT END) fin_fcy_limit_utilisation,
(((SCBAL+scsuma)/c8pwd)*c8lsar) leg_utilisation_AMOUNT_equ_KWD,(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END) fin_utilisation_AMOUNT_equ_KWD ,
(sum((CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END)) over( PARTITION by LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS )  ) group_fin_KWD_amount,
CASE WHEN  ROUND(ABS((((SCBAL+scsuma)/c8pwd)*c8lsar)),3)   = 
ROUND(ABS(sum(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END) over( PARTITION by LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS )),3) THEN 'TRUE' ELSE 'FALSE' END MATCH_utilisation_AMOUNT,
 case when (SCBAL+scsuma) <0 then 'DR' else 'CR' end DR_CR_ACCOUNT_BAL,
LIMIT_CCY LEG_LIMIT_CCY,CRNCY_CODE FIN_CRNCY_CODE,CASE WHEN  LIMIT_CCY  = CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_CCY,
LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS LEG_ACCT_NUM,FORACID FIN_ACCT_NUM,CASE WHEN  ACCT_NUM  = FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCT_NUM
 from LIMIT_LINKAGE_TO_ACCT_O_TABLE A
 left join (select DISTINCT LIMIT_SUFFIX_CODE LIMIT_SUFFIX from LIMIT_SUFFIX_CODE_AND_DESC where upper(LIMIT_SUFFIX_DESC) like '%LOA%' OR upper(LIMIT_SUFFIX_DESC) like '%OD%') LND on a.LIMIT_SUFFIX = LND.LIMIT_SUFFIX
LEFT JOIN MAP_ACC  ON A.ACCT_NUM = FIN_ACC_NUM
left join scpf on scab||scan||SCAS = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
left join c8pf on  trim(C8CCY) = trim(SCCCY)
LEFT JOIN
(select DISTINCT LLT.SANCT_LIM,LLT.LIM_SANCT_DATE,LLT.ORIG_LIM_EXP_DATE,LLT.CUST_ID,LLT.LIMIT_PREFIX,LLT.LIMIT_SUFFIX,GAM.FORACID,LLT.CRNCY_CODE,llt.BANK_ID,UTIL_LIMIT_FUND_BASED,LIAB,LC_SINGLE_TRAN_FLG,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end) fin_fcy_utilisation_AMOUNT,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end)*c81.c8lsar fin_KWD_utilisation_AMOUNT,
gam.clr_bal_amt,gam.clr_bal_amt*c82.c8lsar KWD_clr_bal_amt, gam.future_bal_amt,gam.future_bal_amt*c82.c8lsar KWD_future_bal_amt
from tbaadm.llt
left join c8pf c81 on LLT.CRNCY_CODE = c81.c8ccy
inner join (select a.* from tbaadm.dht a
inner join (select ACID,max(SERIAL_NUM) SERIAL_NUM from tbaadm.dht group by ACID) b on a.ACID = b.ACID and a.SERIAL_NUM = b.SERIAL_NUM) dht on dht.LIMIT_B2KID = llt.LIMIT_B2KID and llt.bank_id=GET_PARAM('BANK_ID') and dht.bank_id=GET_PARAM('BANK_ID')
INNER JOIN TBAADM.GAM ON GAM.ACID=DHT.ACID
left join c8pf c82 on acct_crncy_code = c82.c8ccy) FIN_LIMIT_LINK ON TRIM(FIN_LIMIT_LINK.LIMIT_PREFIX) = TRIM(A.LIMIT_PREFIX) 
AND TRIM(FIN_LIMIT_LINK.LIMIT_SUFFIX) = TRIM(A.LIMIT_SUFFIX)
AND TRIM(A.ACCT_NUM) = TRIM(FIN_LIMIT_LINK.FORACID)


select DISTINCT a.LIMIT_PREFIX LEG_LIMIT_PREFIX,FIN_LIMIT_LINK.LIMIT_PREFIX FIN_LIMIT_PREFIX,CASE WHEN  A.LIMIT_PREFIX = FIN_LIMIT_LINK.LIMIT_PREFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_PREFIX,
a.LIMIT_SUFFIX LEG_LIMIT_SUFFIX,FIN_LIMIT_LINK.LIMIT_SUFFIX FIN_LIMIT_SUFFIX,CASE WHEN  a.LIMIT_SUFFIX = FIN_LIMIT_LINK.LIMIT_SUFFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_SUFFIX,
LIMIT_AMOUNT LEG_LIMIT_AMOUNT,SANCT_LIM FIN_LIMIT_AMOUNT,CASE WHEN  LIMIT_AMOUNT  = SANCT_LIM THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_AMOUNT,
((SCBAL+scsuma)/c8pwd) leg_fcy_limit_utilisation,(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (clr_bal_amt+future_bal_amt) ELSE fin_FCY_utilisation_AMOUNT END) fin_fcy_limit_utilisation,
(((SCBAL+scsuma)/c8pwd)*c8lsar) leg_utilisation_AMOUNT_equ_KWD,(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END) fin_utilisation_AMOUNT_equ_KWD ,
(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (((SCBAL+scsuma)/c8pwd)*c8lsar) ELSE sum((((SCBAL+scsuma)/c8pwd)*c8lsar)) over(partition by a.LIMIT_PREFIX||a.LIMIT_SUFFIX ) END) group_leg_KWD_amount,
(sum((CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END)) over( PARTITION by LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS )  ) group_fin_KWD_amount,
CASE WHEN abs(round( (CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (((SCBAL+scsuma)/c8pwd)*c8lsar) ELSE sum((((SCBAL+scsuma)/c8pwd)*c8lsar)) over(partition by a.LIMIT_PREFIX||a.LIMIT_SUFFIX ) END),3))   = 
abs(ROUND((sum(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt+KWD_future_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END) over( PARTITION by LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS )),3)) THEN 'TRUE' ELSE 'FALSE' END MATCH_utilisation_AMOUNT,
 case when (SCBAL+scsuma) <0 then 'DR' else 'CR' end DR_CR_ACCOUNT_BAL,
LIMIT_CCY LEG_LIMIT_CCY,CRNCY_CODE FIN_CRNCY_CODE,CASE WHEN  LIMIT_CCY  = CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_CCY,
LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS leg_internal_acc_num,
ACCT_NUM mapped_ACCT_NUM,FORACID FIN_ACCT_NUM,CASE WHEN  ACCT_NUM  = FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCT_NUM
 from LIMIT_LINKAGE_TO_ACCT_O_TABLE A
 left join (select DISTINCT LIMIT_SUFFIX_CODE LIMIT_SUFFIX from LIMIT_SUFFIX_CODE_AND_DESC where upper(LIMIT_SUFFIX_DESC) like '%LOA%' OR upper(LIMIT_SUFFIX_DESC) like '%OD%') LND on a.LIMIT_SUFFIX = LND.LIMIT_SUFFIX
LEFT JOIN MAP_ACC  ON A.ACCT_NUM = FIN_ACC_NUM
left join scpf on scab||scan||SCAS = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
left join c8pf on  trim(C8CCY) = trim(SCCCY)
LEFT JOIN
(select DISTINCT LLT.SANCT_LIM,LLT.LIM_SANCT_DATE,LLT.ORIG_LIM_EXP_DATE,LLT.CUST_ID,LLT.LIMIT_PREFIX,LLT.LIMIT_SUFFIX,GAM.FORACID,LLT.CRNCY_CODE,llt.BANK_ID,UTIL_LIMIT_FUND_BASED,LIAB,LC_SINGLE_TRAN_FLG,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end) fin_fcy_utilisation_AMOUNT,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end)*c81.c8lsar fin_KWD_utilisation_AMOUNT,
gam.clr_bal_amt,gam.clr_bal_amt*c82.c8lsar KWD_clr_bal_amt, gam.future_bal_amt,gam.future_bal_amt*c82.c8lsar KWD_future_bal_amt
from tbaadm.llt
left join c8pf c81 on LLT.CRNCY_CODE = c81.c8ccy
inner join (select a.* from tbaadm.dht a
inner join (select ACID,max(SERIAL_NUM) SERIAL_NUM from tbaadm.dht group by ACID) b on a.ACID = b.ACID and a.SERIAL_NUM = b.SERIAL_NUM) dht on dht.LIMIT_B2KID = llt.LIMIT_B2KID and llt.bank_id=GET_PARAM('BANK_ID') and dht.bank_id=GET_PARAM('BANK_ID')
INNER JOIN TBAADM.GAM ON GAM.ACID=DHT.ACID
left join c8pf c82 on acct_crncy_code = c82.c8ccy) FIN_LIMIT_LINK ON TRIM(FIN_LIMIT_LINK.LIMIT_PREFIX) = TRIM(A.LIMIT_PREFIX) 
AND TRIM(FIN_LIMIT_LINK.LIMIT_SUFFIX) = TRIM(A.LIMIT_SUFFIX)
AND TRIM(A.ACCT_NUM) = TRIM(FIN_LIMIT_LINK.FORACID)




select DISTINCT a.LIMIT_PREFIX LEG_LIMIT_PREFIX,FIN_LIMIT_LINK.LIMIT_PREFIX FIN_LIMIT_PREFIX,CASE WHEN  A.LIMIT_PREFIX = FIN_LIMIT_LINK.LIMIT_PREFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_PREFIX,
a.LIMIT_SUFFIX LEG_LIMIT_SUFFIX,FIN_LIMIT_LINK.LIMIT_SUFFIX FIN_LIMIT_SUFFIX,CASE WHEN  a.LIMIT_SUFFIX = FIN_LIMIT_LINK.LIMIT_SUFFIX THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_SUFFIX,
LIMIT_AMOUNT LEG_LIMIT_AMOUNT,SANCT_LIM FIN_LIMIT_AMOUNT,CASE WHEN  LIMIT_AMOUNT  = SANCT_LIM THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_AMOUNT,
((scbal -(scsum1+scsum2))/c8pwd) leg_fcy_limit_utilisation,(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (clr_bal_amt) ELSE fin_FCY_utilisation_AMOUNT END) fin_fcy_limit_utilisation,
(((scbal -(scsum1+scsum2))/c8pwd)*c8lsar) leg_utilisation_AMOUNT_equ_KWD,(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END) fin_utilisation_AMOUNT_equ_KWD ,
(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (((scbal -(scsum1+scsum2))/c8pwd)*c8lsar) ELSE sum((((scbal -(scsum1+scsum2))/c8pwd)*c8lsar)) over(partition by a.LIMIT_PREFIX||a.LIMIT_SUFFIX ) END) group_leg_KWD_amount,
(sum((CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END)) over( PARTITION by LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS )  ) group_fin_KWD_amount,
CASE WHEN abs(round( (CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (((scbal -(scsum1+scsum2))/c8pwd)*c8lsar) ELSE sum((((scbal -(scsum1+scsum2))/c8pwd)*c8lsar)) over(partition by a.LIMIT_PREFIX||a.LIMIT_SUFFIX ) END),3))   = 
abs(ROUND((sum(CASE WHEN LND.LIMIT_SUFFIX IS NOT NULL THEN (KWD_clr_bal_amt) ELSE fin_KWD_utilisation_AMOUNT END) over( PARTITION by LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS )),3)) THEN 'TRUE' ELSE 'FALSE' END MATCH_utilisation_AMOUNT,
 case when (scbal -(scsum1+scsum2)) <0 then 'DR' else 'CR' end DR_CR_ACCOUNT_BAL,
LIMIT_CCY LEG_LIMIT_CCY,CRNCY_CODE FIN_CRNCY_CODE,CASE WHEN  LIMIT_CCY  = CRNCY_CODE THEN 'TRUE' ELSE 'FALSE' END MATCH_LIMIT_CCY,
LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS leg_internal_acc_num,
ACCT_NUM mapped_ACCT_NUM,FORACID FIN_ACCT_NUM,CASE WHEN  ACCT_NUM  = FORACID THEN 'TRUE' ELSE 'FALSE' END MATCH_ACCT_NUM
 from LIMIT_LINKAGE_TO_ACCT_O_TABLE A
 left join (select DISTINCT LIMIT_SUFFIX_CODE LIMIT_SUFFIX from LIMIT_SUFFIX_CODE_AND_DESC where upper(LIMIT_SUFFIX_DESC) like '%LOA%' OR upper(LIMIT_SUFFIX_DESC) like '%OD%') LND on a.LIMIT_SUFFIX = LND.LIMIT_SUFFIX
LEFT JOIN MAP_ACC  ON A.ACCT_NUM = FIN_ACC_NUM
left join scpf on scab||scan||SCAS = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
left join c8pf on  trim(C8CCY) = trim(SCCCY)
LEFT JOIN
(select DISTINCT LLT.SANCT_LIM,LLT.LIM_SANCT_DATE,LLT.ORIG_LIM_EXP_DATE,LLT.CUST_ID,LLT.LIMIT_PREFIX,LLT.LIMIT_SUFFIX,GAM.FORACID,LLT.CRNCY_CODE,llt.BANK_ID,UTIL_LIMIT_FUND_BASED,LIAB,LC_SINGLE_TRAN_FLG,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end) fin_fcy_utilisation_AMOUNT,
(case when LC_SINGLE_TRAN_FLG='N' then LIAB else UTIL_LIMIT_FUND_BASED end)*c81.c8lsar fin_KWD_utilisation_AMOUNT,
gam.clr_bal_amt,gam.clr_bal_amt*c82.c8lsar KWD_clr_bal_amt, gam.future_bal_amt,gam.future_bal_amt*c82.c8lsar KWD_future_bal_amt
from tbaadm.llt
left join c8pf c81 on LLT.CRNCY_CODE = c81.c8ccy
inner join (select a.* from tbaadm.dht a
inner join (select ACID,max(SERIAL_NUM) SERIAL_NUM from tbaadm.dht group by ACID) b on a.ACID = b.ACID and a.SERIAL_NUM = b.SERIAL_NUM) dht on dht.LIMIT_B2KID = llt.LIMIT_B2KID and llt.bank_id=GET_PARAM('BANK_ID') and dht.bank_id=GET_PARAM('BANK_ID')
INNER JOIN TBAADM.GAM ON GAM.ACID=DHT.ACID
left join c8pf c82 on acct_crncy_code = c82.c8ccy) FIN_LIMIT_LINK ON TRIM(FIN_LIMIT_LINK.LIMIT_PREFIX) = TRIM(A.LIMIT_PREFIX) 
AND TRIM(FIN_LIMIT_LINK.LIMIT_SUFFIX) = TRIM(A.LIMIT_SUFFIX)
AND TRIM(A.ACCT_NUM) = TRIM(FIN_LIMIT_LINK.FORACID) 
