========================================================================================================================================================================================== 
****************************************************************************************************************************************************************************************** 
validationScript.sql 
--SMS REGISTRATION
  SELECT  REASON_FOR_NOT_MIGRATING,COUNT(*) FROM(
SELECT YSMSCUPF01.*,CASE WHEN TRIM(CU01_STS) !='A' THEN 'INACTIVE RECORD'
                        WHEN FIN_CIF_ID IS NULL THEN 'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' 
                        WHEN CONV_TO_VALID_DATE(TRIM(CU01_DTER),'YYYYMMDD') <= TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY') THEN 'AUTO RENEWAL DATE IS LESS THAN '||TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY')
                        WHEN IS_JOINT= 'Y' THEN 'JOINT CUSTOMER' 
                         WHEN  CONV_TO_VALID_DATE(TRIM(CU01_DTER),'YYYYMMDD') < TO_DATE('10-07-2017','DD-MM-YYYY') THEN 'EXPIRY DATE IS LESS THAN MIGRATION DATE' 
                        ELSE 'SUBSCRIPTION DETAILS NOT EXIST OR CLOSED ACCOUNTS' END REASON_FOR_NOT_MIGRATING
                        FROM YSMSCUPF01
LEFT JOIN MAP_CIF M ON GFCLC =CU01_CLC AND GFCUS =CU01_CUS 
WHERE TRIM(CU01_CLC)||TRIM(CU01_CUS) NOT IN(SELECT SUBSTR(CUST_ID,2) FROM SMS_ALERTS_REG_O_TABLE)
) GROUP BY REASON_FOR_NOT_MIGRATING


--SMS SUBSCRIPTION
SELECT  REASON_FOR_NOT_MIGRATING,COUNT(*) FROM(
SELECT YSMSACPF01.*,CASE WHEN NVL(AC01_STS,' ') !='A' THEN 'INACTIVE RECORD'
                        WHEN FIN_ACC_NUM IS NULL THEN  'ACCOUNT NOT MIGRATED' 
                        ELSE 'ALERT REGISTRATION NOT AVAILABLE OR NOT MIGRATED' END REASON_FOR_NOT_MIGRATING FROM YSMSACPF01 
                        LEFT JOIN MAP_ACC MA ON MA.LEG_BRANCH_ID||MA.LEG_SCAN||MA.LEG_SCAS = AC01_SEAN
                        WHERE AC01_SEAN NOT IN(SELECT LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS FROM SMS_ALERTS_SUB_O_TABLE INNER JOIN MAP_ACC MA ON ALRT_ACCT_ID = FIN_ACC_NUM)
)GROUP BY REASON_FOR_NOT_MIGRATING


--CORPORATE E-BANKING USER
 SELECT REASON_FOR_NOT_MIGRATING ,COUNT(*) FROM(
  SELECT CU.*,'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' REASON_FOR_NOT_MIGRATING FROM CORP_EBANKING_USER  CU
     LEFT JOIN MAP_CIF M ON M.FIN_CIF_ID = TRIM(CU.CIF_ID)
     LEFT JOIN CRMUSER.ACCOUNTS A ON A.ORGKEY = M.FIN_CIF_ID AND A.BANK_ID = GET_PARAM ('BANK_ID')
  WHERE ORGKEY IS NULL
  ) GROUP BY REASON_FOR_NOT_MIGRATING;
  
 SELECT REASON_FOR_NOT_MIGRATING ,COUNT(*) FROM(
  SELECT CU.*,case WHEN  individual = 'Y' THEN 'THIS IS RETAIL USER' when M.FIN_CIF_ID is null then 'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' 
  else 'DUPLICATE CORP_ID AND USER_ID' END REASON_FOR_NOT_MIGRATING FROM CORP_EBANKING_USER  CU
     LEFT JOIN MAP_CIF M ON TRIM(M.FIN_CIF_ID) = TRIM(CU.CIF_ID)
     LEFT JOIN CRMUSER.ACCOUNTS A ON A.ORGKEY = M.FIN_CIF_ID AND A.BANK_ID = GET_PARAM ('BANK_ID')
     left join  (
SELECT DISTINCT * FROM ECECUSER.CUSR@DBREAD_USER FIN_CUSR
inner JOIN ECECUSER.CSIP@DBREAD_USER FIN_CSIP ON FIN_CSIP.INDIVIDUAL_ID = FIN_CUSR.INDIVIDUAL_ID  
WHERE FIN_CSIP.CHANNEL_ID='I' and FIN_CUSR.DB_TS='1' AND FIN_CUSR.DB_TS='1' and FIN_CSIP.DB_TS='1'  AND FIN_CUSR.BANK_ID='01' and USER_ID not like 'SMS%'-- AND FIN_CSIP.DEL_FLG='N'
) b on  cu.cif_id = B.CUST_ID and upper(NVL(trim(cu.USER_ID),' ')) = NVL(b.USER_ID,' ')
  WHERE ORGKEY IS NULL or B.CUST_ID is null
  ) GROUP BY REASON_FOR_NOT_MIGRATING;
  
   SELECT REASON_FOR_NOT_MIGRATING ,COUNT(*) FROM(
  SELECT CU.*,'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' REASON_FOR_NOT_MIGRATING FROM CORP_EBANKING_USER_retail  CU
     LEFT JOIN MAP_CIF M ON M.FIN_CIF_ID = TRIM(CU.CIF_ID)
     LEFT JOIN CRMUSER.ACCOUNTS A ON A.ORGKEY = M.FIN_CIF_ID AND A.BANK_ID = GET_PARAM ('BANK_ID')
     left join  (
SELECT DISTINCT * FROM ECECUSER.CUSR@DBREAD_USER FIN_CUSR
inner JOIN ECECUSER.CSIP@DBREAD_USER FIN_CSIP ON FIN_CSIP.INDIVIDUAL_ID = FIN_CUSR.INDIVIDUAL_ID  
WHERE FIN_CSIP.CHANNEL_ID='I' and FIN_CUSR.DB_TS='1' AND FIN_CUSR.DB_TS='1' and FIN_CSIP.DB_TS='1'  AND FIN_CUSR.BANK_ID='01' and USER_ID not like 'SMS%'-- AND FIN_CSIP.DEL_FLG='N'
) b on  cu.cif_id = B.CUST_ID and upper(NVL(trim(cu.USER_ID),' ')) = NVL(b.USER_ID,' ')
  WHERE ORGKEY IS NULL or B.CUST_ID is null
  ) GROUP BY REASON_FOR_NOT_MIGRATING;
  
--CORPORATE USER ACCESS ACCOUNT
 
 DROP TABLE USER_ACCOUNT_ACCESS_MIGRATED;
 
 CREATE TABLE USER_ACCOUNT_ACCESS_MIGRATED AS
SELECT  TRIM(NEEAN) ACCESS_TO_ACCOUNT_NUMBER FROM USER_ACCOUNT_ACCESS_O_TABLE
INNER JOIN MAP_ACC ON FIN_ACC_NUM = TRIM(ACID)
INNER JOIN NEPF ON TRIM (NEAB)||TRIM(NEAN)||TRIM(NEAS) = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS 

SELECT REASON_FOR_NOT_MIGRATING,COUNT(*) FROM(
SELECT DISTINCT E_BANKING_USER_ACCOUNT_ACCESS.*,CASE WHEN NEEAN IS NULL THEN 'ACCOUNT DOES NOT EXISTS AS OF '||TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY')
                                            WHEN FIN_ACC_NUM IS NULL THEN 'ACCOUNT NOT MIGRATING IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.'
                                            WHEN MAP_ACC.SCHM_TYPE='OOO'  THEN 'OFFICE ACCOUNT IN EQUATION' 
                                             WHEN SCHM_TYPE NOT IN('SBA','CAA','ODA') THEN 'NOT A OPERATIVE ACCOUNT NUMBER' END REASON_FOR_NOT_MIGRATING  FROM
E_BANKING_USER_ACCOUNT_ACCESS
LEFT JOIN NEPF ON TRIM (NEEAN) = TRIM (ACCESS_TO_ACCOUNT_NUMBER)
LEFT JOIN MAP_ACC ON LEG_BRANCH_ID || LEG_SCAN || LEG_SCAS = TRIM(NEAB) || TRIM(NEAN )|| TRIM(NEAS)
WHERE TRIM(ACCESS_TO_ACCOUNT_NUMBER) NOT IN(SELECT TRIM(ACCESS_TO_ACCOUNT_NUMBER) FROM USER_ACCOUNT_ACCESS_MIGRATED)
) GROUP BY REASON_FOR_NOT_MIGRATING

SELECT REASON_FOR_NOT_MIGRATING,COUNT(*) FROM(
SELECT DISTINCT E_BANKING_USER_ACCOUNT_ACCESS.*,CASE WHEN NEEAN IS NULL THEN 'ACCOUNT DOES NOT EXISTS AS OF '||TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY')
                                            WHEN FIN_ACC_NUM IS NULL THEN 'ACCOUNT NOT MIGRATING IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.'
                                            WHEN MAP_ACC.SCHM_TYPE='OOO'  THEN 'OFFICE ACCOUNT IN EQUATION' 
                                             WHEN SCHM_TYPE NOT IN('SBA','CAA','ODA') THEN 'NOT A OPERATIVE ACCOUNT NUMBER' END REASON_FOR_NOT_MIGRATING  FROM
E_BANKING_USER_ACCOUNT_ACCESS
LEFT JOIN NEPF ON TRIM (NEEAN) = TRIM (ACCESS_TO_ACCOUNT_NUMBER)
LEFT JOIN MAP_ACC ON LEG_BRANCH_ID || LEG_SCAN || LEG_SCAS = TRIM(NEAB) || TRIM(NEAN )|| TRIM(NEAS)
WHERE trim(ACCESS_TO_ACCOUNT_NUMBER) not in(select trim(ACID) from USER_ACCOUNT_ACCESS_O_TABLE)
) GROUP BY REASON_FOR_NOT_MIGRATING
  
  
--SMS BANKING USER
SELECT REASON_FOR_NOT_MIGRATING,COUNT(*) FROM(
SELECT YSMSCUPF01.*,CASE WHEN INDIVIDUAL='N' THEN 'CORPORATE SMS BANKING CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' 
                         WHEN TRIM(CU01_STS) !='A' THEN 'INACTIVE RECORD'
                        WHEN FIN_CIF_ID IS NULL THEN 'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' 
                        WHEN CIF IS NULL THEN 'NO NEED TO MIGRATE AND NOT THERE IN TO BE MIGRATED LIST'
                        ELSE 'SUBSCRIPTION DETAILS NOT EXIST OR CLOSED ACCOUNTS' END REASON_FOR_NOT_MIGRATING
                        FROM YSMSCUPF01
LEFT JOIN MAP_CIF M ON GFCLC =CU01_CLC AND GFCUS =CU01_CUS AND IS_JOINT <> 'Y'
LEFT JOIN SMS_BANK_CIF ON TRIM(CIF) = trim(CU01_CLC)||trim(CU01_CUS) 
WHERE '0'||TRIM(CU01_CLC)||TRIM(CU01_CUS) NOT IN(SELECT CUST_ID FROM SMS_AND_E_BANKING_USER_O_TABLE WHERE SMS_ENABLED='Y'  )
 ) GROUP BY REASON_FOR_NOT_MIGRATING;
 
 --MOBILE BANKING USER 
SELECT REASON_FOR_NOT_MIGRATING,COUNT(*) FROM(
SELECT MOBILE_BANKING_USER.*,CASE  WHEN M.INDIVIDUAL='N' THEN 'CORPORATE CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.'
                                   WHEN USR_STATUS!='ACTIVE' THEN 'USER NOT ACTIVE'
                                  WHEN GFPF.GFBRNM IS NULL THEN 'CUSTOMER RECORDS NOT EXIST IN EQUATION CUSTOMER MASTER TABLE AS OF'||TO_DATE(GET_PARAM('EOD_DATE'),'DD-MM-YYYY')
                                  WHEN M.GFBRNM IS NULL THEN 'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.'  
                                  WHEN to_date(USR_DATE_LAST_UPDATE,'yyyy-mm-dd hh24:mi:ss')  < add_months(to_date(get_param('EOD_MIL'),'MM-DD-YYYY hh24:mi:ss'),-6) THEN 'USER LAST UPDATE DATE IS MORE THAN 6 MONTH' END REASON_FOR_NOT_MIGRATING
 FROM MOBILE_BANKING_USER
LEFT JOIN GFPF ON TRIM(GFPF.GFBRNM)||TRIM(GFPF.GFCUS) = TRIM(USR_EXTERNAL_USER_ID)
LEFT JOIN MAP_CIF M ON  TRIM(M.GFBRNM)||TRIM(M.GFCUS) =  TRIM(USR_EXTERNAL_USER_ID)AND IS_JOINT <> 'Y'
WHERE TRIM(USR_EXTERNAL_USER_ID) NOT IN(
SELECT TRIM(CUST_ID) FROM SMS_AND_E_BANKING_USER_O_TABLE WHERE MOBILE_ENABLED='Y'
  )  
  ) GROUP BY REASON_FOR_NOT_MIGRATING;
  
  
--E_BANKING USER


 CREATE INDEX IDX_OBC ON ONLINE_BANK_CUST_DTLS(CUSTOMER_NO,USER_ID,EMAIL,LASTLOG_DATE);
 
 CREATE INDEX IDX_OBC1 ON ONLINE_BANK_CUST_DTLS_UNQ_DATA(CUSTOMER_NO,USERID,EMAIL,LASTLOG_DATE);
 

SELECT REASON_FOR_NOT_MIGRATING,COUNT(*) FROM (
SELECT A.*,CASE WHEN INDIVIDUAL='N' THEN 'CORPORATE CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' 
                                    WHEN TRIM(CUSTOMER_NO) IS NULL THEN 'CUSTOMER NUMBER IS BLANK'
                                     WHEN TRIM(STATUS) IS NULL OR  TRIM(STATUS)!='A' THEN 'INACTIVE RECORD' 
                                     WHEN FIN_CIF_ID IS NULL THEN 'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.' 
                                     WHEN REGEXP_LIKE(USER_ID, UNISTR('[\0600-\06FF]')) THEN 'ARABIC USERID''S CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.'
                                     WHEN CUST_ID IS NOT NULL THEN 'DUPLICATE RECORDS [ SAME CUSTOMER ID ,CIF AND LAST LOGIN TIME]' 
                                     WHEN U.DEL_FLG='1' OR U.STATUS1!='A'  THEN 'DELETED OR INACTIVE RECORD'
                                     WHEN LASTLOG_DATE IS NULL THEN 'DUPLICATE RECORDS AND LAST LOGIN DATE NULL RECORD [CUSTOMER HAS NOT LOGGED IN]' 
                                     ELSE 'DUPLICATE RECORDS WITH LAST LOGIN DATE IS LESSER THAN OTHER RECORD' END REASON_FOR_NOT_MIGRATING  
FROM ONLINE_BANK_CUST_DTLS A
LEFT JOIN MAP_CIF M ON M.FIN_CIF_ID = CUSTOMER_NO AND IS_JOINT <> 'Y'
LEFT JOIN SMS_AND_E_BANKING_USER_O_TABLE ON TRIM(CUSTOMER_NO) = TRIM(CUST_ID)
LEFT JOIN (SELECT CUSTOMERNO,USERID,DELETEFLAG DEL_FLG,STATUS STATUS1 FROM USERS WHERE DELETEFLAG = '0' AND STATUS = 'A') U ON CUSTOMER_NO = U.CUSTOMERNO AND USER_ID=U.USERID
 WHERE
 NOT EXISTS (
 SELECT 1 FROM ONLINE_BANK_CUST_DTLS_UNQ_DATA B WHERE CUSTOMER_NO IN(SELECT CUST_ID FROM SMS_AND_E_BANKING_USER_O_TABLE WHERE E_BANKING_ENEBLED='Y' ) AND  A.CUSTOMER_NO = B.CUSTOMER_NO AND 
  A.USER_ID = B.USERID AND A.EMAIL = B.EMAIL AND A.LASTLOG_DATE = B.LASTLOG_DATE
 )
 ) GROUP BY REASON_FOR_NOT_MIGRATING;
 
 
--E-BANKING BENEFICIARY 

 SELECT REASON_FOR_NOT_MIGRATING,COUNT(*) FROM (
 SELECT INTERNET_PAYEE.*,CASE WHEN INDIVIDUAL='N' THEN 'CORPORATE CUSTOMERS BENEFICIARY NOT MIGRATING' 
                              WHEN PAYEE_TYPE='INTERNATIONAL' AND PAYEE_TRAN_CURRENCY IS NULL THEN 'BENEFICIARY ACCOUNT CURRENCY IS NULL FOR INTERNATIONAL BENEFICIARY'
                              WHEN CCY IS NULL THEN 'BENEFICIARY ACCOUNT CURRENCY NOT CONFIGURED IN FINACLE'
                              WHEN TRIM(CUSTOMER_NO) IS NULL THEN 'CUSTOMER NUMBER IS BLANK'
                              WHEN FIN_CIF_ID IS NULL THEN 'CUSTOMER NOT MIGRATED IN FINACLE CORE DUE TO CLOSED ACCOUNTS, NO ACCOUNTS , ZERO BALANCE ACCOUNTS ETC.'
                              WHEN STATUS !='A' THEN 'INACTIVE RECORD'
                              WHEN IS_DELETED !='0' THEN 'DELETED RECORD'   
                              WHEN TRIM(BIC) IS NULL THEN 'BIC CODE DOES NOT EXIST' 
                              WHEN ROUTING_NO IS NULL THEN 'INVALID BIC CODE OR BIC NOT CONFIGURED IN FINACLE'
                              ELSE 'DUPLICATE RECORDS OR USER NOT MIGRATED'
                          END REASON_FOR_NOT_MIGRATING   FROM INTERNET_PAYEE
    LEFT JOIN MAP_CIF M ON SUBSTR (M.FIN_CIF_ID, 2, 10) = SUBSTR (CUSTOMER_NO, 2, 10)AND IS_JOINT <> 'Y'
    LEFT JOIN (SELECT DISTINCT TRIM(ROUTING_NO) ROUTING_NO FROM BANK_ROUTING_TABLE) ON ROUTING_NO = TRIM(BIC)
    LEFT JOIN E_BANK_CCY ON CCY = TRIM(PAYEE_TRAN_CURRENCY)
WHERE (CUSTOMER_NO||NVL(TRIM(PAYEE_NAME),CONVERT_CODES('ALPHABET','Y'))||PAYEE_ADDRESS1||PAYEE_ADDRESS2||TRIM(CONTACT_PHONENO)||
CASE WHEN IS_DELETED='1'  THEN 'Y' ELSE 'N' END||TO_DATE(SUBSTR(DATE_TIME_CREATED,1,19),'YYYY-MM-DD HH24:MI:SS')||BIC||PAYEE_TRAN_CURRENCY||trim(STATUS)||trim(IS_DELETED)) not IN(
    SELECT A.CORP_ID||BNF_NAME||BNF_ADDRESS_1||BNF_ADDRESS_2||BNF_MOB||'N'||R_MOD_TIME||BANK_IDENTIFIER||BNF_ACCT_CRN||'A0' FROM PAYEE_MASTER_O_TABLE A
    INNER JOIN CRMUSER.ACCOUNTS ON ORGKEY = TRIM(A.CORP_ID)
)
-- or STATUS = 'A' AND IS_DELETED ='0'
) GROUP BY  REASON_FOR_NOT_MIGRATING  ;

--MOBILE BANKING BENEFICIARY

drop table mb_migrated_ben;

create table mb_migrated_ben as
SELECT trim(CORP_ID) CORP_ID ,trim(BNF_NAME) BNF_NAME ,trim(ACCOUNT_ID) ACCOUNT_ID,trim(BANK_IDENTIFIER) BANK_IDENTIFIER FROM PAYEE_MASTER_O_TABLE WHERE (trim(CORP_ID),trim(BNF_NAME),trim(ACCOUNT_ID),trim(BANK_IDENTIFIER))IN(
  SELECT trim(USR_EXTERNAL_USER_ID),trim(BBF_BENEFICIARY_NAME),TRIM(SUBSTR(REPLACE(REPLACE(TRIM(MB.BBF_ACCOUNT_NUMBER),' ',''),'-',''),1,34)),trim(BIC) FROM MOBILE_BANKING_BENEFICIARY MB
  INNER JOIN MOBILE_BANKING_USER ON TRIM(BBF_USER_ID) = TRIM(USR_USER_ID) 
  );


drop table NOT_MIG_MOBILE_BEN;

CREATE TABLE NOT_MIG_MOBILE_BEN AS
SELECT MOBILE_BANKING_BENEFICIARY.*,USR_EXTERNAL_USER_ID FROM MOBILE_BANKING_BENEFICIARY
 LEFT JOIN MOBILE_BANKING_USER ON TRIM(BBF_USER_ID) = TRIM(USR_USER_ID) 
  WHERE (trim(USR_EXTERNAL_USER_ID),trim(BBF_BENEFICIARY_NAME),TRIM(SUBSTR(REPLACE(REPLACE(TRIM(BBF_ACCOUNT_NUMBER),' ',''),'-',''),1,34)),trim(BIC)) NOT IN(
  select * from mb_migrated_ben
);



SELECT REASON_FOR_NOT_MIGRATING,COUNT(*) FROM (
SELECT  a.*,CASE WHEN TRIM(BBF_STATUS) !='ACTIVE' THEN 'INACTIVE RECORD'
                                 WHEN CCY IS NULL THEN 'BENEFICIARY ACCOUNT CURRENCY NOT CONFIGURED IN FINACLE'
                                  WHEN BBF_IS_DELETED!='0' THEN 'RECORD IS DELETED' 
                                  when trim(USR_STATUS)!='ACTIVE' then 'MOBILE BANKING USER IS INACTIVE' 
                                  WHEN  a.USR_EXTERNAL_USER_ID IS NULL THEN 'PAYEE CUSTOMER NUMBER NOT AVAILABLE'
                                  WHEN REGEXP_LIKE(BBF_BENEFICIARY_NAME, UNISTR('[\0600-\06FF]')) THEN 'ARABIC BENEFICIARY NAME NOT MIGRATED'
                                 WHEN MAP_CIF.FIN_CIF_ID IS NULL THEN 'CUSTOMER NOT MIGRATED IN CORE'
                                 WHEN INDIVIDUAL='N' THEN 'CORPORATE CUSTOMERS BENEFICIARY NOT MIGRATING'
                                 WHEN ROUTING_NO IS NULL THEN 'INVALID BIC CODE OR BIC NOT CONFIGURED IN FINACLE'
                                 WHEN TRIM(BM.BANK_REF_NO)  IS NULL THEN 'BANK MASTER DETAILS NOT AVAILABLE'                                                                  
                                 WHEN BBF_BENEFICIARY_TYPE='ABK' AND LEG_BRANCH_ID IS NULL THEN 'SAME BANK BENEFICIARY ACCOUNT NUMBER NOT MIGRATED'
                                 WHEN E_USER.CUST_ID IS NULL THEN 'USER NOT MIGRATED IN E-BANKING' 
                                 ELSE 'DUPLICATE RECORDS'END REASON_FOR_NOT_MIGRATING FROM NOT_MIG_MOBILE_BEN a
LEFT JOIN MAP_CIF ON USR_EXTERNAL_USER_ID = FIN_CIF_ID
LEFT JOIN E_BANK_CCY ON CCY = TRAN_CCY
LEFT JOIN MAP_ACC ON BBF_ACCOUNT_NUMBER = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
left join MOBILE_BANKING_USER b on TRIM(a.USR_EXTERNAL_USER_ID) = TRIM(b.USR_EXTERNAL_USER_ID)
LEFT JOIN BANK_ROUTING_TABLE BR ON TRIM(ROUTING_NO) = TRIM(BIC) AND 
                                BR.NETWORK_TYPE = CASE WHEN TRIM(BBF_BENEFICIARY_TYPE)='ABK' THEN 'WIB' 
                                WHEN TRIM(BBF_BENEFICIARY_TYPE)='LOCAL' THEN 'KASIP' 
                                WHEN TRIM(BBF_BENEFICIARY_TYPE)='INTERNATIONAL' THEN 'SWI' END
                                AND CASE WHEN TRIM(BBF_BENEFICIARY_TYPE)='ABK' AND BR.BANK_REF_NO!='14539' THEN 0 ELSE 1 END = 1
LEFT JOIN BANK_MASTER_TABLE BM ON TRIM(BM.BANK_REF_NO) = TRIM(BR.BANK_REF_NO) 
LEFT JOIN SMS_AND_E_BANKING_USER_O_TABLE E_USER ON   MAP_CIF.FIN_CIF_ID = CUST_ID
)   GROUP BY  REASON_FOR_NOT_MIGRATING


--E-BANKING
SELECT COUNT(*) FROM ONLINE_BANK_CUST_DTLS

--MOBILE BANKING
SELECT COUNT(*) FROM MOBILE_BANKING_USER

--SMS REGISTRATION
SELECT COUNT(*) FROM YSMSCUPF01

--SMS SUBSCRIPTION
SELECT COUNT(*) FROM YSMSACPF01

--CORPORATE_USER_ACCESS_ACCOUNTS
SELECT COUNT(*) FROM E_BANKING_USER_ACCOUNT_ACCESS

--CORPORATE E-BANKING USER
SELECT COUNT(*) FROM CORP_EBANKING_USER

SELECT * FROM SMS_AND_E_BANKING_USER_O_TABLE

SELECT * FROM SMS_ALERTS_REG_O_TABLE

SELECT * FROM SMS_ALERTS_SUB_O_TABLE


SELECT * FROM CORP_E_BANKING_USER_O_TABLE

--CORPORATE E-BANKING USER
SELECT * FROM ONLINE_BANK_CUST_DTLS
INNER JOIN MAP_CIF M ON SUBSTR (M.FIN_CIF_ID, 2, 10) = SUBSTR (CUSTOMER_NO, 2, 10)AND IS_JOINT <> 'Y'
WHERE  INDIVIDUAL='N' 

--CORPORATE MOBILE BANKING USER
SELECT * FROM MOBILE_BANKING_USER
INNER JOIN MAP_CIF M ON SUBSTR (M.FIN_CIF_ID, 2, 10) = SUBSTR (USR_EXTERNAL_USER_ID, 2, 10)AND IS_JOINT <> 'Y'
WHERE  INDIVIDUAL='N' 

--CORPORATE SMS BANKING USER
SELECT * FROM YSMSCUPF01 S
       LEFT JOIN MAP_CIF M ON SUBSTR (M.FIN_CIF_ID, 2, 10) = S.CU01_CLC||S.CU01_CUS AND IS_JOINT <> 'Y'
WHERE  INDIVIDUAL='N'
