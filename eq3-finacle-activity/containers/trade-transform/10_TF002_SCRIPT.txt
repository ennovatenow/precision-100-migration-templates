TRUNCATE TABLE TF002;

COMMIT;

---------------INWARD BANK GUARANTEE---------------
INSERT INTO TF002 
(SELECT  
--BGFUNCCODE 
CASE WHEN B.REFNO_PFIX='ISS' THEN 'A'
     WHEN B.REFNO_PFIX='AMD' THEN 'U' END BGFUNCCODE,
--BGSOLID 
'700' BGSOLID, ---SOL.FIN_SOL_ID BGSOLID,
--BGSRLNUM 
CASE WHEN TRIM(PR.CODE) IN ('NOB','COL') THEN TRIM(REPLACE (M.MASTER_REF,'/','-')) ELSE trim('X'||replace(M.master_ref,'/','-')) END BGSRLNUM,
--EVENTAMT 
ABS(B.AMOUNT)/C8.C8PWD EVENTAMT,
--BGEXPIRYMONTHS
'' BGEXPIRYMONTHS, 
--BGEXPIRYDAYS
'' BGEXPIRYDAYS, 
--BGEXPIRYDATE
CASE WHEN M.EXPIRY_DAT IS NULL THEN TO_CHAR(ADD_MONTHS(CTRCT_DATE,998),'DD-MM-YYYY') else TO_CHAR(M.EXPIRY_DAT,'DD-MM-YYYY') END BGEXPIRYDATE,
--BGCLAIMEXPIRYMONTHS
'' BGCLAIMEXPIRYMONTHS, 
--BCLAIMEXPIRYDAYS
'' BCLAIMEXPIRYDAYS, 
--BGCLAIMEXPIRYDATE
CASE WHEN M.EXPIRY_DAT IS NULL THEN TO_CHAR(ADD_MONTHS(CTRCT_DATE,998),'DD-MM-YYYY') else TO_CHAR(M.EXPIRY_DAT,'DD-MM-YYYY') END BGCLAIMEXPIRYDATE, 
--BGCHARGEBORNEBY 
L.OUR_CHGS BGCHARGEBORNEBY,
--BGTYPE 
CASE WHEN TRIM(B.REFNO_PFIX)='AMD' THEN NULL ELSE 
     CASE WHEN PR.CODE='NOB' THEN 'ILGA'
          WHEN PR.CODE='COL' THEN 'ILGC'
          ELSE 'ICLG'
     END END BGTYPE,-----------------------------------------------------------------------------MAPPING
--BGCRITCRNCY 
M.CCY BGCRITCRNCY,
--BGAPPLCIFID
'' BGAPPLCIFID,--1) CASE WHEN TRIM(PR.CODE) IN ('NOB','COL') THEN BENM.FIN_CIF_ID ELSE END 2) PCPM.FIN_CIF_ID   -----CASE WHEN TRIM(PR.CODE) IN ('NOB','COL') and TRIM(BENM.FIN_CIF_ID) IS NOT NULL THEN BENM.FIN_CIF_ID ELSE PCPM.FIN_CIF_ID END BGAPPLCIFID,
--EVENTDATE 
TO_CHAR(B.FINISHED,'DD-MM-YYYY') EVENTDATE,
--BGPURPOSE
'' BGPURPOSE, 
--BGCLASS
--NEEDS TO CHANGE SUBCLASS AS PER NEW SETUP
CASE WHEN PR.CODE='IN1' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'IN90'
     WHEN PR.CODE='IN2' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'IN999'
     WHEN PR.CODE='ADV' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGAP'
     WHEN PR.CODE='PRF' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGPR'
     WHEN PR.CODE='RTN' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGRT'
     WHEN PR.CODE='CAS' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGCH'
     WHEN PR.CODE='PUR' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGPU'
     WHEN PR.CODE='COL' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGCL'
     WHEN PR.CODE='MAI' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGOT'
     WHEN PR.CODE='OTH' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGOT'
     WHEN PR.CODE='TEL' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGPH'
     WHEN PR.CODE='CAR' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGVH'
     WHEN PR.CODE='LBR' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGML'
     WHEN PR.CODE='SHP' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGSH'
     WHEN PR.CODE='IN1' AND TRIM(I.GTE_ID) = 'C' THEN 'IN90'
     WHEN PR.CODE='IN2' AND TRIM(I.GTE_ID) = 'C' THEN 'IN999'
     WHEN PR.CODE='ADV' AND TRIM(I.GTE_ID) = 'C' THEN 'LGAP'
     WHEN PR.CODE='PRF' AND TRIM(I.GTE_ID) = 'C' THEN 'LGPR'
     WHEN PR.CODE='RTN' AND TRIM(I.GTE_ID) = 'C' THEN 'LGRT'
     WHEN PR.CODE='CAS' AND TRIM(I.GTE_ID) = 'C' THEN 'LGCH'
     WHEN PR.CODE='PUR' AND TRIM(I.GTE_ID) = 'C' THEN 'LGPU'
     WHEN PR.CODE='COL' AND TRIM(I.GTE_ID) = 'C' THEN 'LGCL'
     WHEN PR.CODE='MAI' AND TRIM(I.GTE_ID) = 'C' THEN 'LGOT'
     WHEN PR.CODE='OTH' AND TRIM(I.GTE_ID) = 'C' THEN 'LGOT'
     WHEN PR.CODE='TEL' AND TRIM(I.GTE_ID) = 'C' THEN 'LGPH'
     WHEN PR.CODE='CAR' AND TRIM(I.GTE_ID) = 'C' THEN 'LGVH'
     WHEN PR.CODE='LBR' AND TRIM(I.GTE_ID) = 'C' THEN 'LGML'
     WHEN PR.CODE='SHP' AND TRIM(I.GTE_ID) = 'C' THEN 'LGSH'
--     WHEN PR.CODE='NOB' THEN 'LGOT'
END  BGCLASS,
--BGAPPLICABLERULES
'NONE' BGAPPLICABLERULES, 
--BGAPPLICABLESUBRULES
'' BGAPPLICABLESUBRULES, 
--BGFRUCTLIABAMT
'' BGFRUCTLIABAMT, 
--ISORGBGRECEIVED
'' ISORGBGRECEIVED, 
--BGREMARKS
SUBSTR(TRIM(U5.NAME)||TRIM(U2.NAME)||TRIM(L.PRESPNARR1)||TRIM(L.PRESPNARR2)||TRIM(L.PRESPNARR3)||TRIM(L.PRESPNARR4),1,100) BGREMARKS, 
--BGCLAIMPAYBYUS
'' BGCLAIMPAYBYUS,  
--LINKTOCOUNTERBG
'N' LINKTOCOUNTERBG, 
--IMPLICENSENO
'' IMPLICENSENO, 
--IMPLICENSEEXPDATE
'' IMPLICENSEEXPDATE, 
--CAPADQCODE
'' CAPADQCODE, 
--PROVISIONAMT
'' PROVISIONAMT, 
--FREECODE1
CASE WHEN TRIM(WORKGROUP)='SBLCMU' THEN 'SBLCM'
     WHEN TRIM(WORKGROUP)='UANNUL' THEN 'UANNL'
     WHEN TRIM(WORKGROUP)='UHALFY' THEN 'UHLFY'
     WHEN TRIM(WORKGROUP)='UQUART' THEN 'UQURT'
ELSE TRIM(WORKGROUP) END FREECODE1, 
--FREECODE2 
'' FREECODE2,
--FREECODE3 
'' FREECODE3,
--APPLOPERACCT
--CASE WHEN TRIM(OP.FIN_ACC_NUM) IS NOT NULL THEN TRIM(FIN_ACC_NUM) ELSE '0050129220000' END APPLOPERACCT, CHANGE AS PER SEBI'S MAIL AS OF 11-10-2017
CASE WHEN TRIM(OP.FIN_ACC_NUM) IS NOT NULL THEN TRIM(FIN_ACC_NUM) ELSE '700'||CN.CRNCY_ALIAS_NUM||'48103100' END APPLOPERACCT, 
--APPLPARTYNAME 
CASE WHEN TRIM(BENP.ADDRESS1) IS NOT NULL THEN TRIM(BENP.ADDRESS1) ELSE '.' END APPLPARTYNAME,
--APPLPARTYADDR1
CASE WHEN TRIM(BENP.ADDRESS2) IS NOT NULL THEN TRIM(BENP.ADDRESS2) ELSE '.' END APPLPARTYADDR1, 
--APPLPARTYADDR2
BENP.ADDRESS3 APPLPARTYADDR2,
--APPLPARTYADDR3
TRIM(SUBSTR(TRIM(BENP.ADDRESS4)||' '||TRIM(BENP.ADDRESS5),1,45)) APPLPARTYADDR3, 
--APPLPARTYCITY 
'' APPLPARTYCITY,
--APPLPARTYSTATE
'' APPLPARTYSTATE, 
--APPLPARTYCNTRY
BENP.COUNTRY APPLPARTYCNTRY, 
--APPLPARTYPINCODE
TRIM(BENP.ZIPCODE) APPLPARTYPINCODE,
--APPLREFNUM
'' APPLREFNUM, 
--BGRATECODE
'MID' BGRATECODE, 
--BGRATE
C8RTE BGRATE, 
--OTHERBANKREFNUM
SUBSTR(TRIM(B.THEIR_REF),1,16) OTHERBANKREFNUM, 
--PAYSYSID 
'' PAYSYSID,
--BENCIFID
'' BENCIFID, 
--BENNAME 
CASE WHEN TRIM(APP.ADDRESS1) IS NOT NULL THEN TRIM(APP.ADDRESS1) ELSE '.' END BENNAME,
--BENADDR1 
CASE WHEN TRIM(APP.ADDRESS2) IS NOT NULL THEN TRIM(APP.ADDRESS2) ELSE '.' END BENADDR1,
--BENADDR2 
APP.ADDRESS3 BENADDR2,
--BENADDR3 
TRIM(SUBSTR(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5),1,45)) BENADDR3,
--BENCITY 
'' BENCITY,
--BENSTATE
'' BENSTATE, 
--BENCNTRY
APP.COUNTRY BENCNTRY, 
--BENPINCODE
TRIM(APP.ZIPCODE) BENPINCODE, 
--BENTYPE 
'O' BENTYPE,
--BGCORRBANKCODE
'' BGCORRBANKCODE,
--BGCORRBRANCHCODE
'' BGCORRBRANCHCODE, 
--BGCORRBANKNAME
PCP.ADDRESS1 BGCORRBANKNAME, 
--BGCORRBANKADDR1
CASE WHEN TRIM(PCP.ADDRESS2) IS NULL AND TRIM(PCP.ADDRESS1) IS NOT NULL THEN '.' ELSE TRIM(PCP.ADDRESS2) END BGCORRBANKADDR1, 
--BGCORRBANKADDR2
PCP.ADDRESS3 BGCORRBANKADDR2, 
--BGCORRBANKADDR3
TRIM(SUBSTR(TRIM(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5)),1,35)) BGCORRBANKADDR3, 
--BGCORRBANKCITY
'' BGCORRBANKCITY, 
--BGCORRBANKSTATE
'' BGCORRBANKSTATE, 
--BGCORRBANKCNTRY
PCP.COUNTRY BGCORRBANKCNTRY, 
--BGCORRBANKPINCODE
TRIM(PCP.ZIPCODE) BGCORRBANKPINCODE, 
--BGBICCODE
PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH BGBICCODE, 
--PARTYID
'' PARTYID, 
--ADDRTYPE
'' ADDRTYPE, 
--BGCRNCYCODE
'' BGCRNCYCODE, 
--LIMITPREFIX
'' LIMITPREFIX, 
--LIMITSUFFIX
'' LIMITSUFFIX, 
--LIMITMARGINPCNT
'' LIMITMARGINPCNT, 
--INTERNALLIMITS
'' INTERNALLIMITS, 
--AMENDIND
CASE WHEN B.REFNO_PFIX='AMD' AND B.AMOUNT<0 THEN 'R' 
     WHEN B.REFNO_PFIX='AMD' AND B.AMOUNT>0 THEN 'E'
     ELSE '' END AMENDIND, 
--AMENDREMARKS
CASE WHEN B.REFNO_PFIX='AMD' THEN TO_CHAR(B.STATUS_EV) ELSE '' END AMENDREMARKS, 
--AMENDSTATUS
CASE WHEN B.REFNO_PFIX='AMD' THEN 'A' ELSE '' END AMENDSTATUS, 
--AMENDINITIATEDBY
CASE WHEN B.REFNO_PFIX='AMD' THEN 'A' ELSE '' END AMENDINITIATEDBY, 
--AUTORENEWAPPLICABLEFLG
'N' AUTORENEWAPPLICABLEFLG,--CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'Y' ELSE '' END 
--FINALEXPIRYDATE
'' FINALEXPIRYDATE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN '31-12-2099' ELSE '' END 
--AUTORENEWNEXTCYCLE
'' AUTORENEWNEXTCYCLE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'Y' ELSE '' END 
--AUTORENEWFREQTYPE
'' AUTORENEWFREQTYPE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'H' ELSE '' END 
--AUTORENEWFREQDATE
'' AUTORENEWFREQDATE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN TO_CHAR(TO_DATE(B.FINISHED,'YYYYMMDD'),'DD') ELSE '' END 
--AUTORENEWFREQWEEKNUM
'' AUTORENEWFREQWEEKNUM, 
--AUTORENEWFREQDAY
'' AUTORENEWFREQDAY, 
--ISFREQDAYONHOLIDAY
'' ISFREQDAYONHOLIDAY --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'N' ELSE '' END
FROM MASTER_ODS M
LEFT JOIN LCMASTER_ODS L ON M.KEY97=L.KEY97
LEFT JOIN BASEEVENT_ODS B ON B.MASTER_KEY=M.KEY97
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=M.PCP_PTY
LEFT JOIN GFPF_ODS PCPG ON TRIM(REPLACE(PCP.CUS_MNM,' ',''))=TRIM(TRIM(REPLACE(PCPG.GFCUS,' ',''))||TRIM(REPLACE(PCPG.GFCLC,' ',''))) --TRIM(PCPG.GFCUS1)=TRIM(PCPP.CUS_MNM)
LEFT JOIN MAP_CIF PCPM ON PCPG.GFCPNC=PCPM.GFCPNC
LEFT JOIN PARTYDTLS_ODS APP ON APP.KEY97=L.APP_PTY
LEFT JOIN PARTYDTLS_ODS BENP ON L.BEN_PTY=BENP.KEY97
LEFT JOIN GFPF_ODS BENG ON TRIM(REPLACE(BENP.CUS_MNM,' ',''))=TRIM(TRIM(REPLACE(BENG.GFCUS,' ',''))||TRIM(REPLACE(BENG.GFCLC,' ',''))) --TRIM(PCPG.GFCUS1)=TRIM(PCPP.CUS_MNM)
LEFT JOIN MAP_CIF BENM ON BENG.GFCPNC=BENM.GFCPNC
LEFT JOIN IGMASTER_ODS I ON M.KEY97=I.KEY97
LEFT JOIN PRODTYPE_ODS PR ON TRIM(PR.KEY97)=TRIM(M.PRODTYPE)
LEFT JOIN C8PF C8 ON C8.C8CCY=M.CCY 
LEFT JOIN MAP_SOL SOL ON SOL.BR_CODE=CASE WHEN TRIM(M.BHALF_BRN) IS NOT NULL THEN M.BHALF_BRN ELSE M.INPUT_BRN END
LEFT JOIN USEROPTN_ODS U2 ON U2.KEY29=M.USEROPTN2
LEFT JOIN USEROPTN_ODS U5 ON U5.KEY29=M.USEROPTN5
LEFT JOIN TF_BG_OP_ACC OP ON OP.MASTER_REF=M.MASTER_REF
LEFT JOIN TBAADM.CNC CN ON CN.CRNCY_CODE=M.CCY AND CN.BANK_ID='01'
WHERE B.STATUS='c' 
AND M.TYPEFLAG IN ('24171', '31349') AND TRIM(M.STATUS)='LIV' --AND M.LIAB_AMT!=0
AND TRIM(B.REFNO_PFIX) IN ('ISS','AMD')
AND TRIM(GTE_ID)='C')-- AND B.AMOUNT!=0)
;


COMMIT;

UPDATE TF002 SET 
FUNC_CODE=rpad(NVL(FUNC_CODE,' '),1,' '),
SOL_ID=rpad(NVL(SOL_ID,' '),8,' '),
BG_NUM=rpad(NVL(BG_NUM,' '),16,' '),
EVENT_AMT=rpad(NVL(EVENT_AMT,' '),17,' '),
BG_EXPIRY_MONTH=rpad(NVL(BG_EXPIRY_MONTH,' '),3,' '),
BG_EXPIRY_DAYS=rpad(NVL(BG_EXPIRY_DAYS,' '),3,' '),
BG_EXPIRY_DATE=RPAD(NVL(BG_EXPIRY_DATE,' '),10,' ') ,
BG_CLAIM_EXPIRY_MONTHS=rpad(NVL(BG_CLAIM_EXPIRY_MONTHS,' '),3,' ') ,
BG_CLAIM_EXPIRY_DAYS=rpad(NVL(BG_CLAIM_EXPIRY_DAYS,' '),3,' ') ,
BG_CLAIM_EXPIRY_DATE=RPAD(NVL(BG_CLAIM_EXPIRY_DATE,' '),10,' ') ,
BG_CHARGES_BORNE_BY=rpad(NVL(BG_CHARGES_BORNE_BY,' '),1,' ') ,
BG_TYPE=rpad(NVL(BG_TYPE,' '),5,' ') ,
BG_CURRENCY=rpad(NVL(BG_CURRENCY,' '),3,' ') ,
CIF_ID=rpad(NVL(CIF_ID,' '),32,' ') ,
EVENT_DATE=RPAD(NVL(EVENT_DATE,' '),10,' ') ,
PURPOSE_OF_GUARANTEE_TEXT=rpad(NVL(PURPOSE_OF_GUARANTEE_TEXT,' '),39,' ') ,
BG_CLASS=rpad(NVL(BG_CLASS,' '),5,' ') ,
APPLICABLE_RULES=rpad(NVL(APPLICABLE_RULES,' '),36,' ') ,
APPLICABLE_SUB_RULES=rpad(NVL(APPLICABLE_SUB_RULES,' '),36,' ') ,
BG_FRUCTIFIED_AMOUNT=rpad(NVL(BG_FRUCTIFIED_AMOUNT,' '),17,' ') ,
IS_ORIGINAL_BG_RECEIVED_FLAG=rpad(NVL(IS_ORIGINAL_BG_RECEIVED_FLAG,' '),1,' ') ,
BG_REMARKS=rpad(NVL(BG_REMARKS,' '),100,' ') ,
BG_CLAIM_PAYABLE_BY_US=rpad(NVL(BG_CLAIM_PAYABLE_BY_US,' '),1,' ') ,
COUNTER_BG_NUMBER=rpad(NVL(COUNTER_BG_NUMBER,' '),1,' ') ,
IMPORT_LICENSE_NUM=rpad(NVL(IMPORT_LICENSE_NUM,' '),15,' ') ,
LICENSE_EXPIRYDATE=RPAD(NVL(to_char(to_date(LICENSE_EXPIRYDATE,'YYYYMMDD'),'DD-MM-YYYY'),' '),10,' ') ,
CAPITALADEQUANCYCODE=rpad(NVL(CAPITALADEQUANCYCODE,' '),5,' ') ,
BG_PROVISION_AMOUNT=rpad(NVL(BG_PROVISION_AMOUNT,' '),17,' ') ,
FREE_CODE1=rpad(NVL(FREE_CODE1,' '),8,' ') ,
FREE_CODE2=rpad(NVL(FREE_CODE2,' '),8,' ') ,
FREE_CODE3=rpad(NVL(FREE_CODE3,' '),8,' ') ,
BG_OPERATIVE_ACCOUNT_ID=rpad(NVL(BG_OPERATIVE_ACCOUNT_ID,' '),16,' ') ,
APPLICANT_NAME=rpad(NVL(APPLICANT_NAME,' '),80,' ') ,
APPLICANT_ADDRESS1=rpad(NVL(APPLICANT_ADDRESS1,' '),45,' ') ,
APPLICANT_ADDRESS2=rpad(NVL(APPLICANT_ADDRESS2,' '),45,' ') ,
APPLICANT_ADDRESS3=rpad(NVL(APPLICANT_ADDRESS3,' '),45,' ') ,
APPLICANT_CITY=rpad(NVL(APPLICANT_CITY,' '),5,' ') ,
APPLICANT_STATE=rpad(NVL(APPLICANT_STATE,' '),5,' ') ,
APPLICANT_COUNTRY=rpad(NVL(APPLICANT_COUNTRY,' '),5,' ') ,
APPLICANT_PIN_CODE=rpad(NVL(APPLICANT_PIN_CODE,' '),10,' ') ,
APPLICANT_REF_NUM=rpad(NVL(APPLICANT_REF_NUM,' '),8,' ') ,
BG_RATE_CODE=rpad(NVL(BG_RATE_CODE,' '),5,' ') ,
BG_RATE=rpad(NVL(BG_RATE,' '),10,' ') ,
OTHER_BANK_REF_NUM=rpad(NVL(OTHER_BANK_REF_NUM,' '),16,' ') ,
PAYSYS_ID=rpad(NVL(PAYSYS_ID,' '),5,' ') ,
BENEFICIARY_CIF_ID=rpad(NVL(BENEFICIARY_CIF_ID,' '),32,' ') ,
BENEFICIARY_NAME=rpad(NVL(BENEFICIARY_NAME,' '),80,' ') ,
BENEFICIARY_ADDRESS1=rpad(NVL(BENEFICIARY_ADDRESS1,' '),40,' ') ,
BENEFICIARY_ADDRESS2=rpad(NVL(BENEFICIARY_ADDRESS2,' '),40,' ') ,
BENEFICIARY_ADDRESS3=rpad(NVL(BENEFICIARY_ADDRESS3,' '),40,' ') ,
BENEFICIARY_CITY=rpad(NVL(BENEFICIARY_CITY,' '),5,' ') ,
BENEFICIARY_STATE=rpad(NVL(BENEFICIARY_STATE,' '),5,' ') ,
BENEFICIARY_COUNTRY=rpad(NVL(BENEFICIARY_COUNTRY,' '),5,' ') ,
BENEFICIARY_PINCODE=rpad(NVL(BENEFICIARY_PINCODE,' '),10,' ') ,
BENEFICIARY_TYPE=rpad(NVL(BENEFICIARY_TYPE,' '),1,' ') ,
BG_CORRESPONDENT_BANK=rpad(NVL(BG_CORRESPONDENT_BANK,' '),8,' ') ,
BG_CORRESPONDENT_BRANCH=rpad(NVL(BG_CORRESPONDENT_BRANCH,' '),8,' ') ,
BG_CORRESPONDENT_NAME=rpad(NVL(BG_CORRESPONDENT_NAME,' '),80,' ') ,
BG_CORRESPONDENT_ADDRESS1=rpad(NVL(BG_CORRESPONDENT_ADDRESS1,' '),35,' ') ,
BG_CORRESPONDENT_ADDRESS2=rpad(NVL(BG_CORRESPONDENT_ADDRESS2,' '),35,' ') ,
BG_CORRESPONDENT_ADDRESS3=rpad(NVL(BG_CORRESPONDENT_ADDRESS3,' '),35,' ') ,
BG_CORRESPONDENT_CITY=rpad(NVL(BG_CORRESPONDENT_CITY,' '),5,' ') ,
BG_CORRESPONDENT_STATE=rpad(NVL(BG_CORRESPONDENT_STATE,' '),5,' ') ,
BG_CORRESPONDENT_COUNTRY=rpad(NVL(BG_CORRESPONDENT_COUNTRY,' '),5,' ') ,
BG_CORRESPONDENT_PINCODE=rpad(NVL(BG_CORRESPONDENT_PINCODE,' '),10,' ') ,
BIC_CODE=rpad(NVL(BIC_CODE,' '),11,' ') ,
PARTY_IDENTIFIER=rpad(NVL(PARTY_IDENTIFIER,' '),37,' ') ,
CORRES_BANK_ADD_TYPE=rpad(NVL(CORRES_BANK_ADD_TYPE,' '),1,' ') ,
BG_CRNCY_CODE=rpad(NVL(BG_CRNCY_CODE,' '),3,' ') ,
LIMITPREFIX=rpad(NVL(LIMITPREFIX,' '),12,' ') ,
LIMITSUFFIX=rpad(NVL(LIMITSUFFIX,' '),12,' ') ,
LIMITMARGINPCNT=rpad(NVL(LIMITMARGINPCNT,' '),10,' ') ,
RELLIMITS=rpad(NVL(RELLIMITS,' '),1,' ') ,
AMENDMENT_INDICATOR=rpad(NVL(AMENDMENT_INDICATOR,' '),1,' ') ,
AMENDMENT_REMARKS=rpad(NVL(AMENDMENT_REMARKS,' '),30,' ') ,
STATUS=rpad(NVL(STATUS,' '),1,' ') ,
AMENDINITIATEDBY=rpad(NVL(AMENDINITIATEDBY,' '),1,' ') ,
AUTORENEWAPPLICABLEFLG=rpad(NVL(AUTORENEWAPPLICABLEFLG,' '),1,' ') ,
FINALEXPIRYDATE=RPAD(NVL(FINALEXPIRYDATE,' '),10,' ') ,
AUTORENEWNEXTCYCLE=rpad(NVL(AUTORENEWNEXTCYCLE,' '),1,' ') ,
AUTORENEWFREQTYPE=rpad(NVL(AUTORENEWFREQTYPE,' '),1,' ') ,
AUTORENEWFREQDATE=rpad(NVL(AUTORENEWFREQDATE,' '),2,' ') ,
AUTORENEWFREQWEEKNUM=rpad(NVL(AUTORENEWFREQWEEKNUM,' '),1,' ') ,
AUTORENEWFREQDAY=rpad(NVL(AUTORENEWFREQDAY,' '),2,' ') ,
ISFREQDAYONHOLIDAY=rpad(NVL(ISFREQDAYONHOLIDAY,' '),1,' ') ;

COMMIT;

UPDATE TF002 SET AMENDMENT_INDICATOR='E' WHERE FUNC_CODE='U' AND TRIM(AMENDMENT_INDICATOR) IS NULL;

--UPDATE TF002 SET AMENDMENT_INDICATOR='O' WHERE TRIM(EVENT_AMT) IS NULL AND AMENDMENT_INDICATOR='E' AND FUNC_CODE='U';

update tf002 set bg_expiry_date='30-12-2099',BG_CLAIM_EXPIRY_DATE='30-12-2099' where to_date(bg_expiry_date,'dd-mm-yyyy')>=to_date('31-12-2099','dd-mm-yyyy');

COMMIT;

UPDATE TF002 SET PAYSYS_ID='SWIFT' WHERE FUNC_CODE='A';

UPDATE TF002 SET PAYSYS_ID='     ' WHERE FUNC_CODE='U';

UPDATE TF002 SET BG_CLAIM_PAYABLE_BY_US='Y' WHERE TRIM(BG_TYPE)='ILGC';

COMMIT;

