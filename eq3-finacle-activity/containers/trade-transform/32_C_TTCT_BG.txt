DROP TABLE TF_CUSTOM_BGTT;

CREATE TABLE TF_CUSTOM_BGTT AS
SELECT DISTINCT  
'SYSTEM' USER_ID,
'OGM' MENU_ID,
'trfbgchrgmn001.scr' SCRIPT_NAME,
'BGADD' EVENT_TYPE,
BG.EVENT_ID EVENT_ID, ---TO_CHAR(TRIM(T11.BG_TYPE))||'_CHGS'
REPLACE(MA.MASTER_REF,'/','-') ENTITY_ID,
TRIM(T11.BG_TYPE) REGISTER_TYPE,
'ISSUE' ENTITY_EVENT,
'0000' EVENT_SRL_NUM,
CASE WHEN TRIM(BE.AMOUNT) IS NOT NULL THEN BE.AMOUNT/C8PWD ELSE 0 END EVENT_AMT,
0 EVENT_TOL_PCNT,
BE.CCY EVENT_CRNCY,
TO_CHAR(BE.FINISHED,'DD-MM-YYYY') EVENT_DATE,
TO_CHAR(BE.FINISHED,'DD-MM-YYYY') EVENT_START_DATE,
TO_CHAR(EC.CALCTODATE,'DD-MM-YYYY') EVENT_EXP_DATE,
CASE WHEN TRIM(BE.AMOUNT) IS NOT NULL THEN BE.AMOUNT/C8PWD ELSE 0 END EVENT_AMT_WITH_TOL,
0 UTILIZED_AMT,
CASE WHEN TRIM(BE.AMOUNT) IS NOT NULL THEN BE.AMOUNT/C8PWD ELSE 0 END UNUTILIZED_AMT,
TO_CHAR(EC.CALCTODATE,'DD-MM-YYYY') CHARGE_CALC_UPTO_DT,
BE.CCY CHARGE_IN_EVENT_CCY, --EC.SCH_AMT/C8PWD
' ' CHARGE_COLL_CRNCY, --EC.SCH_CCY
' ' CHARGE_AMT_COLL_CRNCY, --EC.SCH_AMT/C8PWD
'Y' CREATED_FLG,
'Y' VERIFIED_FLG,
' ' FREE_TEXT_1,
' ' FREE_TEXT_2,
' ' FREE_TEXT_3,
' ' FREE_CODE_1,
' ' FREE_CODE_2,
' ' FREE_CODE_3,
SYSDATE RCRE_TIME,
'SYSTEM' RCRE_USER_ID,
'01'BANK_ID
FROM BASEEVENT_ODS BE
INNER JOIN MASTER_ODS MA ON BE.MASTER_KEY=MA.KEY97
LEFT JOIN RELITEM_ODS RI ON RI.EVENT_KEY=BE.KEY97 AND RI.TYPEFLAG IN (7879, 14938, 30599, 22449, 4047, 20678, 23815)
LEFT JOIN EVENTCHG_ODS EC ON EC.KEY97 = RI.KEY97  
LEFT JOIN BASECHARGE_ods BC ON BC.KEY97 = RI.KEY97
LEFT JOIN CHARGE99_ODS C99 ON EC.CHG_SCH = C99.KEY97 
LEFT JOIN TF001 T1 ON TRIM(T1.BG_NUM)=REPLACE(MA.MASTER_REF,'/','-')
LEFT JOIN TF001 T11 ON TRIM(T1.BG_NUM)=TRIM(T11.BG_NUM) AND T11.FUNC_CODE='A'
LEFT JOIN C8PF ON C8CCY=BE.CCY   
LEFT JOIN TBAADM.BGP BG ON BG.BG_TYPE=TRIM(T11.BG_TYPE) AND BANK_ID='01'
WHERE BE.REFNO_PFIX='ISS' AND BE.STATUS='c'
--AND (BC.STATUS <> 'W' AND BC.STATUS <> 'A' AND BC.STATUS <> 'F' AND BC.STATUS <> 'X' AND BC.STATUS <> 'O')
--AND C99.T1_PERCENT <> 0
AND MA.STATUS = 'LIV'
AND MA.REFNO_PFIX='SBG'
AND T1.FUNC_CODE='A'
UNION 
SELECT DISTINCT
'SYSTEM' USER_ID,
'OGM' MENU_ID,
'trfbgchrgmn001.scr' SCRIPT_NAME,
'BGMOD' EVENT_TYPE,
BG.EVENT_ID EVENT_ID, ---TO_CHAR(TRIM(T11.BG_TYPE))||'_CHGS'
REPLACE(MA.MASTER_REF,'/','-') ENTITY_ID,
TRIM(T11.BG_TYPE) REGISTER_TYPE,
'AMEND' ENTITY_EVENT,
LPAD(BE.REFNO_SERL,4,'0') EVENT_SRL_NUM,
CASE WHEN TRIM(BE.AMOUNT) IS NOT NULL THEN BE.AMOUNT/C8PWD ELSE 0 END EVENT_AMT,
0 EVENT_TOL_PCNT,
BE.CCY EVENT_CRNCY,
TO_CHAR(BE.FINISHED,'DD-MM-YYYY') EVENT_DATE,
TO_CHAR(BE.FINISHED,'DD-MM-YYYY') EVENT_START_DATE,
TO_CHAR(EC.CALCTODATE,'DD-MM-YYYY') EVENT_EXP_DATE,
CASE WHEN TRIM(BE.AMOUNT) IS NOT NULL THEN BE.AMOUNT/C8PWD ELSE 0 END EVENT_AMT_WITH_TOL,
0 UTILIZED_AMT,
CASE WHEN TRIM(BE.AMOUNT) IS NOT NULL THEN BE.AMOUNT/C8PWD ELSE 0 END UNUTILIZED_AMT,
TO_CHAR(EC.CALCTODATE,'DD-MM-YYYY') CHARGE_CALC_UPTO_DT,
BE.CCY CHARGE_IN_EVENT_CCY, --EC.SCH_AMT/C8PWD
' ' CHARGE_COLL_CRNCY, --EC.SCH_CCY
' ' CHARGE_AMT_COLL_CRNCY, --EC.SCH_AMT/C8PWD
'Y' CREATED_FLG,
'Y' VERIFIED_FLG,
'' FREE_TEXT_1,
'' FREE_TEXT_2,
'' FREE_TEXT_3,
'' FREE_CODE_1,
'' FREE_CODE_2,
'' FREE_CODE_3,
SYSDATE RCRE_TIME,
'SYSTEM' RCRE_USER_ID,
'01'BANK_ID
FROM BASEEVENT_ODS BE
INNER JOIN MASTER_ODS MA ON BE.MASTER_KEY=MA.KEY97
LEFT JOIN RELITEM_ODS RI ON RI.EVENT_KEY=BE.KEY97 --AND RI.TYPEFLAG IN (7879, 14938, 30599, 22449, 4047, 20678, 23815)
LEFT JOIN EVENTCHG_ODS EC ON EC.KEY97 = RI.KEY97  AND EC.CALCTEXT LIKE '%Amend%'--AND  EC.CHG_ON_AMT IN('IML','RSL','CHM')
LEFT JOIN BASECHARGE_ods BC ON BC.KEY97 = RI.KEY97
LEFT JOIN CHARGE99_ODS C99 ON EC.CHG_SCH = C99.KEY97 
INNER JOIN TF001 T1 ON TRIM(T1.BG_NUM)=REPLACE(MA.MASTER_REF,'/','-')
INNER JOIN TF001 T11 ON TRIM(T1.BG_NUM)=TRIM(T11.BG_NUM) AND T11.FUNC_CODE='A'
LEFT JOIN C8PF ON C8CCY=BE.CCY   
LEFT JOIN TBAADM.BGP BG ON BG.BG_TYPE=TRIM(T11.BG_TYPE) AND BANK_ID='01'
WHERE BE.REFNO_PFIX='AMD' AND BE.STATUS='c'
AND MA.STATUS = 'LIV'
AND MA.REFNO_PFIX='SBG'
AND T1.FUNC_CODE='U'
--AND MA.KEY97='145043772'
;

COMMIT;

----------------------------------------------------DELETE DUPLICATE BLOCK --------------------------------------------------------
DELETE FROM TF_CUSTOM_BGTT WHERE (ENTITY_ID||ENTITY_EVENT||EVENT_SRL_NUM) IN (SELECT ENTITY_ID||ENTITY_EVENT||EVENT_SRL_NUM FROM TF_CUSTOM_BGTT GROUP BY ENTITY_ID,ENTITY_EVENT,EVENT_SRL_NUM HAVING COUNT(*) >1)
AND (ENTITY_ID||ENTITY_EVENT||EVENT_SRL_NUM||TO_DATE(EVENT_EXP_DATE,'DD-MM-YYYY')) NOT IN 
(SELECt ENTITY_ID||ENTITY_EVENT||EVENT_SRL_NUM||MAX(TO_DATE(EVENT_EXP_DATE,'DD-MM-YYYY'))EVENT_EXP_DATE  FROM TF_CUSTOM_BGTT GROUP BY ENTITY_ID,ENTITY_EVENT,EVENT_SRL_NUM HAVING COUNT(*) >1);

COMMIT;
----------------------------------------------------END DELETE DUPLICATE BLOCK --------------------------------------------------------


DECLARE 
V_MASTER_REF VARCHAR2(100);
V_TOT_AMD_AMT NUMBER := 0;
V_STARTS_FLG NUMBER :=0;
CURSOR C1 IS
SELECT * FROM TF_CUSTOM_BGTT A
INNER JOIN (SELECT ENTITY_ID MASTER_REF,abs(SUM(EVENT_AMT)) TOT_AMD_AMOUNT FROM TF_CUSTOM_BGTT WHERE EVENT_AMT<0 GROUP BY ENTITY_ID) B ON A.ENTITY_ID =B.MASTER_REF
WHERE A.EVENT_AMT>0 ORDER BY A.ENTITY_ID, A.EVENT_SRL_NUM;

BEGIN
    
   FOR L_RECORD IN C1
   LOOP
   dbms_output.put_line('L_RECORD.EVENT_SRL_NUM ='||L_RECORD.EVENT_SRL_NUM);
        IF V_TOT_AMD_AMT = 0 AND V_STARTS_FLG=0 THEN 
           dbms_output.put_line('inside V_TOT_AMD_AMT = 0 AND V_STARTS_FLG=0');
            V_TOT_AMD_AMT := (L_RECORD.TOT_AMD_AMOUNT);
            V_MASTER_REF := L_RECORD.MASTER_REF;
            V_STARTS_FLG := 1;
        END IF;
        
        IF V_MASTER_REF = L_RECORD.MASTER_REF THEN 
        
            IF V_TOT_AMD_AMT-L_RECORD.UNUTILIZED_AMT > 0 THEN
            dbms_output.put_line('L_RECORD.EVENT_SRL_NUM1 ='||V_TOT_AMD_AMT);
            
                UPDATE TF_CUSTOM_BGTT SET UTILIZED_AMT = UNUTILIZED_AMT,UNUTILIZED_AMT=0 WHERE ENTITY_ID=L_RECORD.ENTITY_ID AND EVENT_SRL_NUM=L_RECORD.EVENT_SRL_NUM;
                V_TOT_AMD_AMT := V_TOT_AMD_AMT-L_RECORD.UNUTILIZED_AMT;
                COMMIT;
            ELSE
            dbms_output.put_line('L_RECORD.EVENT_SRL_NUM2 ='||V_TOT_AMD_AMT);
            dbms_output.put_line('L_RECORD.UNUTILIZED_AMT ='||L_RECORD.UNUTILIZED_AMT);
                UPDATE TF_CUSTOM_BGTT SET UTILIZED_AMT = V_TOT_AMD_AMT,UNUTILIZED_AMT=L_RECORD.EVENT_AMT_WITH_TOL-V_TOT_AMD_AMT WHERE ENTITY_ID=L_RECORD.ENTITY_ID AND EVENT_SRL_NUM=L_RECORD.EVENT_SRL_NUM;
                V_TOT_AMD_AMT :=0;
                COMMIT;
            END IF;
        
        ELSE 
        
            V_TOT_AMD_AMT := L_RECORD.TOT_AMD_AMOUNT;
            V_MASTER_REF := L_RECORD.MASTER_REF;
            IF V_TOT_AMD_AMT-L_RECORD.UNUTILIZED_AMT > 0 THEN
                UPDATE TF_CUSTOM_BGTT SET UTILIZED_AMT = UNUTILIZED_AMT,UNUTILIZED_AMT=0 WHERE ENTITY_ID=L_RECORD.ENTITY_ID AND EVENT_SRL_NUM=L_RECORD.EVENT_SRL_NUM;
                V_TOT_AMD_AMT := V_TOT_AMD_AMT-L_RECORD.UNUTILIZED_AMT;
                COMMIT;
            ELSE
                UPDATE TF_CUSTOM_BGTT SET UTILIZED_AMT = V_TOT_AMD_AMT,UNUTILIZED_AMT=L_RECORD.EVENT_AMT_WITH_TOL-V_TOT_AMD_AMT  WHERE ENTITY_ID=L_RECORD.ENTITY_ID AND EVENT_SRL_NUM=L_RECORD.EVENT_SRL_NUM;
                V_TOT_AMD_AMT := 0;
                COMMIT;
            END IF;
        
        END IF;
   END LOOP;
END;


COMMIT;

UPDATE TF_CUSTOM_BGTT SET UTILIZED_AMT = UNUTILIZED_AMT ,UNUTILIZED_AMT=0 WHERE UNUTILIZED_AMT <0;

COMMIT;


UPDATE TF_CUSTOM_BGTT TT SET (EVENT_EXP_DATE,CHARGE_CALC_UPTO_DT)=(SELECT BG_EXPIRY_DATE,BG_EXPIRY_DATE FROM TF001 WHERE TRIM(BG_NUM)=TRIM(ENTITY_ID) AND FUNC_CODE='A');

COMMIT;

