drop table TF_OBG_DIFF;

drop table TF_IBG_DIFF;

CREATE TABLE TF_OBG_DIFF AS
SELECT DISTINCT T.SOL_ID,T.BG_NUM,NVL(TN.AMT,0)+NVL(TE.AMT,0)-NVL(TR.AMT,0) MIGRATED_AMOUNT,LIAB_AMT/C8.C8PWD LEGACY_AMOUNT,NVL(TN.AMT,0)+NVL(TE.AMT,0)-NVL(TR.AMT,0)-(LIAB_AMT/C8.C8PWD) DIFF
FROM TF001 T
LEFT JOIN (SELECT TNULL.BG_NUM,SUM(to_number(TNULL.EVENT_AMT))AMT FROM TF001 TNULL WHERE TRIM(AMENDMENT_INDICATOR) IS NULL and trim(TNULL.EVENT_AMT) is not null GROUP BY TNULL.BG_NUM)TN ON TRIM(TN.BG_NUM)=TRIM(T.BG_NUM)
LEFT JOIN (SELECT TEE.BG_NUM,SUM(to_number(TEE.EVENT_AMT))AMT FROM TF001 TEE WHERE TRIM(AMENDMENT_INDICATOR) ='E' and trim(TEE.EVENT_AMT) is not null GROUP BY TEE.BG_NUM)TE ON TRIM(TE.BG_NUM)=TRIM(T.BG_NUM) 
LEFT JOIN (SELECT TRR.BG_NUM,SUM(to_number(TRR.EVENT_AMT))AMT FROM TF001 TRR WHERE TRIM(AMENDMENT_INDICATOR) ='R' and trim(TRR.EVENT_AMT) is not null GROUP BY TRR.BG_NUM)TR ON TRIM(TR.BG_NUM)=TRIM(T.BG_NUM)
LEFT JOIN MASTER_ODS MO ON TRIM(T.BG_NUM)=REPLACE(MASTER_REF,'/','-')
INNER JOIN C8PF C8 ON C8.C8CCY=MO.CCY;

COMMIT;

CREATE TABLE TF_IBG_DIFF AS
SELECT DISTINCT T.SOL_ID,T.BG_NUM,NVL(TN.AMT,0)+NVL(TE.AMT,0)-NVL(TR.AMT,0) MIGRATED_AMOUNT,LIAB_AMT/C8.C8PWD LEGACY_AMOUNT,NVL(TN.AMT,0)+NVL(TE.AMT,0)-NVL(TR.AMT,0)-(LIAB_AMT/C8.C8PWD) DIFF
FROM TF002 T
LEFT JOIN (SELECT TNULL.BG_NUM,SUM(TNULL.EVENT_AMT)AMT FROM TF002 TNULL WHERE TRIM(AMENDMENT_INDICATOR) IS NULL  and trim(TNULL.EVENT_AMT) is not null GROUP BY TNULL.BG_NUM)TN ON TRIM(TN.BG_NUM)=TRIM(T.BG_NUM)
LEFT JOIN (SELECT TEE.BG_NUM,SUM(TEE.EVENT_AMT)AMT FROM TF002 TEE WHERE TRIM(AMENDMENT_INDICATOR) ='E' and trim(TEE.EVENT_AMT) is not null GROUP BY TEE.BG_NUM)TE ON TRIM(TE.BG_NUM)=TRIM(T.BG_NUM) 
LEFT JOIN (SELECT TRR.BG_NUM,SUM(TRR.EVENT_AMT)AMT FROM TF002 TRR WHERE TRIM(AMENDMENT_INDICATOR) ='R' and trim(TRR.EVENT_AMT) is not null GROUP BY TRR.BG_NUM)TR ON TRIM(TR.BG_NUM)=TRIM(T.BG_NUM)
INNER JOIN MASTER_ODS MO ON TRIM(T.BG_NUM)=REPLACE(MASTER_REF,'/','-')
INNER JOIN C8PF C8 ON C8.C8CCY=MO.CCY;

COMMIT;


---------------OUTWARD BANK GUARANTEE---------------
INSERT INTO TF001
select 
--BGFUNCCODE
'U' BGFUNCCODE, 
--BGSOLID
'700' BGSOLID,--SOL.FIN_SOL_ID BGSOLID, 
--BGSRLNUM
REPLACE(SUBSTR(M.MASTER_REF,1,16),'/','-') BGSRLNUM, 
--EVENTAMT
ABS(TF.DIFF)  EVENTAMT, 
--BGEXPIRYMONTHS
'' BGEXPIRYMONTHS, 
--BGEXPIRYDAYS
'' BGEXPIRYDAYS, 
--BGEXPIRYDATE
case when M.EXPIRY_DAT is null then TO_CHAR(ADD_MONTHS(CTRCT_DATE,998),'DD-MM-YYYY') ELSE TO_CHAR(M.EXPIRY_DAT,'DD-MM-YYYY') end   BGEXPIRYDATE,
--BGCLAIMEXPIRYMONTHS
'' BGCLAIMEXPIRYMONTHS, 
--BGCLAIMEXPIRYDAYS
'' BGCLAIMEXPIRYDAYS, 
--BGCLAIMEXPIRYDATE
case when M.EXPIRY_DAT is null then TO_CHAR(ADD_MONTHS(CTRCT_DATE,998),'DD-MM-YYYY') ELSE TO_CHAR(M.EXPIRY_DAT,'DD-MM-YYYY') end   BGCLAIMEXPIRYDATE,
--BGCHARGEBORNEBY
L.OUR_CHGS BGCHARGEBORNEBY, 
--BGTYPE
'' BGTYPE,
--BGCRITCRNCY
M.CCY BGCRITCRNCY, 
--BGAPPLCIFID
CASE WHEN TRIM(I.GTE_ID)='C' THEN PCPC.FIN_CIF_ID ELSE PCPM.FIN_CIF_ID END BGAPPLCIFID, 
--EVENTDATE
get_param('EOD_DATE') EVENTDATE, 
--BGPURPOSE 
'' BGPURPOSE,
--BGCLASS
CASE WHEN PR.CODE='IN1' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'IN90'
     WHEN PR.CODE='IN2' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'IN999'
     WHEN PR.CODE='ADV' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGAP'
     WHEN PR.CODE='PRF' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGPR'
     WHEN PR.CODE='RTN' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGRT'
     WHEN PR.CODE='CAS' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGCH'
     WHEN PR.CODE='PUR' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGPU'
     WHEN PR.CODE='COL' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGCL'
     WHEN PR.CODE='MAI' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGOT'
     WHEN PR.CODE='OTH' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGOT'
     WHEN PR.CODE='TEL' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGPH'
     WHEN PR.CODE='CAR' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGVH'
     WHEN PR.CODE='LBR' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGML'
     WHEN PR.CODE='SHP' AND (TRIM(I.GTE_ID) IS NULL OR TRIM(I.GTE_ID) = 'R') THEN 'LGSH'
     WHEN PR.CODE='IN1' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='IN2' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='ADV' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='PRF' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='RTN' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='CAS' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='PUR' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='COL' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='MAI' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='OTH' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='TEL' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='CAR' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='LBR' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='SHP' AND TRIM(I.GTE_ID) = 'C' THEN 'CLGR'
     WHEN PR.CODE='NOB' THEN 'LGOT'
END  BGCLASS,
--BGEFFECTIVEDATE 
get_param('EOD_DATE') BGEFFECTIVEDATE,
--BGAPPLICABLERULES
'NONE' BGAPPLICABLERULES, 
--BGAPPLICABLESUBRULES
'' BGAPPLICABLESUBRULES, 
--BGFRUCTLIABAMT
'' BGFRUCTLIABAMT, 
--ISORGBGRECEIVED 
'' ISORGBGRECEIVED,
--BGREMARKS
SUBSTR(TRIM(U5.NAME)||TRIM(L.PRESPNARR1)||TRIM(L.PRESPNARR2)||TRIM(L.PRESPNARR3)||TRIM(L.PRESPNARR4),1,100) BGREMARKS, 
--COUNTERBGNUM 
'' COUNTERBGNUM,
--IMPLICENSENO
'' IMPLICENSENO, 
--IMPLICENSEEXPDATE
'' IMPLICENSEEXPDATE, 
--CAPADQCODE
'' CAPADQCODE, 
--PROVISIONAMT
'' PROVISIONAMT, 
--FREECODE1
CASE WHEN TRIM(WORKGROUP)='SBLCMU' THEN 'SBLCM'
     WHEN TRIM(WORKGROUP)='UANNUL' THEN 'UANNL'
     WHEN TRIM(WORKGROUP)='UHALFY' THEN 'UHLFY'
     WHEN TRIM(WORKGROUP)='UQUART' THEN 'UQURT'
ELSE TRIM(WORKGROUP) END FREECODE1, 
--FREECODE2 
'' FREECODE2,
--FREECODE3 
'' FREECODE3,
--APPLOPERACCT
CASE WHEN TRIM(OP.FIN_ACC_NUM) IS NOT NULL THEN TRIM(OP.FIN_ACC_NUM) ELSE '0050129220000' END APPLOPERACCT, 
--APPLPARTYNAME
CASE WHEN TRIM(APP.ADDRESS1) IS NOT NULL THEN TRIM(APP.ADDRESS1) ELSE '.' END APPLPARTYNAME, 
--APPLPARTYADDR1
CASE WHEN TRIM(APP.ADDRESS2) IS NULL THEN '.' ELSE TRIM(APP.ADDRESS2) END APPLPARTYADDR1,  
--APPLPARTYADDR2
APP.ADDRESS3 APPLPARTYADDR2, 
--APPLPARTYADDR3
SUBSTR(TRIM(TRIM(APP.ADDRESS4)||' '||TRIM(APP.ADDRESS5)),1,40) APPLPARTYADDR3,  
--APPLPARTYCITY 
'' APPLPARTYCITY,
--APPLPARTYSTATE
'' APPLPARTYSTATE, 
--APPLPARTYCNTRY
APP.COUNTRY APPLPARTYCNTRY, 
--APPLPARTYPINCODE
TRIM(APP.ZIPCODE) APPLPARTYPINCODE, 
--APPLREFNUM
'' APPLREFNUM, 
--BGRATECODE
'MID' BGRATECODE, 
--BGRATE
C8RTE BGRATE, 
--OTHERBANKREFNUM
'' OTHERBANKREFNUM, --------------------------------------------------?????????????? B.THEIR_REF
--PAYSYSID 
'' PAYSYSID,
--BENCIFID
'' BENCIFID, 
--BENNAME 
BEN.ADDRESS1 BENNAME,
--BENADDR1 
CASE WHEN TRIM(BEN.ADDRESS2) IS NOT NULL THEN BEN.ADDRESS2 ELSE '.' END BENADDR1,
--BENADDR2 
BEN.ADDRESS3 BENADDR2,
--BENADDR3 
TRIM(SUBSTR(TRIM(BEN.ADDRESS4)||' '||TRIM(BEN.ADDRESS5),1,40)) BENADDR3,
--BENCITY 
'' BENCITY,
--BENSTATE
'' BENSTATE, 
--BENCNTRY
BEN.COUNTRY BENCNTRY, 
--BENPINCODE
TRIM(BEN.ZIPCODE) BENPINCODE, 
--BENTYPE 
'O' BENTYPE,
--BGCORRBANKCODE 
'' BGCORRBANKCODE, 
--BGCORRBRANCHCODE
'' BGCORRBRANCHCODE, 
--BGCORRBANKNAME 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS1 ELSE ADVBK.ADDRESS1 END  BGCORRBANKNAME,
--BGCORRBANKADDR1 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS2 ELSE ADVBK.ADDRESS2 END BGCORRBANKADDR1,
--BGCORRBANKADDR2 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.ADDRESS3 ELSE ADVBK.ADDRESS3 END BGCORRBANKADDR2,
--BGCORRBANKADDR3 
CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(SUBSTR(TRIM(PCP.ADDRESS4)||' '||TRIM(PCP.ADDRESS5),1,35)) ELSE TRIM(SUBSTR(TRIM(ADVBK.ADDRESS4)||' '||TRIM(ADVBK.ADDRESS5),1,35)) END BGCORRBANKADDR3,
--BGCORRBANKCITY 
'' BGCORRBANKCITY,
--BGCORRBANKSTATE 
'' BGCORRBANKSTATE,
--BGCORRBANKCNTRY 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.COUNTRY ELSE ADVBK.COUNTRY END BGCORRBANKCNTRY,
--BGCORRBANKPINCODE 
CASE WHEN TRIM(GTE_ID)='C' THEN TRIM(PCP.ZIPCODE) ELSE TRIM(ADVBK.ZIPCODE) END BGCORRBANKPINCODE,
--BGBICCODE 
CASE WHEN TRIM(GTE_ID)='C' THEN PCP.SW_BANK||PCP.SW_CTR||PCP.SW_LOC||PCP.SW_BRANCH ELSE ADVBK.SW_BANK||ADVBK.SW_CTR||ADVBK.SW_LOC||ADVBK.SW_BRANCH END BGBICCODE,
--PARTYID 
'' PARTYID,--CASE WHEN TRIM(GTE_ID)='C' THEN PCPC.FIN_CIF_ID ELSE '' END 
--ADDRTYPE 
'' ADDRTYPE,
--BGCRNCYCODE 
'',
--DCREFNUM
'' DCREFNUM,
--SGBILLEQVCRNCYCODE
CASE WHEN PR.CODE='SHP' THEN TO_CHAR(M.CCY) ELSE '' END SGBILLEQVCRNCYCODE, 
--SGBILLEQVAMT
CASE WHEN PR.CODE='SHP' THEN TO_CHAR(TF.DIFF,'9999999999999.99') ELSE '' END SGBILLEQVAMT, 
--BGDCRATECODE
'' BGDCRATECODE, 
--BGDCRATE
'' BGDCRATE, 
--SGCONTCRNCYCODE
'' SGCONTCRNCYCODE, 
--SGCONTAMT
'' SGCONTAMT, 
--SGMINCONTAMT
'' SGMINCONTAMT, 
--SGCONTREVERSALEVENT
CASE WHEN PR.CODE='SHP' THEN 'A' ELSE '' END SGCONTREVERSALEVENT, 
--SGMARGINREVRATECODE
'' SGMARGINREVRATECODE, 
--SGTRUSTRECNUM
'' SGTRUSTRECNUM, 
--NOOFUNITS
'' NOOFUNITS, 
--UNITVALUE
'' UNITVALUE, 
--GOODSORSRVCSDESC
L.GOODSCODE GOODSORSRVCSDESC, 
--SGREMARKS 
M.CANNPRNREF SGREMARKS,
--BILLLADINGNUM
'' BILLLADINGNUM, 
--CARRIERID
'' CARRIERID, 
--CARRIERNAME
'' CARRIERNAME, 
--CARRIERADDR1
'' CARRIERADDR1, 
--CARRIERADDR2
'' CARRIERADDR2, 
--CARRIERADDR3
'' CARRIERADDR3, 
--CARRIERCITY
'' CARRIERCITY, 
--CARRIERSTATE
'' CARRIERSTATE, 
--CARRIERCNTRY
'' CARRIERCNTRY, 
--CARRIERPINCODE
'' CARRIERPINCODE, 
--ORDEROFCONSIGNEE
'' ORDEROFCONSIGNEE, 
--PORTOFDESTINATION
TRIM(L.SHIP_FROM) || TRIM(L.SHIP_TO) PORTOFDESTINATION, 
--ACTSHIPMENTDATE 
CASE WHEN TRIM(L.SHIP_DATE) IS NOT NULL THEN TO_CHAR(L.SHIP_DATE,'DD-MM-YYYY') ELSE '' END ACTSHIPMENTDATE,
--LIMITPREFIX
'' LIMITPREFIX, 
--LIMITSUFFIX
'' LIMITSUFFIX, 
--LIMITMARGINPCNT
'' LIMITMARGINPCNT, 
--INTERNALLIMITS
'' INTERNALLIMITS, 
--AMENDIND
CASE WHEN TF.DIFF>0 THEN 'R' 
     WHEN TF.DIFF<0 THEN 'E'
     ELSE '' END AMENDIND, 
--AMENDREMARKS 
'' AMENDREMARKS,
--AMENDSTATUS
'A' AMENDSTATUS, 
--AMENDINITIATEDBY
'A' AMENDINITIATEDBY, 
--AUTORENEWAPPLICABLEFLG
'N' AUTORENEWAPPLICABLEFLG,--CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'Y' ELSE '' END 
--FINALEXPIRYDATE
'' FINALEXPIRYDATE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN '31-12-2099' ELSE '' END
--AUTORENEWNEXTCYCLE
'' AUTORENEWNEXTCYCLE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'Y' ELSE '' END 
--AUTORENEWFREQTYPE
'' AUTORENEWFREQTYPE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'H' ELSE '' END 
--AUTORENEWFREQDATE
'' AUTORENEWFREQDATE, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN TO_CHAR(TO_DATE(B.START_DATE,'YYYYMMDD'),'DD') ELSE '' END 
--AUTORENEWFREQWEEKNUM 
'' AUTORENEWFREQWEEKNUM,
--AUTORENEWFREQDAY
'' AUTORENEWFREQDAY, 
--ISFREQDAYONHOLIDAY
'' ISFREQDAYONHOLIDAY, --CASE WHEN TRIM(M.EXPIRY_DAT) IS NULL THEN 'N' ELSE '' END 
--BGCOUNTERGUARANTEERATECODE
'' BGCOUNTERGUARANTEERATECODE,
--COUNTERRATE
'' COUNTERRATE, 
--ADVANCEAMTPAID
'' ADVANCEAMTPAID, 
--SOLIDORDER1
'' SOLIDORDER1, 
--ORDERNODTLS1
'' ORDERNODTLS1, 
--SOLIDORDER2
'' SOLIDORDER2, 
--ORDERNODTLS2
'' ORDERNODTLS2, 
--SOLIDORDER3
'' SOLIDORDER3, 
--ORDERNODTLS3
'' ORDERNODTLS3, 
--SOLIDORDER4
'' SOLIDORDER4, 
--ORDERNODTLS4
'' ORDERNODTLS4, 
--SOLIDORDER5
'' SOLIDORDER5, 
--ORDERNODTLS5
'' ORDERNODTLS5, 
--PURCHASEFORACID
'' PURCHASEFORACID, 
--SGDOPAYABLEFORACID
'' SGDOPAYABLEFORACID, 
--EXECADVNO1
'' EXECADVNO1, 
--EXECADVNO2
'' EXECADVNO2, 
--EXECADVNO3
'' EXECADVNO3, 
--EXECADVNO4
'' EXECADVNO4, 
--EXECADVNO5
'' EXECADVNO5, 
--PROMISETOPURCHASERECV
'' PROMISETOPURCHASERECV, 
--PROMISETOPURCHASEDATE
'' PROMISETOPURCHASEDATE, 
--PROMISETOPURCHASEREFNO
'' PROMISETOPURCHASEREFNO, 
--PURCHASEACCPTADVICE
'' PURCHASEACCPTADVICE, 
--FINANCINGFORACID
'' FINANCINGFORACID, 
--DEBITFINANCINGFORACID
'' DEBITFINANCINGFORACID, 
--PREFIXFINANCINGLIMITID
'' PREFIXFINANCINGLIMITID, 
--SUFFIXFINANCINGLIMITID
'' SUFFIXFINANCINGLIMITID, 
--ISLAMICRATECODE
'' ISLAMICRATECODE, 
--ISLAMICRATE
'' ISLAMICRATE, 
--SECTORCODE
'O2' SECTORCODE, ---CASE WHEN TRIM(M.USEROPTN5) IS NOT NULL THEN 'E' ELSE 'O2' END   
--EXPCIFID
'' EXPCIFID, 
--EXPNAME
'' EXPNAME, 
--EXPADDR1
'' EXPADDR1, 
--EXPADDR2
'' EXPADDR2, 
--EXPADDR3
'' EXPADDR3, 
--EXPCITY
'' EXPCITY, 
--EXPSTATE
'' EXPSTATE, 
--EXPCNTRY
'' EXPCNTRY, 
--EXPPINCODE
'' EXPPINCODE, 
--BGCOLLBANKCODE
'' BGCOLLBANKCODE, 
--BGCOLLBRANCHCODE
'' BGCOLLBRANCHCODE, 
--BGCOLLBANKNAME
'' BGCOLLBANKNAME, 
--BGCOLLBANKADDR1
'' BGCOLLBANKADDR1, 
--BGCOLLBANKADDR2
'' BGCOLLBANKADDR2, 
--BGCOLLBANKADDR3
'' BGCOLLBANKADDR3, 
--BGCOLLBANKCITY
'' BGCOLLBANKCITY, 
--BGCOLLBANKSTATE
'' BGCOLLBANKSTATE, 
--BGCOLLBANKCNTRY
'' BGCOLLBANKCNTRY, 
--BGCOLLBANKPINCODE
'' BGCOLLBANKPINCODE, 
--BGCOLLBICCODE
'' BGCOLLBICCODE,
--BGCOLLPARTYID 
'' BGCOLLPARTYID,
--BGCOLLADDRTYPE
'' BGCOLLADDRTYPE, 
--INTENDTOEXPORT
'' INTENDTOEXPORT, 
--INWARDDCREFNUM
'' INWARDDCREFNUM
FROM MASTER_ODS M
INNER JOIN TF_OBG_DIFF TF ON TRIM(TF.BG_NUM)=REPLACE(M.MASTER_REF,'/','-') 
LEFT JOIN LCMASTER_ODS L ON M.KEY97=L.KEY97
LEFT JOIN IGMASTER_ODS I ON I.KEY97=M.KEY97
LEFT JOIN PRODTYPE_ODS PR ON TRIM(PR.KEY97)=TRIM(M.PRODTYPE) 
LEFT JOIN PARTYDTLS_ODS APP ON APP.KEY97=L.APP_PTY
LEFT JOIN GFPF_ODS PCPG ON TRIM(REPLACE(APP.CUS_MNM,' ',''))=TRIM(TRIM(REPLACE(PCPG.GFCUS,' ',''))||TRIM(REPLACE(PCPG.GFCLC,' ',''))) --TRIM(PCPG.GFCUS1)=TRIM(PCPP.CUS_MNM)
LEFT JOIN MAP_CIF PCPM ON PCPG.GFCPNC=PCPM.GFCPNC
LEFT JOIN GVPF_ODS GV ON TRIM(REPLACE(APP.CUS_MNM,' ',''))=TRIM(REPLACE(GV.GVCUS1,' ','')) AND GV.GVPRF='P' AND GV.GVCCY='AED' AND TRIM(GV.GVING) IS NULL AND GV.GVMVT='P'
LEFT JOIN GVPF_ODS GVM ON TRIM(REPLACE(APP.CUS_MNM,' ',''))=TRIM(REPLACE(GVM.GVCUS1,' ','')) AND GVM.GVPRF='P' AND GVM.GVCCY=M.CCY AND TRIM(GVM.GVING) IS NULL AND GVM.GVMVT='P'
LEFT JOIN MAP_ACC MA ON MA.LEG_BRANCH_ID=GV.GVABF AND MA.LEG_SCAN=GV.GVANF AND MA.LEG_SCAS=GV.GVASF 
LEFT JOIN MAP_ACC MAM ON MAM.LEG_BRANCH_ID=GVM.GVABF AND MAM.LEG_SCAN=GVM.GVANF AND MAM.LEG_SCAS=GVM.GVASF
LEFT JOIN PARTYDTLS_ODS BEN ON BEN.KEY97=L.BEN_PTY 
LEFT JOIN PARTYDTLS_ODS ADVBK ON ADVBK.KEY97=L.ADVBNK_PTY
LEFT JOIN PARTYDTLS_ODS PCP ON PCP.KEY97=M.PCP_PTY
LEFT JOIN GFPF_ODS PCPI ON TRIM(REPLACE(PCP.CUS_MNM,' ',''))=TRIM(TRIM(REPLACE(PCPI.GFCUS,' ',''))||TRIM(REPLACE(PCPI.GFCLC,' ',''))) --TRIM(PCPG.GFCUS1)=TRIM(PCPP.CUS_MNM)
LEFT JOIN MAP_CIF PCPC ON PCPI.GFCPNC=PCPC.GFCPNC
LEFT JOIN GVPF_ODS GVP ON TRIM(REPLACE(PCP.CUS_MNM,' ',''))=TRIM(REPLACE(GVP.GVCUS1,' ','')) AND GVP.GVPRF='P' AND GVP.GVCCY='AED' AND TRIM(GVP.GVING) IS NULL AND GVP.GVMVT='P'
LEFT JOIN GVPF_ODS GVPM ON TRIM(REPLACE(PCP.CUS_MNM,' ',''))=TRIM(REPLACE(GVPM.GVCUS1,' ','')) AND GVPM.GVPRF='P' AND GVPM.GVCCY=M.CCY AND TRIM(GVPM.GVING) IS NULL AND GVPM.GVMVT='P'
LEFT JOIN MAP_ACC MAP ON MAP.LEG_BRANCH_ID=GVP.GVABF AND MAP.LEG_SCAN=GVP.GVANF AND MAP.LEG_SCAS=GVP.GVASF 
LEFT JOIN MAP_ACC MAMP ON MAMP.LEG_BRANCH_ID=GVPM.GVABF AND MAMP.LEG_SCAN=GVPM.GVANF AND MAMP.LEG_SCAS=GVPM.GVASF
LEFT JOIN C8PF C8 ON C8.C8CCY=M.CCY 
LEFT JOIN MAP_SOL SOL ON SOL.BR_CODE=CASE WHEN TRIM(M.BHALF_BRN) IS NOT NULL THEN M.BHALF_BRN ELSE M.INPUT_BRN END
LEFT JOIN USEROPTN_ODS U2 ON U2.KEY29=M.USEROPTN2
LEFT JOIN USEROPTN_ODS U5 ON U5.KEY29=M.USEROPTN5
LEFT JOIN TF_OP_ACC OP ON OP.MASTER_REF=M.MASTER_REF
WHERE TF.DIFF!=0 AND M.TYPEFLAG IN ('24171', '31349') AND TRIM(M.STATUS)='LIV';


COMMIT;

UPDATE TF001 SET
FUNC_CODE=rpad(NVL(FUNC_CODE,' '),1,' '),
SOL_ID=rpad(NVL(SOL_ID,' '),8,' '),
BG_NUM=rpad(NVL(BG_NUM,' '),16,' '),
EVENT_AMT=rpad(NVL(EVENT_AMT,' '),17,' '),
BG_EXPIRY_MONTH=rpad(NVL(BG_EXPIRY_MONTH,' '),3,' '),
BG_EXPIRY_DAYS=rpad(NVL(BG_EXPIRY_DAYS,' '),3,' '),
BG_EXPIRY_DATE=RPAD(NVL(BG_EXPIRY_DATE,' '),10,' '),
BG_CLAIM_EXPIRY_MONTHS=rpad(NVL(BG_CLAIM_EXPIRY_MONTHS,' '),3,' '),
BG_CLAIM_EXPIRY_DAYS=rpad(NVL(BG_CLAIM_EXPIRY_DAYS,' '),3,' '),
BG_CLAIM_EXPIRY_DATE=RPAD(NVL(BG_CLAIM_EXPIRY_DATE,' '),10,' '),
BG_CHARGES_BORNE_BY=rpad(NVL(BG_CHARGES_BORNE_BY,' '),1,' '),
BG_TYPE=rpad(NVL(BG_TYPE,' '),5,' '),
BG_CURRENCY=rpad(NVL(BG_CURRENCY,' '),3,' '),
CIF_ID=rpad(NVL(CIF_ID,' '),32,' '),
EVENT_DATE=RPAD(NVL(EVENT_DATE,' '),10,' '),
PURPOSE_OF_GUARANTEE_TEXT=rpad(NVL(PURPOSE_OF_GUARANTEE_TEXT,' '),39,' '),
BG_CLASS=rpad(NVL(BG_CLASS,' '),5,' '),
BG_EFFECTIVE_DATE=RPAD(NVL(BG_EFFECTIVE_DATE,' '),10,' '),
APPLICABLE_RULES=rpad(NVL(APPLICABLE_RULES,' '),36,' '),
APPLICABLE_SUB_RULES=rpad(NVL(APPLICABLE_SUB_RULES,' '),35,' '),
BG_FRUCTIFIED_AMOUNT=rpad(NVL(BG_FRUCTIFIED_AMOUNT,' '),17,' '),
IS_ORIGINAL_BG_RECEIVED_FLAG=rpad(NVL(IS_ORIGINAL_BG_RECEIVED_FLAG,' '),1,' '),
BG_REMARKS=rpad(NVL(BG_REMARKS,' '),100,' '),
COUNTER_BG_NUMBER=rpad(NVL(COUNTER_BG_NUMBER,' '),16,' '),
IMPORT_LICENSE_NUM=rpad(NVL(IMPORT_LICENSE_NUM,' '),15,' '),
LICENSE_EXPIRYDATE=RPAD(NVL(LICENSE_EXPIRYDATE,' '),10,' '),
CAPITALADEQUANCYCODE=rpad(NVL(CAPITALADEQUANCYCODE,' '),5,' '),
BG_PROVISION_AMOUNT=rpad(NVL(BG_PROVISION_AMOUNT,' '),17,' '),
FREE_CODE1=rpad(NVL(FREE_CODE1,' '),8,' '),
FREE_CODE2=rpad(NVL(FREE_CODE2,' '),8,' '),
FREE_CODE3=rpad(NVL(FREE_CODE3,' '),8,' '),
BG_OPERATIVE_ACCOUNT_ID=rpad(NVL(BG_OPERATIVE_ACCOUNT_ID,' '),16,' '),
APPLICANT_NAME=rpad(NVL(APPLICANT_NAME,' '),80,' '),
APPLICANT_ADDRESS1=rpad(NVL(APPLICANT_ADDRESS1,' '),45,' '),
APPLICANT_ADDRESS2=rpad(NVL(APPLICANT_ADDRESS2,' '),45,' '),
APPLICANT_ADDRESS3=rpad(NVL(APPLICANT_ADDRESS3,' '),45,' '),
APPLICANT_CITY=rpad(NVL(APPLICANT_CITY,' '),5,' '),
APPLICANT_STATE=rpad(NVL(APPLICANT_STATE,' '),5,' '),
APPLICANT_COUNTRY=rpad(NVL(APPLICANT_COUNTRY,' '),5,' '),
APPLICANT_PIN_CODE=rpad(NVL(APPLICANT_PIN_CODE,' '),10,' '),
APPLICANT_REF_NUM=rpad(NVL(APPLICANT_REF_NUM,' '),8,' '),
BG_RATE_CODE=rpad(NVL(BG_RATE_CODE,' '),5,' '),
BG_RATE=rpad(NVL(BG_RATE,' '),10,' '),
OTHER_BANK_REF_NUM=rpad(NVL(OTHER_BANK_REF_NUM,' '),16,' '),
PAYSYS_ID=rpad(NVL(PAYSYS_ID,' '),5,' '),
BENEFICIARY_CIF_ID=rpad(NVL(BENEFICIARY_CIF_ID,' '),32,' '),
BENEFICIARY_NAME=rpad(NVL(BENEFICIARY_NAME,' '),80,' '),
BENEFICIARY_ADDRESS1=rpad(NVL(BENEFICIARY_ADDRESS1,' '),40,' '),
BENEFICIARY_ADDRESS2=rpad(NVL(BENEFICIARY_ADDRESS2,' '),40,' '),
BENEFICIARY_ADDRESS3=rpad(NVL(BENEFICIARY_ADDRESS3,' '),40,' '),
BENEFICIARY_CITY=rpad(NVL(BENEFICIARY_CITY,' '),5,' '),
BENEFICIARY_STATE=rpad(NVL(BENEFICIARY_STATE,' '),5,' '),
BENEFICIARY_COUNTRY=rpad(NVL(BENEFICIARY_COUNTRY,' '),5,' '),
BENEFICIARY_PINCODE=rpad(NVL(BENEFICIARY_PINCODE,' '),10,' '),
BENEFICIARY_TYPE=rpad(NVL(BENEFICIARY_TYPE,' '),1,' '),
BG_CORRESPONDENT_BANK=rpad(NVL(BG_CORRESPONDENT_BANK,' '),8,' '),
BG_CORRESPONDENT_BRANCH=rpad(NVL(BG_CORRESPONDENT_BRANCH,' '),8,' '),
BG_CORRESPONDENT_NAME=rpad(NVL(BG_CORRESPONDENT_NAME,' '),80,' '),
BG_CORRESPONDENT_ADDRESS1=rpad(NVL(BG_CORRESPONDENT_ADDRESS1,' '),35,' '),
BG_CORRESPONDENT_ADDRESS2=rpad(NVL(BG_CORRESPONDENT_ADDRESS2,' '),35,' '),
BG_CORRESPONDENT_ADDRESS3=rpad(NVL(BG_CORRESPONDENT_ADDRESS3,' '),35,' '),
BG_CORRESPONDENT_CITY=rpad(NVL(BG_CORRESPONDENT_CITY,' '),5,' '),
BG_CORRESPONDENT_STATE=rpad(NVL(BG_CORRESPONDENT_STATE,' '),5,' '),
BG_CORRESPONDENT_COUNTRY=rpad(NVL(BG_CORRESPONDENT_COUNTRY,' '),5,' '),
BG_CORRESPONDENT_PINCODE=rpad(NVL(BG_CORRESPONDENT_PINCODE,' '),10,' '),
BIC_CODE=rpad(NVL(BIC_CODE,' '),11,' '),
PARTY_IDENTIFIER=rpad(NVL(PARTY_IDENTIFIER,' '),37,' '),
CORR_BANK_ADDRESS_TYPE=rpad(NVL(CORR_BANK_ADDRESS_TYPE,' '),1,' '),
BG_CRNCY_CODE=rpad(NVL(BG_CRNCY_CODE,' '),3,' '),
DC_REF_NUM=rpad(NVL(DC_REF_NUM,' '),16,' '),
SG_BILL_EQUIVALENT_CRNCY_CODE=rpad(NVL(SG_BILL_EQUIVALENT_CRNCY_CODE,' '),3,' '),
SG_BILL_EQUIVALENT_AMOUNT=rpad(NVL(SG_BILL_EQUIVALENT_AMOUNT,' '),17,' '),
BG_DC_RATE_CODE=rpad(NVL(BG_DC_RATE_CODE,' '),8,' '),
BG_DC_RATE=rpad(NVL(BG_DC_RATE,' '),8,' '),
SG_CONTINGENT_CRNCY_CODE=rpad(NVL(SG_CONTINGENT_CRNCY_CODE,' '),3,' '),
SG_CONTINGENT_AMOUNT=rpad(NVL(SG_CONTINGENT_AMOUNT,' '),17,' '),
RETAIN_MIN_CONTINGENT_AMOUNT=rpad(NVL(RETAIN_MIN_CONTINGENT_AMOUNT,' '),17,' '),
CONTINGENT_REVERSAL_EVENT=rpad(NVL(CONTINGENT_REVERSAL_EVENT,' '),1,' '),
MARGIN_REVERSAL_RATE_CODE=rpad(NVL(MARGIN_REVERSAL_RATE_CODE,' '),4,' '),
TRUST_RECEIPT_NUM=rpad(NVL(TRUST_RECEIPT_NUM,' '),16,' '),
NO_OF_UNITS=rpad(NVL(NO_OF_UNITS,' '),16,' '),
UNIT_VALUE=rpad(NVL(UNIT_VALUE,' '),17,' '),
COMMODITY_DETAILS_DESC=rpad(NVL(COMMODITY_DETAILS_DESC,' '),30,' '),
COMMODITY_REMARKS=rpad(NVL(COMMODITY_REMARKS,' '),30,' '),
BILL_LADING_NUM=rpad(NVL(BILL_LADING_NUM,' '),35,' '),
CARRIER_ID=rpad(NVL(CARRIER_ID,' '),65,' '),
CARRIER_NAME=rpad(NVL(CARRIER_NAME,' '),25,' '),
CARRIER_ADDRESS1=rpad(NVL(CARRIER_ADDRESS1,' '),50,' '),
CARRIER_ADDRESS2=rpad(NVL(CARRIER_ADDRESS2,' '),50,' '),
CARRIER_ADDRESS3=rpad(NVL(CARRIER_ADDRESS3,' '),50,' '),
CARRIER_CITY=rpad(NVL(CARRIER_CITY,' '),5,' '),
CARRIER_STATE=rpad(NVL(CARRIER_STATE,' '),5,' '),
CARRIER_COUNTRY=rpad(NVL(CARRIER_COUNTRY,' '),5,' '),
CARRIER_PINCODE=rpad(NVL(CARRIER_PINCODE,' '),10,' '),
ORDER_OF_CONSIGNEE=rpad(NVL(ORDER_OF_CONSIGNEE,' '),25,' '),
PORT_OF_DESTINATION=rpad(NVL(PORT_OF_DESTINATION,' '),70,' '),
ACTUAL_SHIPMENT_DATE=rpad(NVL(ACTUAL_SHIPMENT_DATE,' '),10,' '),
LIMITPREFIX=rpad(NVL(LIMITPREFIX,' '),12,' '),
LIMITSUFFIX=rpad(NVL(LIMITSUFFIX,' '),12,' '),
LIMITMARGINPCNT=rpad(NVL(LIMITMARGINPCNT,' '),10,' '),
RELLIMITS=rpad(NVL(RELLIMITS,' '),1,' '),
AMENDMENT_INDICATOR=rpad(NVL(AMENDMENT_INDICATOR,' '),1,' '),
AMENDMENT_REMARKS=rpad(NVL(AMENDMENT_REMARKS,' '),30,' '),
STATUS=rpad(NVL(STATUS,' '),1,' '),
AMENDINITIATEDBY=rpad(NVL(AMENDINITIATEDBY,' '),1,' '),
AUTORENEWAPPLICABLEFLG=rpad(NVL(AUTORENEWAPPLICABLEFLG,' '),1,' '),
FINALEXPIRYDATE=RPAD(NVL(FINALEXPIRYDATE,' '),10,' '),
AUTORENEWNEXTCYCLE=rpad(NVL(AUTORENEWNEXTCYCLE,' '),1,' '),
AUTORENEWFREQTYPE=rpad(NVL(AUTORENEWFREQTYPE,' '),1,' '),
AUTORENEWFREQDATE=rpad(NVL(AUTORENEWFREQDATE,' '),2,' '),
AUTORENEWFREQWEEKNUM=rpad(NVL(AUTORENEWFREQWEEKNUM,' '),1,' '),
AUTORENEWFREQDAY=rpad(NVL(AUTORENEWFREQDAY,' '),2,' '),
ISFREQDAYONHOLIDAY=rpad(NVL(ISFREQDAYONHOLIDAY,' '),1,' '),
BGCOUNTERGUARANTEERATECODE=rpad(NVL(BGCOUNTERGUARANTEERATECODE,' '),5,' '),
COUNTERRATE=rpad(NVL(COUNTERRATE,' '),8,' '),
ADVANCEAMTPAID=rpad(NVL(ADVANCEAMTPAID,' '),17,' '),
SOLIDORDER1=rpad(NVL(SOLIDORDER1,' '),8,' '),
ORDERNODTLS1=rpad(NVL(ORDERNODTLS1,' '),25,' '),
SOLIDORDER2=rpad(NVL(SOLIDORDER2,' '),8,' '),
ORDERNODTLS2=rpad(NVL(ORDERNODTLS2,' '),25,' '),
SOLIDORDER3=rpad(NVL(SOLIDORDER3,' '),8,' '),
ORDERNODTLS3=rpad(NVL(ORDERNODTLS3,' '),25,' '),
SOLIDORDER4=rpad(NVL(SOLIDORDER4,' '),8,' '),
ORDERNODTLS4=rpad(NVL(ORDERNODTLS4,' '),25,' '),
SOLIDORDER5=rpad(NVL(SOLIDORDER5,' '),8,' '),
ORDERNODTLS5=rpad(NVL(ORDERNODTLS5,' '),25,' '),
PURCHASEFORACID=rpad(NVL(PURCHASEFORACID,' '),16,' '),
SGDOPAYABLEFORACID=rpad(NVL(SGDOPAYABLEFORACID,' '),16,' '),
EXECADVNO1=rpad(NVL(EXECADVNO1,' '),16,' '),
EXECADVNO2=rpad(NVL(EXECADVNO2,' '),16,' '),
EXECADVNO3=rpad(NVL(EXECADVNO3,' '),16,' '),
EXECADVNO4=rpad(NVL(EXECADVNO4,' '),16,' '),
EXECADVNO5=rpad(NVL(EXECADVNO5,' '),16,' '),
PROMISETOPURCHASERECV=rpad(NVL(PROMISETOPURCHASERECV,' '),1,' '),
PROMISETOPURCHASEDATE=rpad(NVL(PROMISETOPURCHASEDATE,' '),10,' '),
PROMISETOPURCHASEREFNO=rpad(NVL(PROMISETOPURCHASEREFNO,' '),16,' '),
PURCHASEACCPTADVICE=rpad(NVL(PURCHASEACCPTADVICE,' '),3,' '),
FINANCINGFORACID=rpad(NVL(FINANCINGFORACID,' '),16,' '),
DEBITFINANCINGFORACID=rpad(NVL(DEBITFINANCINGFORACID,' '),1,' '),
PREFIXFINANCINGLIMITID=rpad(NVL(PREFIXFINANCINGLIMITID,' '),12,' '),
SUFFIXFINANCINGLIMITID=rpad(NVL(SUFFIXFINANCINGLIMITID,' '),5,' '),
ISLAMICRATECODE=rpad(NVL(ISLAMICRATECODE,' '),5,' '),
ISLAMICRATE=rpad(NVL(ISLAMICRATE,' '),8,' '),
SECTORCODE=rpad(NVL(SECTORCODE,' '),5,' '),
EXPCIFID=rpad(NVL(EXPCIFID,' '),32,' '),
EXPNAME=rpad(NVL(EXPNAME,' '),80,' '),
EXPADDR1=rpad(NVL(EXPADDR1,' '),45,' '),
EXPADDR2=rpad(NVL(EXPADDR2,' '),45,' '),
EXPADDR3=rpad(NVL(EXPADDR3,' '),45,' '),
EXPCITY=rpad(NVL(EXPCITY,' '),5,' '),
EXPSTATE=rpad(NVL(EXPSTATE,' '),5,' '),
EXPCNTRY=rpad(NVL(EXPCNTRY,' '),5,' '),
EXPPINCODE=rpad(NVL(EXPPINCODE,' '),10,' '),
BGCOLLBANKCODE=rpad(NVL(BGCOLLBANKCODE,' '),6,' '),
BGCOLLBRANCHCODE=rpad(NVL(BGCOLLBRANCHCODE,' '),6,' '),
BGCOLLBANKNAME=rpad(NVL(BGCOLLBANKNAME,' '),80,' '),
BGCOLLBANKADDR1=rpad(NVL(BGCOLLBANKADDR1,' '),45,' '),
BGCOLLBANKADDR2=rpad(NVL(BGCOLLBANKADDR2,' '),45,' '),
BGCOLLBANKADDR3=rpad(NVL(BGCOLLBANKADDR3,' '),45,' '),
BGCOLLBANKCITY=rpad(NVL(BGCOLLBANKCITY,' '),5,' '),
BGCOLLBANKSTATE=rpad(NVL(BGCOLLBANKSTATE,' '),5,' '),
BGCOLLBANKCNTRY=rpad(NVL(BGCOLLBANKCNTRY,' '),5,' '),
BGCOLLBANKPINCODE=rpad(NVL(BGCOLLBANKPINCODE,' '),10,' '),
BGCOLLBICCODE=rpad(NVL(BGCOLLBICCODE,' '),11,' '),
BGCOLLPARTYID=rpad(NVL(BGCOLLPARTYID,' '),35,' '),
BGCOLLADDRTYPE=rpad(NVL(BGCOLLADDRTYPE,' '),1,' '),
INTENDTOEXPORT=rpad(NVL(INTENDTOEXPORT,' '),1,' '),
INWARDDCREFNUM=rpad(NVL(INWARDDCREFNUM,' '),16,' ');

COMMIT;

update tf001 set bg_expiry_date='30-12-2099',BG_CLAIM_EXPIRY_DATE='30-12-2099' where to_date(bg_expiry_date,'dd-mm-yyyy')>='31-dec-2099';

COMMIT;

UPDATE TF001 SET PAYSYS_ID='SWIFT' WHERE FUNC_CODE='A';

UPDATE TF001 SET PAYSYS_ID='     ' WHERE FUNC_CODE='U';

UPDATE TF001 SET AMENDMENT_INDICATOR='E' WHERE FUNC_CODE='U' AND TRIM(AMENDMENT_INDICATOR) IS NULL;

COMMIT;
