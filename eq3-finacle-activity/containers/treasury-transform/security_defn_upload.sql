TRUNCATE TABLE SECURITY_DEFN_O_TABLE;
INSERT INTO SECURITY_DEFN_O_TABLE
select
'' RESPONSE,
'' TEMPLATE_NAME,
trim(s.SECID) NAME,
CCY ISSUE_CCY,
CASE WHEN PRODTYPE IN ('F1','F2','FI','TB','F3') THEN 'BOND-STD COUPON'
     WHEN PRODTYPE IN ('TL','SB') THEN 'BILL' END SECURITY_TYPE,
CASE WHEN PRODTYPE IN ('F1','F2','FI') THEN 'Corporate Bonds'
     WHEN PRODTYPE In ('TB','F3') THEN 'Fix Rate Govt Bonds'
     WHEN PRODTYPE IN ('SB','TL') THEN 'Bills'
     END A_TYPE,
'' TAX_FREE,
CASE --WHEN TRIM(s.SECID)in('1MBD OGIMK 4.4 03/09','BHRAIN 6.125 7/5/22') THEN 'CORPORATE BONDS'
     WHEN TRIM(SD)='GOVERNMENT' AND TRIM(port)='FI' THEN 'GOVT BONDS QTD' 
     WHEN TRIM(SD)='GOVERNMENT' AND TRIM(port)='TRSY' THEN 'T-BOND-MINISTRY' 
     --WHEN TRIM(SD)='GOVERNMENT' AND TRIM(port)='TRSY' THEN 'T-BOND' 
     WHEN TRIM(SD)='INVESTMENT' THEN 'GOVT BONDS QTD' 
     WHEN SUBSTR(TRIM(s.SECID),1,3) ='CBK' THEN 'CBK_BOND'--'TREASURY BILL' as ----as per requirement will be changed to CBK_BOND--CENTRAL BANK BOND
     WHEN SUBSTR(TRIM(s.SECID),1,3) ='KTB' THEN 'T-BOND'--TREASURY BOND
     WHEN PRODTYPE in( 'F1','F3') THEN 'CORPORATE BONDS'
     WHEN PRODTYPE = 'F2' THEN 'CORP BONDS UNQU'
--   WHEN PRODTYPE = 'SB' THEN 'CBK_BOND'
--     WHEN PRODTYPE  'TB' THEN 'T_BILL'
     WHEN PRODTYPE IN ('TL','TB','SB') THEN 'T-Bond'
     END INSTRUMENT_CLASS_DATA_NAME,
'EXCEL-YIELD' YIELD_METHOD,
CASE WHEN BASIS='BOND' THEN '30/360' 
     WHEN BASIS='EBOND' THEN '30E/360'
     WHEN BASIS='ACT365' THEN 'A/A'
ELSE TO_CHAR(SUBSTR(BASIS,1,1))||'/'||TO_CHAR(SUBSTR(BASIS,2)) END YIELD_BASIS,
--'A/365' YIELD_BASIS,
'EXCEL-YIELD' EFFECTIVE_YIELD_METHOD,
CASE WHEN BASIS='BOND' THEN '30/360' 
     WHEN BASIS='EBOND' THEN '30E/360'
     WHEN BASIS='ACT365' THEN 'A/A'
ELSE TO_CHAR(SUBSTR(BASIS,1,1))||'/'||TO_CHAR(SUBSTR(BASIS,2)) END EFFECTIVE_YIELD_BASIS,
--'A/365' EFFECTIVE_YIELD_BASIS,
DESCR ALT_ID1,
TO_CHAR(VDATE,'DD-Mon-YYYY')  ISSUE_DATE,
TO_CHAR(MDATE,'DD-Mon-YYYY')  MATURITY_DATE,
CASE WHEN TRIM(CCY)='KWD' AND TRIM(PRODTYPE)='F2' THEN 'FLOAT' WHEN TRIM(RATECODE) IS NULL THEN 'FIX' ELSE 'FLOAT' END SIDE_$1_CASH_FLOW_SIDE_TYPE,--CASE WHEN WHEN TRIM(RATECODE) IS NULL THEN 'FIX' ELSE 'FLOAT' END
CASE WHEN (TRIM(RATECODE) IS NULL OR (TRIM(CCY)!='KWD' AND TRIM(PRODTYPE)!='F2'))  THEN COUPRATE_8 ELSE NULL END SIDE_$1_FIX_RATE,--CASE WHEN TRIM(RATECODE) IS NULL THEN COUPRATE_8 ELSE NULL END
RATECODE SIDE_$1_REFERENCE_RATE,
PARAMT REDEMPTION_VALUE,
CASE WHEN TRIM(PMTFREQ)='182' THEN 'SEMI_182' 
     WHEN TRIM(PMTFREQ)='91' THEN '91DAYS'
     WHEN TRIM(PMTFREQ)='A' THEN 'ANNUAL'
     WHEN TRIM(PMTFREQ)='M' THEN 'MONTHLY'
     WHEN TRIM(PMTFREQ)='Q' THEN 'QUARTERLY'
     WHEN TRIM(PMTFREQ)='S' THEN 'SEMI'
     END SIDE_$1_CREATION_FREQUENCY,
trim(C.CMNE) ISSUER_STRING,--CASE WHEN trim(C.CMNE)='CENTRALKWT' THEN 'CBKUKW' ELSE trim(C.CMNE) END
CASE WHEN MDATE>TO_DATE(get_param('EOD_DATE'),'DD-MM-YYYY') THEN 'OPEN' ELSE 'CLOSE' END ACTIVE_STATUS,
'EPG_KWT' ENTITY_PERM_GROUP,
'EXTERNAL' MTM_VALUATION,
s.SECID DESCRIPTION,
'NONE' SHORT_SALES_ACTION,
'ORIGINAL FACE' MIN_QTY_METHOD,
case when DENOM> 100 then 1 else PARAMT end MINIMUM_AMOUNT,
case when DENOM> 100 then 1 else PARAMT end QTY_MULTIPLE,
'WAP_POSITION' REALIZATION_METHOD,--WEIGHTED-AVG
'STRAIGHT LINE' AMORTISATION_METHOD,
TO_CHAR(MDATE,'DD-Mon-YYYY') DATE_TO_REALIZE,
CASE WHEN SUBSTR(TRIM(s.SECID),1,3) IN ('CBK','KTB') THEN '0' ELSE '1' END AMORT_APPLICABILITY,
case when PARAMT> 100 then 1 else PARAMT end ISSUE_PRICE,
case when PARAMT> 100 then 1 else PARAMT end ISSUANCE_FACE,
'' PRICE_METHOD,
'' PRICE_BASIS,
'' ACC_COUPON_METHOD,
'' TRADED_ACCRUED_COUPON,
'' TRADED_BASIS_CODE,
'' YIELD_COMPOUNDING_FREQUENCY,
'' PRICE_QUOTATION,
PRICEDECS PRICE_ROUNDING_DIGITS,
'8' YIELD_DISPLAY_PLACES,
CCY SETTLEMENT_CALENDAR_SET,
'S' SETTLEMENT_DAY_CONVENTION,
'1bd' SETTLEMENT_DELAY,
'T' IS_SPLITABLE,
'T' IS_REPOABLE,
'T' AUTO_REALIZE,
'' LAST_COUPON_AS_MM,
'' MRS_PRICE_YIELD,
'' TAXABLE,
'' WH_TAX_PERCENT,
'' CASH_FLOW_$1_WH_TAX_PERCENT,
'' SIDE_$1_WH_TAX_PERCENT,
'' IS_COUPON_BEARING,
SETTCCY INDEX_SETT_CCY,
'1bd' INDEX_SETTLEMENT_GAP,
CCY SIDE_NOTIONAL_AMOUNT_CURRENCY,
PARAMT SIDE_$1_NOTIONAL_AMOUNT_VALUE,
CASE WHEN BASIS='BOND' THEN '30/360' 
     WHEN BASIS='EBOND' THEN '30E/360'
     WHEN BASIS='ACT365' THEN 'A/A'
ELSE TO_CHAR(SUBSTR(BASIS,1,1))||'/'||TO_CHAR(SUBSTR(BASIS,2)) END SIDE_$1_BASIS_CODE,
CCY SIDE_CASH_FLOW_CALDAR_SET_NAME,
CASE WHEN TRIM(CCY)='USD' THEN 'S' ELSE 'N' END SIDE_CASH_FLOW_DAY_CONVENTION,--'S'
CASE WHEN TRIM(CCY)='USD' THEN 'S' ELSE 'N' END SIDE_START_DATE_DAY_CONVENTION,
CASE WHEN TRIM(CCY)='USD' THEN 'S' ELSE 'N' END SIDE_END_DATE_DAY_CONVENTION,
'' SIDE_$1_ROUNDING_METHOD,
'' SIDE_$1_AMOUNT_ROUNDING_METHOD,
'' SIDE_RELATIVE_SETTLEMENT_DELAY,
CASE WHEN TRIM(CCY)='USD' THEN 'S' ELSE 'N' END SETTLEMENT_DAY_CONVENTION,
CCY||'-LIBOR' SIDE_CRV_DATA_FX_FWD_CURVE_ID,
CCY||'-LIBOR' SIDE_CURVE_DATA_DISC_CURVE_ID,
CCY||'-LIBOR' SIDE_CURVE_DATA_IRR_CURVE_ID,
'' GENERATE_CASH_FLOWS_BUTTON,
'OTHERS' GUARANTEED_BY,
'SHORT INITIAL' STUB_PERIOD_TYPE,
TO_CHAR(LAST_DAY(VDATE),'DD-Mon-YYYY') INITIAL_STUB_END_DATE,
SPREADRATE_8 MARGIN
FROM SECM S
INNER JOIN CUST C ON TRIM(S.ISSUER)=TRIM(C.CNO)
left join(SELECT SECID,sd,PORT FROM TR_EQU_AND_SEC_OUTSTANDING WHERE TRIM(TYPE)='Fixed Income Investments' AND TRIM(NETQTY) != 0 AND TRIM(NETQTY) IS NOT NULL) x on trim(s.secid) = trim(x.secid)
WHERE TRIM(s.SECID) IN (SELECT trim(SECID) FROM TR_EQU_AND_SEC_OUTSTANDING WHERE TRIM(TYPE)='Fixed Income Investments' AND TRIM(NETQTY) != 0 AND TRIM(NETQTY) IS NOT NULL
union all
select trim(secid) secid from secm where trim(PRODTYPE) in ('TB','SB')  and MDATE > to_date(get_param('EOD_DATE'),'dd-mm-yyyy')) OR TRIM(s.SECID) IN(SELECT TRIM(SECID) FROM SPSH WHERE INVTYPE='I') ;
--S.PRODTYPE IN ('F1','F2','FI','SB','TB') AND MDATE >TO_DATE(get_param('EOD_DATE'),'DD-MM-YYYY');
--and TO_DATE(LSTMNTDATE,'YYYY-MM-DD') >TO_DATE('28-07-2016','DD-MM-YYYY')
COMMIT;
update SECURITY_DEFN_O_TABLE set "SIDE_$1_REFERENCE_RATE"='CBKDIS' where "SIDE_$1_CASH_FLOW_SIDE_TYPE"='FLOAT' and trim("SIDE_$1_REFERENCE_RATE") is null;
commit;
update SECURITY_DEFN_O_TABLE set REDEMPTION_VALUE='100',"SIDE_$1_NOTIONAL_AMOUNT_VALUE"='100' where REDEMPTION_VALUE > 100;
commit;
EXIT;
 