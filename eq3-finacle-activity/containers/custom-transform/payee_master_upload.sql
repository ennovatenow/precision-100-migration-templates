DROP SEQUENCE NXT_PAYEE_ID01;
CREATE SEQUENCE NXT_PAYEE_ID01;
TRUNCATE TABLE PAYEE_MASTER_O_TABLE;

--UPDATE INTERNET_PAYEE SET PAYEE_ACCOUNT = TRIM(REPLACE(PAYEE_ACCOUNT,'-',''))  ;

--UPDATE INTERNET_PAYEE SET PAYEE_ACCOUNT = TRIM(REPLACE(PAYEE_ACCOUNT,'–',''))  ;
--COMMIT;

update INTERNET_PAYEE set bic='ABKKKWAAXXX' where trim(PAYEE_TYPE)='Same'; 
commit; 

UPDATE INTERNET_PAYEE A SET BIC=(SELECT TRIM(BIC) BIC FROM LOCAL_BANK_BIC B WHERE  TRIM(B.BANK_NAME) = TRIM(A.PAYEE_BANK) ) WHERE PAYEE_TYPE='Local Bank';


UPDATE INTERNET_PAYEE A SET BIC = ( SELECT DISTINCT BIC_CODE FROM(
select DISTINCT TRIM(A.CUSTOMER_NO) CUSTOMER_NO, B.PAYEEACCOUNT PAYEEACCOUNT,BIC_CODE from INTERNET_PAYEE A
INNER join e_bank_BIC B ON TRIM(A.CUSTOMER_NO) = '0'||TRIM(B.CUSTOMERNO) AND TRIM(REPLACE(A.PAYEE_ACCOUNT,'-','')) = TRIM(REPLACE(B.PAYEEACCOUNT,'-',''))
) B WHERE TRIM(A.CUSTOMER_NO) = TRIM(B.CUSTOMER_NO) AND TRIM(REPLACE(A.PAYEE_ACCOUNT,'-','')) = TRIM(REPLACE(B.PAYEEACCOUNT,'-',''))
)
WHERE (TRIM(A.CUSTOMER_NO),TRIM(REPLACE(A.PAYEE_ACCOUNT,'-',''))) IN(
select DISTINCT TRIM(A.CUSTOMER_NO) CUSTOMER_NO, TRIM(REPLACE(B.PAYEEACCOUNT,'-','')) PAYEEACCOUNT from INTERNET_PAYEE A
INNER join e_bank_BIC B ON TRIM(A.CUSTOMER_NO) = '0'||TRIM(B.CUSTOMERNO) AND TRIM(REPLACE(A.PAYEE_ACCOUNT,'-','')) = TRIM(REPLACE(B.PAYEEACCOUNT,'-','')));

update INTERNET_PAYEE set bic='ZZZ' where trim(bic) is null;
commit; 

INSERT INTO PAYEE_MASTER_O_TABLE
SELECT DISTINCT '01' "BANK_ID",
       '' "BNF_ID",--NXT_PAYEE_ID01.NEXTVAL
       '1' "DB_TS",
       '001' "LANG_ID",
       '' "DISPLAY_ID",--NXT_PAYEE_ID01.CURRVAL
       NVL(TRIM(IP.CUSTOMER_NO),CONVERT_CODES('ALPHABET','Y')) "CORP_ID",
       '' "BNF_CODE" ,
       NVL(TRIM(IP.PAYEE_NAME),CONVERT_CODES('ALPHABET','Y')) "BNF_NAME",
       IP.PAYEE_ADDRESS1 "BNF_ADDRESS_1",
       IP.PAYEE_ADDRESS2 "BNF_ADDRESS_2",
       '' "BNF_ADDRESS_3",
       '' "BNF_STATE",
       SUBSTR(IP.PAYEE_COUNTRY_CODE,1,5) "BNF_CNTRY",
       '' "BNF_TEL",
       TRIM(IP.CONTACT_PHONENO) "BNF_MOB",
       '' "BNF_FAX",
       'NN' "BNF_TYPE", 
       NVL(BR.BANK_REF_NO ,CONVERT_CODES('DIGIT','Y')) "OTH_BANK_REF_NO",
       NVL(TRIM(BD.INSTITUTION_NAME),CONVERT_CODES('ALPHABET','Y')) "BNF_BANK_NAME",
       NVL(TRIM(BD.ADDRESS),CONVERT_CODES('ALPHABET','Y')) "BNF_BANK_ADDRESS",
       CASE WHEN IP.PAYEE_TYPE='Same' THEN TO_CHAR(SUBSTR(IP.PAYEE_ACCOUNT_1,2,3)) ELSE CONVERT_CODES('DIGIT','Y') END  "HOME_BANK_BRANCH_CODE",--Need to Check
       NVL(BD.COUNTRY_CODE,SUBSTR(CONVERT_CODES('ALPHABET','Y'),1,5)) "BNF_BANK_COUNTRY",
       NVL(TRIM(SUBSTR(replace(replace(TRIM(IP.PAYEE_ACCOUNT_1),' ',''),'-',''),1,34)),CONVERT_CODES('ALPHANUMERIC','Y')) "ACCOUNT_ID",
       IP.PAYEE_TRAN_CURRENCY "BNF_ACCT_CRN",
       '' "BNF_COMM_IND",
       '' "PAYEE_FORMAT",
       '' "PYMT_FORMAT",
       '' "EXPIRY_DATE",
       'C' "BNF_IND",
       '' "FREE_FIELD_1",
       '' "FREE_FIELD_2",
       '' "FREE_FIELD_3",
       '' "FREE_FIELD_4",
       '' "FREE_FLG_1",
       '' "FREE_FLG_2",
       '' "FREE_FLG_3",
       '' "FREE_FLG_4",
       '' "FREE_IND_1",
       '' "FREE_IND_2",
       '' "BILL_EXPIRY_PRD",
       '' "MIN_PMT_AMT",
       '' "LATE_PYMT_FLG",
       '' "PART_PYMT_FLG",
       '' "EXS_PYMT_FLG",
       '' "REAL_TIME_CREDIT_FLG",
       '' "CHRG_PMT_FLG",
       '' "PRENOTE_REQUIRED",
       CASE WHEN IP.IS_DELETED='1'  THEN 'Y' ELSE 'N' END "DEL_FLG",
       'G' "GLOBAL_FLG",
       'MIGRATED' "R_MOD_ID",
       to_date(substr(IP.DATE_TIME_CREATED,1,19),'YYYY-MM-DD HH24:MI:SS')  "R_MOD_TIME",
       'MIGRATED' "R_CRE_ID",
       to_date(substr(IP.DATE_TIME_CREATED,1,19),'YYYY-MM-DD HH24:MI:SS') "R_CRE_TIME",
       '' "BNF_ACCT_TYPE",
       NVL('',CONVERT_CODES('ALPHANUMERIC','Y'))   "BNF_CITY_ZIP",
       NVL(BD.CITY_ZIPCODE,CONVERT_CODES('ALPHANUMERIC','Y')) "BNF_BANK_CITY_ZIP",
       '' "BNF_GROUP_ID",
       '' "BNF_EMAIL",
       '' "STD_IND_CD",
       '' "DIVISION",
       '' "ADDED_BANK_BRANCH_NAME",
       CASE WHEN TRIM(PAYEE_TYPE)='Same' THEN 'HBK' 
              ELSE  'OBK' END "BANK_TYPE",
       '' "BNF_CITY_CODE",
       '' "BNF_ZIP_CODE",
       NVL(BR.NETWORK_TYPE,CONVERT_CODES('ALPHANUMERIC','Y')) "NETWORK_ID",
       CASE WHEN TRIM(BR.ROUTING_NO) IS NULL THEN CONVERT_CODES('ALPHANUMERIC','Y') ELSE TO_CHAR(TRIM(TRIM(BR.ROUTING_NO))) END  "BANK_IDENTIFIER",
       '' "PTP_TYPE",
       '' "PTP_ID",
       '' "DELIVERY_MODES_SUPPORTED",
       '' "FILE_SEQ_NUM",
       '' "FU_REC_NUM",
       '' "EXTERNAL_BILLER_ID",
       '' "SERVICE_TYPE",
       '' "AGGREGATOR_ID"
	   FROM 
  (SELECT IP.*,IP1.PAYEE_ACCOUNT PAYEE_ACCOUNT_1  FROM INTERNET_PAYEE IP INNER JOIN( SELECT CUSTOMER_NO,TRIM(SUBSTR(replace(replace(TRIM(PAYEE_ACCOUNT),' ',''),'-',''),1,34)) PAYEE_ACCOUNT,max(to_date(substr(DATE_AUTHORISED,1,19),
 'YYYY-MM-DD HH24:MI:SS')) MAX_DATE_AUTHORISED FROM 
 INTERNET_PAYEE where status='A' and IS_DELETED='0' GROUP BY CUSTOMER_NO,TRIM(SUBSTR(replace(replace(TRIM(PAYEE_ACCOUNT),' ',''),'-',''),1,34))) IP1 ON IP.CUSTOMER_NO=IP1.CUSTOMER_NO AND TRIM(SUBSTR(replace(replace(TRIM(IP.PAYEE_ACCOUNT),' ',''),'-',''),1,34))=TRIM(IP1.PAYEE_ACCOUNT)
 AND to_date(substr(IP.DATE_AUTHORISED,1,19),'YYYY-MM-DD HH24:MI:SS')  = IP1.MAX_DATE_AUTHORISED) IP
   inner join map_cif on IP.CUSTOMER_NO = fin_cif_id
   inner JOIN BANK_ROUTING_TABLE BR ON(trim(BIC) = trim(BR.ROUTING_NO) ) and BR.NETWORK_TYPE = 
            case when TRIM(PAYEE_TYPE)='Same' then 'WIB' when TRIM(PAYEE_TYPE)='Local Bank' then 'KASIP' when TRIM(PAYEE_TYPE)='International' then 'SWI' end
            and case when TRIM(PAYEE_TYPE)='Same' and BR.BANK_REF_NO!='14539' then 0 else 1 end = 1
  LEFT JOIN BANK_DETAILS BD ON  BD.BANK_REF_NO = BR.BANK_REF_NO
  WHERE  IP.STATUS = 'A' AND IP.IS_DELETED ='0' ;
commit;
--delete from SMS_ALERTS_REG_O_TABLE where CUST_ID not in(select CORP_ID from SMS_ALERTS_SUB_O_TABLE);

--COMMIT;
  
--UPDATE MOBILE_BANKING_BENEFICIARY SET BBF_ACCOUNT_NUMBER = TRIM(REPLACE(BBF_ACCOUNT_NUMBER,'-','')) WHERE BBF_BENEFICIARY_TYPE='ABK' ;


create index mbb_BBF_BENEFICIARY_ID on MOBILE_BANKING_BENEFICIARY(BBF_BENEFICIARY_ID);

create index mbb_BBF_BENEFICIARY_TYPE on MOBILE_BANKING_BENEFICIARY(BBF_BENEFICIARY_TYPE);

create index mbb_BBF_IS_DELETED on MOBILE_BANKING_BENEFICIARY(BBF_IS_DELETED);

create index mbb_BBF_ACCOUNT_NUMBER on MOBILE_BANKING_BENEFICIARY(BBF_ACCOUNT_NUMBER);

UPDATE MOBILE_BANKING_BENEFICIARY SET BBF_ACCOUNT_NUMBER = TRIM(REPLACE(BBF_ACCOUNT_NUMBER,'–','')) WHERE BBF_BENEFICIARY_TYPE='ABK' ;
UPDATE MOBILE_BANKING_BENEFICIARY SET BBF_ACCOUNT_NUMBER = TRIM(REPLACE(BBF_ACCOUNT_NUMBER,'-','')) WHERE BBF_BENEFICIARY_TYPE='ABK' ;
COMMIT;

update MOBILE_BANKING_BENEFICIARY set bic='ABKKKWAAXXX' where trim(BBF_BENEFICIARY_TYPE)='ABK'; 
commit;

drop table mbb_same_ccy;

create table mbb_same_ccy as 
SELECT BBF_BENEFICIARY_ID,CURRENCY FROM MOBILE_BANKING_BENEFICIARY
INNER JOIN MAP_ACC ON BBF_ACCOUNT_NUMBER = LEG_BRANCH_ID||LEG_SCAN||LEG_SCAS
WHERE BBF_BENEFICIARY_TYPE='ABK' AND BBF_STATUS='ACTIVE' AND BBF_IS_DELETED='0';

UPDATE MOBILE_BANKING_BENEFICIARY A SET TRAN_CCY = (SELECT CURRENCY FROM(
select * from mbb_same_ccy
) B WHERE A.BBF_BENEFICIARY_ID = B.BBF_BENEFICIARY_ID
) WHERE BBF_BENEFICIARY_TYPE='ABK' AND BBF_STATUS='ACTIVE' AND BBF_IS_DELETED='0';

commit;  


drop table mbb_local_ccy;

create table mbb_local_ccy as 
SELECT BBF_BENEFICIARY_ID,  ROUTING_NO BIC,'KWD' TRAN_CCY FROM MOBILE_BANKING_BENEFICIARY
INNER JOIN BANK_ROUTING_TABLE ON ROUTING_NO LIKE  upper(SUBSTR(TRIM(replace(BBF_ACCOUNT_NUMBER,' ','')),5,4))||'%' AND  NETWORK_TYPE='KASIP'
INNER JOIN MOBILE_BANKING_USER ON TRIM(USR_USER_ID) = TRIM(BBF_USER_ID)
WHERE BBF_BENEFICIARY_TYPE='LOCAL';

UPDATE MOBILE_BANKING_BENEFICIARY a SET (BIC,TRAN_CCY) =( select BIC,TRAN_CCY from(
select * from mbb_local_ccy
) b where a.BBF_BENEFICIARY_ID = b.BBF_BENEFICIARY_ID
)
where  BBF_BENEFICIARY_TYPE='LOCAL';

COMMIT;

update MOBILE_BANKING_BENEFICIARY set bic='ZZZ' where trim(bic) is null;
commit; 

update MOBILE_BANKING_BENEFICIARY a set TRAN_CCY = (select trim(CUR_CODE) from mobile_bank_currency b where trim(CUR_CODE) is not null and trim(a.BBF_BENEFICIARY_ID) =trim(b.BBF_BENEFICIARY_ID))
where trim(a.BBF_BENEFICIARY_ID) in (select trim(BBF_BENEFICIARY_ID) from mobile_bank_currency b where trim(CUR_CODE) is not null);

COMMIT;

update MOBILE_BANKING_BENEFICIARY a set BIC = (select trim(BIC_CODE) from mobile_bank_bic b where trim(BIC_CODE) is not null and trim(a.BBF_BENEFICIARY_ID) =trim(b.BBF_BENEFICIARY_ID))
where trim(a.BBF_BENEFICIARY_ID) in (select trim(BBF_BENEFICIARY_ID) from mobile_bank_bic b where trim(BIC_CODE) is not null);

commit;  
  
  --Mobile banking beneficiary
  INSERT INTO PAYEE_MASTER_O_TABLE
  SELECT DISTINCT '01' "BANK_ID",
       '' "BNF_ID",--NXT_PAYEE_ID01.NEXTVAL
       '1' "DB_TS",
       '001' "LANG_ID",
       '' "DISPLAY_ID",--NXT_PAYEE_ID01.CURRVAL
       NVL(TRIM(M.FIN_CIF_ID),CONVERT_CODES('ALPHABET','Y')) "CORP_ID",
       '' "BNF_CODE" ,
       NVL(TRIM(MB.BBF_BENEFICIARY_NAME),CONVERT_CODES('ALPHABET','Y')) "BNF_NAME",
       '' "BNF_ADDRESS_1",--*****IP.PAYEE_ADDRESS1
       '' "BNF_ADDRESS_2",--****IP.PAYEE_ADDRESS2
       '' "BNF_ADDRESS_3",
       '' "BNF_STATE",
       '' "BNF_CNTRY",--*****SUBSTR(IP.PAYEE_COUNTRY_CODE,1,5)
       '' "BNF_TEL",
       TRIM(MB.BBF_CUSTOMER_CONTACT_NUMBER) "BNF_MOB",
       '' "BNF_FAX",
       'NN' "BNF_TYPE", 
       NVL(BM.BANK_REF_NO ,CONVERT_CODES('DIGIT','Y')) "OTH_BANK_REF_NO",
       NVL(TRIM(BD.INSTITUTION_NAME),CONVERT_CODES('ALPHABET','Y')) "BNF_BANK_NAME",
       NVL(TRIM(BD.ADDRESS),CONVERT_CODES('ALPHABET','Y')) "BNF_BANK_ADDRESS",
       CASE WHEN MB.BBF_BENEFICIARY_TYPE='ABK' THEN TO_CHAR(SUBSTR(MB.BBF_ACCOUNT_NUMBER,2,3)) ELSE CONVERT_CODES('DIGIT','Y') END  "HOME_BANK_BRANCH_CODE",--Need to Check
       NVL(BD.COUNTRY_CODE,SUBSTR(CONVERT_CODES('ALPHABET','Y'),1,5)) "BNF_BANK_COUNTRY",
       NVL(TRIM(SUBSTR(REPLACE(REPLACE(TRIM(MB.BBF_ACCOUNT_NUMBER),' ',''),'-',''),1,34)),CONVERT_CODES('ALPHANUMERIC','Y')) "ACCOUNT_ID",
       TRAN_CCY "BNF_ACCT_CRN",--****IP.PAYEE_TRAN_CURRENCY
       '' "BNF_COMM_IND",
       '' "PAYEE_FORMAT",
       '' "PYMT_FORMAT",
       '' "EXPIRY_DATE",
       'C' "BNF_IND",
       '' "FREE_FIELD_1",
       '' "FREE_FIELD_2",
       '' "FREE_FIELD_3",
       '' "FREE_FIELD_4",
       '' "FREE_FLG_1",
       '' "FREE_FLG_2",
       '' "FREE_FLG_3",
       '' "FREE_FLG_4",
       '' "FREE_IND_1",
       '' "FREE_IND_2",
       '' "BILL_EXPIRY_PRD",
       '' "MIN_PMT_AMT",
       '' "LATE_PYMT_FLG",
       '' "PART_PYMT_FLG",
       '' "EXS_PYMT_FLG",
       '' "REAL_TIME_CREDIT_FLG",
       '' "CHRG_PMT_FLG",
       '' "PRENOTE_REQUIRED",
       CASE WHEN MB.BBF_IS_DELETED='TRUE'  THEN 'Y' ELSE 'N' END "DEL_FLG",
       'G' "GLOBAL_FLG",
       'MIGRATED' "R_MOD_ID",
       BBF_DATE_CREATED  "R_MOD_TIME",
       'MIGRATED' "R_CRE_ID",
       BBF_DATE_CREATED "R_CRE_TIME",
       '' "BNF_ACCT_TYPE",
       NVL('',CONVERT_CODES('ALPHANUMERIC','Y'))   "BNF_CITY_ZIP",
       NVL(BD.CITY_ZIPCODE,CONVERT_CODES('ALPHANUMERIC','Y')) "BNF_BANK_CITY_ZIP",
       '' "BNF_GROUP_ID",
       '' "BNF_EMAIL",
       '' "STD_IND_CD",
       '' "DIVISION",
       '' "ADDED_BANK_BRANCH_NAME",
       CASE WHEN TRIM(BBF_BENEFICIARY_TYPE)='ABK' THEN 'HBK' 
              ELSE  'OBK' END "BANK_TYPE",
       '' "BNF_CITY_CODE",
       '' "BNF_ZIP_CODE",
       NVL(BR.NETWORK_TYPE,CONVERT_CODES('ALPHANUMERIC','Y')) "NETWORK_ID",
       CASE WHEN TRIM(BR.ROUTING_NO) IS NULL THEN CONVERT_CODES('ALPHANUMERIC','Y') ELSE TO_CHAR(TRIM(TRIM(BR.ROUTING_NO))) END  "BANK_IDENTIFIER",
       '' "PTP_TYPE",
       '' "PTP_ID",
       '' "DELIVERY_MODES_SUPPORTED",
       '' "FILE_SEQ_NUM",
       '' "FU_REC_NUM",
       '' "EXTERNAL_BILLER_ID",
       '' "SERVICE_TYPE",
       '' "AGGREGATOR_ID"
  FROM MOBILE_BANKING_BENEFICIARY MB
  INNER JOIN MOBILE_BANKING_USER ON TRIM(BBF_USER_ID) = TRIM(USR_USER_ID)
  INNER JOIN MAP_CIF M ON  TRIM(GFBRNM)||TRIM(GFCUS) =  TRIM(USR_EXTERNAL_USER_ID)
  INNER JOIN BANK_ROUTING_TABLE BR ON TRIM(ROUTING_NO) = TRIM(BIC) AND 
                                BR.NETWORK_TYPE = CASE WHEN TRIM(BBF_BENEFICIARY_TYPE)='ABK' THEN 'WIB' 
                                WHEN TRIM(BBF_BENEFICIARY_TYPE)='LOCAL' THEN 'KASIP' 
                                WHEN TRIM(BBF_BENEFICIARY_TYPE)='INTERNATIONAL' THEN 'SWI' END
                                AND CASE WHEN TRIM(BBF_BENEFICIARY_TYPE)='ABK' AND BR.BANK_REF_NO!='14539' THEN 0 ELSE 1 END = 1
  INNER JOIN BANK_MASTER_TABLE BM ON BM.BANK_REF_NO = BR.BANK_REF_NO           
  INNER JOIN BANK_DETAILS BD ON  BD.BANK_REF_NO = BR.BANK_REF_NO
  WHERE TRIM(BBF_STATUS)='ACTIVE' AND TRIM(USR_STATUS)='ACTIVE' and trim(BBF_IS_DELETED) ='0' AND (BIC) IS NOT NULL --AND (TRAN_CCY) IS NOT NULL
  ;
  
  commit;
  
  delete from PAYEE_MASTER_O_TABLE where  REGEXP_LIKE(BNF_NAME, UNISTR('[\0600-\06FF]')) and NETWORK_ID in('SWI','KASIP');
  
 -- delete from PAYEE_MASTER_O_TABLE where  REGEXP_LIKE(BNF_NAME, UNISTR('[\0600-\06FF]'));
 
  delete PAYEE_MASTER_O_TABLE where trim(CORP_ID) not in( select trim(CUST_ID) from SMS_AND_E_BANKING_USER_O_TABLE);
 
 update PAYEE_MASTER_O_TABLE set BNF_CNTRY='KW' where NETWORK_ID in('WIB') and trim(BNF_CNTRY) is null;

  update PAYEE_MASTER_O_TABLE set ACCOUNT_ID  = lpad(trim(ACCOUNT_ID),13,'0')
  where NETWORK_ID in('WIB') and length(trim(ACCOUNT_ID)) < 13; 
 
  update PAYEE_MASTER_O_TABLE a set BNF_ACCT_CRN =(
  select CURRENCY from PAYEE_MASTER_O_TABLE b
 inner join map_acc on  trim(ACCOUNT_ID) = trim(fin_acc_num)
 where NETWORK_ID in('WIB') and trim(BNF_ACCT_CRN) is null and a.BNF_ID = b.BNF_ID)
 where NETWORK_ID in('WIB') and trim(BNF_ACCT_CRN) is null;
 
 update PAYEE_MASTER_O_TABLE set BNF_ACCT_CRN='KWD' where NETWORK_ID in('KASIP','WIB') and trim(BNF_ACCT_CRN) is null;
  
 commit;
 
 delete from PAYEE_MASTER_O_TABLE where trim(BNF_ACCT_CRN) is null;
 commit;
  
  delete  PAYEE_MASTER_O_TABLE where BNF_BANK_NAME = 'ZZZZZZ';
  commit;
  update PAYEE_MASTER_O_TABLE set BNF_ID=NXT_PAYEE_ID01.NEXTVAL , DISPLAY_ID=NXT_PAYEE_ID01.CURRVAL;
  commit;  

--Remove duplicate beneficiary
  
delete from PAYEE_MASTER_O_TABLE where BNF_ID not in(select min(to_number(BNF_ID)) row_id from PAYEE_MASTER_O_TABLE group by BANK_IDENTIFIER,NETWORK_ID,CORP_ID,ACCOUNT_ID)
and (BANK_IDENTIFIER,NETWORK_ID,CORP_ID,ACCOUNT_ID) in (select BANK_IDENTIFIER,NETWORK_ID,CORP_ID,ACCOUNT_ID row_id from PAYEE_MASTER_O_TABLE group by BANK_IDENTIFIER,NETWORK_ID,CORP_ID,ACCOUNT_ID having count(*)>1);
commit;
  update PAYEE_MASTER_O_TABLE set BNF_ID=NXT_PAYEE_ID01.NEXTVAL , DISPLAY_ID=NXT_PAYEE_ID01.CURRVAL;
  commit;  
  
 EXIT;
 