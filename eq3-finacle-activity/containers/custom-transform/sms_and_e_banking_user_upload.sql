
DROP SEQUENCE  E_BANKING_REC_SEQ; 
CREATE SEQUENCE E_BANKING_REC_SEQ;
TRUNCATE TABLE SMS_AND_E_BANKING_USER_O_TABLE;
DROP TABLE ONLINE_BANK_CUST_DTLS_UNQ_DATA;
CREATE TABLE ONLINE_BANK_CUST_DTLS_UNQ_DATA AS SELECT A.CUSTOMER_NO,U.USERID,A.email,U.LANGUAGE,U.CIVILID,A.STATUS,A.LASTLOG_DATE FROM ONLINE_BANK_CUST_DTLS A
    INNER JOIN( SELECT CUSTOMER_NO,MAX (nvl(TO_DATE (SUBSTR (LASTLOG_DATE, 1, 19),'YYYY-MM-DD HH24:MI:SS'),add_months(to_date(get_param('EOD_DATE'),'dd-mm-yyyy'),-6)))MAX_LASTLOG_DATE
            FROM ONLINE_BANK_CUST_DTLS GROUP BY CUSTOMER_NO) B
          ON A.CUSTOMER_NO = B.CUSTOMER_NO
             AND nvl(TO_DATE (SUBSTR (LASTLOG_DATE, 1, 19),'YYYY-MM-DD HH24:MI:SS'),add_months(to_date(get_param('EOD_DATE'),'dd-mm-yyyy'),-6)) = B.MAX_LASTLOG_DATE
    INNER JOIN (SELECT * FROM USERS WHERE DELETEFLAG = '0' AND STATUS = 'A') U ON A.CUSTOMER_NO = U.CUSTOMERNO AND A.USER_ID=U.USERID
 WHERE ( A.STATUS='A' and (to_date(substr(LASTLOG_DATE,1,19),'YYYY-MM-DD HH24:MI:SS') > add_months(to_date(get_param('EOD_MIL'),'MM-DD-YYYY hh24:mi:ss'),-6)
 or (to_date(substr(LOGON_TRY_DATE,1,19),'YYYY-MM-DD HH24:MI:SS') > add_months(to_date(get_param('EOD_MIL'),'MM-DD-YYYY hh24:mi:ss'),-6) and (LASTLOG_DATE like '%1899%' or trim(LASTLOG_DATE) is null ) )
 ) );
 
 --- -6 month to EOD--GOP
 
 
 
 
 --SMS Banking and E-Banking
INSERT INTO SMS_AND_E_BANKING_USER_O_TABLE
SELECT distinct ' ' REC_NUM,
       M.fin_cif_id CUST_ID,
       '1' USER_TYPE,
       REPLACE(nvl(SUBSTR(trim(O.USERID) ,1,32),M.fin_cif_id),'.','-') CORP_USER,
       CASE WHEN LENGTH(REPLACE(A.SALUTATION,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.SALUTATION) END SALUTATION,
       CASE WHEN LENGTH(REPLACE(A.CUST_LAST_NAME,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_LAST_NAME) END C_L_NAME,
       CASE WHEN LENGTH(REPLACE(NVL(A.CUST_MIDDLE_NAME,' '),'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_MIDDLE_NAME) END C_M_NAME,
       CASE WHEN LENGTH(REPLACE(A.CUST_FIRST_NAME,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_FIRST_NAME) END C_F_NAME,
       O.email C_EMAIL_ID,
       REPLACE(NVL(TRIM(A.ADDRESS_LINE1),CONVERT_CODES('ALPHABET','Y')),'"','') C_ADDR1,
       REPLACE(CASE WHEN LENGTH(REPLACE(A.ADDRESS_LINE2,'','.'))=1 THEN N'' ELSE TRIM(A.ADDRESS_LINE2)END,'"','')  C_ADDR2,
       REPLACE(CASE WHEN LENGTH(REPLACE(NVL(A.ADDRESS_LINE3,' '),'','.'))=1 THEN N'' ELSE TRIM(A.ADDRESS_LINE3)END,'"','') C_ADDR3,
       '0000000' C_CITY,
       '' C_STATE,
       'KW' C_CNTRY,
       '' C_ZIP,
       A.PHONE C_PHONE_NO,
       '' C_M_PHONE_NO,
       '' C_FAX_NO,
       '' PRIM_ACID,
       '' P_BRANCH_ID,
       CASE WHEN LENGTH(A.GENDER)> 1 THEN TO_CHAR('') ELSE TO_CHAR(A.GENDER) END C_GENDER,
       A.CUST_DOB DATE_OF_BIRTH,
       '' MARITAL_STATUS,
       to_date('01-JAN-1900','dd-MON-yyyy') ANNIVERSARY_DATE,
       '' OCCUPATION,
       '' PASSPORT_NUMBER,
       '' PASSPORT_ISSUE_DATE,
       '' PASSPORT_DETAILS,
       '' PASSPORT_EXPIRY_DATE,
       A.NAT_ID_CARD_NUM PAN_NATIONAL_ID,
       REPLACE(nvl(SUBSTR(trim(O.USERID) ,1,32),M.fin_cif_id),'.','-') PRINCIPAL_ID,
       REPLACE(nvl(SUBSTR(trim(O.USERID) ,1,32),M.fin_cif_id),'.','-') BAY_USER_ID,
       CASE WHEN TRIM(O.LANGUAGE) ='A' THEN '002' ELSE '001' END LANG_ID,
       'Y' SMS_ENABLED,
       '965'||S.CU01_MOBPN SMS_MOBILE_NO,
       'N' MOBILE_ENABLED,
	   case when O.USERID LIKE '%.%' THEN 'Y' ELSE 'N' END IS_DOT_CONTAIN,
	   '' SCHEME_CODE,
	   CASE WHEN O.USERID IS NOT NULL THEN 'Y' ELSE 'N' END E_BANKING_ENEBLED
  FROM YSMSCUPF01 S
       LEFT JOIN ONLINE_BANK_CUST_DTLS_UNQ_DATA O ON ('0'||S.CU01_CLC||S.CU01_CUS) = O.CUSTOMER_NO              
     --  LEFT JOIN (SELECT * FROM  USERS WHERE    DELETEFLAG='0' AND STATUS='A' ) U ON O.CUSTOMER_NO= U.CUSTOMERNO              
       INNER JOIN map_cif M ON SUBSTR (M.fin_cif_id, 2, 10) = S.CU01_CLC||S.CU01_CUS AND IS_JOINT <>'Y'
       INNER JOIN CRMUSER.ACCOUNTS A ON A.ORGKEY = M.fin_cif_id
	   inner join SMS_BANK_CIF sm_cif on trim(sm_cif.cif)=trim(CU01_CLC)||trim(CU01_CUS) -- Added by GOP ,take cif from EXCEL as per mail.
 WHERE individual = 'Y' AND a.bank_id = get_param ('BANK_ID') 
         AND S.CU01_STS ='A'-- and NOT REGEXP_LIKE(O.USERID, UNISTR('[\0600-\06FF]'));  
;         
 COMMIT;
 
 --E-Banking 
INSERT INTO SMS_AND_E_BANKING_USER_O_TABLE 
SELECT distinct ' ' REC_NUM,
       O.CUSTOMER_NO CUST_ID,
       '1' USER_TYPE,
       REPLACE(SUBSTR(O.USERID ,1,32),'.','-') CORP_USER,
       CASE WHEN LENGTH(REPLACE(A.SALUTATION,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.SALUTATION) END SALUTATION,
       CASE WHEN LENGTH(REPLACE(A.CUST_LAST_NAME,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_LAST_NAME) END C_L_NAME,
       CASE WHEN LENGTH(REPLACE(NVL(A.CUST_MIDDLE_NAME,' '),'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_MIDDLE_NAME) END C_M_NAME,
       CASE WHEN LENGTH(REPLACE(A.CUST_FIRST_NAME,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_FIRST_NAME) END C_F_NAME,
       O.email C_EMAIL_ID,
       REPLACE(NVL(TRIM(A.ADDRESS_LINE1),CONVERT_CODES('ALPHABET','Y')),'"','') C_ADDR1,
       REPLACE(CASE WHEN LENGTH(REPLACE(A.ADDRESS_LINE2,'','.'))=1 THEN N'' ELSE TRIM(A.ADDRESS_LINE2)END,'"','')  C_ADDR2,
       REPLACE(CASE WHEN LENGTH(REPLACE(NVL(A.ADDRESS_LINE3,' '),'','.'))=1 THEN N'' ELSE TRIM(A.ADDRESS_LINE3)END,'"','') C_ADDR3,
       '0000000' C_CITY,
       '' C_STATE,
       'KW' C_CNTRY,
       '' C_ZIP,
       A.PHONE C_PHONE_NO,
       '' C_M_PHONE_NO,
       '' C_FAX_NO,
       '' PRIM_ACID,
       '' P_BRANCH_ID,
       CASE WHEN LENGTH(A.GENDER)> 1 THEN TO_CHAR('') ELSE TO_CHAR(A.GENDER) END C_GENDER,
       A.CUST_dob DATE_OF_BIRTH,
       '' MARITAL_STATUS,
       to_date('01-JAN-1900','dd-MON-yyyy') ANNIVERSARY_DATE,
       '' OCCUPATION,
       '' PASSPORT_NUMBER,
       '' PASSPORT_ISSUE_DATE,
       '' PASSPORT_DETAILS,
       '' PASSPORT_EXPIRY_DATE,
       A.NAT_ID_CARD_NUM PAN_NATIONAL_ID,
       REPLACE(SUBSTR(O.USERID ,1,32),'.','-') PRINCIPAL_ID,
       REPLACE(SUBSTR(O.USERID ,1,32),'.','-') BAY_USER_ID,
       CASE WHEN TRIM(O. LANGUAGE) ='A' THEN '002' ELSE '001' END LANG_ID,
       'N' SMS_ENABLED,
       '' SMS_MOBILE_NO,
       'N' MOBILE_ENABLED,
	   case when O.USERID LIKE '%.%' THEN 'Y' ELSE 'N' END IS_DOT_CONTAIN,
	   '' SCHEME_CODE,
	   'Y' E_BANKING_ENEBLED
  FROM ONLINE_BANK_CUST_DTLS_UNQ_DATA O
--       INNER JOIN USERS U ON O.CUSTOMER_NO=U.CUSTOMERNO 
       INNER JOIN map_cif M ON SUBSTR (M.fin_cif_id, 2, 10) = SUBSTR (O.CUSTOMER_NO, 2, 10) AND IS_JOINT <>'Y'
       INNER JOIN CRMUSER.ACCOUNTS A ON A.ORGKEY = M.fin_cif_id
 WHERE individual = 'Y' AND a.bank_id = get_param ('BANK_ID') 
-- AND U.UserID NOT LIKE '% %' 
--AND   U.DELETEFLAG='0' 
-- AND U.STATUS='A'
-- AND (O.STATUS='A' OR (O.STATUS='A' AND to_date(substr(O.LASTLOG_DATE,1,19),'YYYY-MM-DD HH24:MI:SS') > to_date('2015-09-26 09:48:36','YYYY-MM-DD HH24:MI:SS' )))
 AND O.CUSTOMER_NO NOT IN (SELECT CUST_ID FROM SMS_AND_E_BANKING_USER_O_TABLE)-- and NOT REGEXP_LIKE(O.USERID, UNISTR('[\0600-\06FF]'))
 ;
COMMIT;
 
 UPDATE SMS_AND_E_BANKING_USER_O_TABLE SET MOBILE_ENABLED = 'Y' WHERE CUST_ID IN(SELECT M.fin_cif_id FROM 
   Mobile_Banking_USER
  inner join map_cif m on  trim(gfbrnm)||trim(gfcus) =  trim(USR_EXTERNAL_USER_ID)
  left JOIN CRMUSER.ACCOUNTS A ON A.ORGKEY = M.fin_cif_id
  WHERE individual = 'Y' AND a.bank_id = get_param ('BANK_ID') and USR_STATUS='ACTIVE');
  
COMMIT;  

--Mobile Banking
INSERT INTO SMS_AND_E_BANKING_USER_O_TABLE
SELECT distinct ' ' REC_NUM,
       M.fin_cif_id CUST_ID,
       '1' USER_TYPE,
       M.fin_cif_id CORP_USER,
       CASE WHEN LENGTH(REPLACE(A.SALUTATION,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.SALUTATION) END SALUTATION,
       CASE WHEN LENGTH(REPLACE(A.CUST_LAST_NAME,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_LAST_NAME) END C_L_NAME,
       CASE WHEN LENGTH(REPLACE(NVL(A.CUST_MIDDLE_NAME,' '),'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_MIDDLE_NAME) END C_M_NAME,
       CASE WHEN LENGTH(REPLACE(A.CUST_FIRST_NAME,'','.'))=1 THEN CONVERT_CODES('ALPHABET','Y') ELSE TO_CHAR(A.CUST_FIRST_NAME) END C_F_NAME,
       '' C_EMAIL_ID,
       REPLACE(NVL(TRIM(A.ADDRESS_LINE1),CONVERT_CODES('ALPHABET','Y')),'"','') C_ADDR1,
       REPLACE(CASE WHEN LENGTH(REPLACE(A.ADDRESS_LINE2,'','.'))=1 THEN N'' ELSE TRIM(A.ADDRESS_LINE2)END,'"','')  C_ADDR2,
       REPLACE(CASE WHEN LENGTH(REPLACE(NVL(A.ADDRESS_LINE3,' '),'','.'))=1 THEN N'' ELSE TRIM(A.ADDRESS_LINE3)END,'"','') C_ADDR3,
       '0000000' C_CITY,
       '' C_STATE,
       'KW' C_CNTRY,
       '' C_ZIP,
       A.PHONE C_PHONE_NO,
       '' C_M_PHONE_NO,
       '' C_FAX_NO,
       '' PRIM_ACID,
       '' P_BRANCH_ID,
       CASE WHEN LENGTH(A.GENDER)> 1 THEN TO_CHAR('') ELSE TO_CHAR(A.GENDER) END C_GENDER,
       A.CUST_DOB DATE_OF_BIRTH,
       '' MARITAL_STATUS,
       to_date('01-JAN-1900','dd-MON-yyyy') ANNIVERSARY_DATE,
       '' OCCUPATION,
       '' PASSPORT_NUMBER,
       '' PASSPORT_ISSUE_DATE,
       '' PASSPORT_DETAILS,
       '' PASSPORT_EXPIRY_DATE,
       A.NAT_ID_CARD_NUM PAN_NATIONAL_ID,
       M.fin_cif_id PRINCIPAL_ID,
       M.fin_cif_id BAY_USER_ID,
       '001' LANG_ID,
       'N' SMS_ENABLED,
       '' SMS_MOBILE_NO,
       'Y' MOBILE_ENABLED,
	   'N' IS_DOT_CONTAIN,
	   '' SCHEME_CODE,
	   'N' E_BANKING_ENEBLED
  FROM Mobile_Banking_USER
  inner join map_cif m on  trim(gfbrnm)||trim(gfcus) =  trim(USR_EXTERNAL_USER_ID) AND IS_JOINT <>'Y'
  left JOIN CRMUSER.ACCOUNTS A ON A.ORGKEY = M.fin_cif_id
  WHERE individual = 'Y' AND a.bank_id = get_param ('BANK_ID') and USR_STATUS='ACTIVE'
  and to_date(USR_DATE_LAST_UPDATE,'yyyy-mm-dd hh24:mi:ss')  >= add_months(to_date(get_param('EOD_MIL'),'MM-DD-YYYY hh24:mi:ss'),-6)  --- and USR_DATE_LAST_UPDATE is less than 6 moths --gop
   AND M.fin_cif_id NOT IN (SELECT CUST_ID FROM SMS_AND_E_BANKING_USER_O_TABLE where not REGEXP_LIKE(CORP_USER, UNISTR('[\0600-\06FF]')) );
 
 COMMIT;

update SMS_AND_E_BANKING_USER_O_TABLE set C_L_NAME =  trim(replace(C_L_NAME,'"',' ')),C_M_NAME = trim(replace(C_M_NAME,'"',' ')) ,C_F_NAME = trim(replace(C_F_NAME,'"',' '));
commit;
 
DELETE FROM SMS_AND_E_BANKING_USER_O_TABLE WHERE ROWID IN (SELECT ROWID ROW_ID FROM SMS_AND_E_BANKING_USER_O_TABLE WHERE REGEXP_LIKE(CORP_USER, UNISTR('[\0600-\06FF]')));
--update SMS_AND_E_BANKING_USER_O_TABLE set CORP_USER='SMS'||REC_NUM,PRINCIPAL_ID='SMS'||REC_NUM,BAY_USER_ID='SMS'||REC_NUM where trim(CORP_USER) is null;
COMMIT;
delete from SMS_AND_E_BANKING_USER_O_TABLE where rowid not in(select max(rowid) from SMS_AND_E_BANKING_USER_O_TABLE group by CUST_ID);
commit;
DROP SEQUENCE  E_BANKING_REC_SEQ; 
CREATE SEQUENCE E_BANKING_REC_SEQ;
UPDATE SMS_AND_E_BANKING_USER_O_TABLE SET REC_NUM= LPAD(E_BANKING_REC_SEQ.NEXTVAL,5,'0');
COMMIT;


drop index user_CORP_USER;

drop index user_CUST_ID;

drop index  user_USERID1;

drop index user_CUSTOMERNO1;

create index user_CORP_USER on SMS_AND_E_BANKING_USER_O_TABLE(CORP_USER);

create index user_CUST_ID on SMS_AND_E_BANKING_USER_O_TABLE(CUST_ID);

drop table E_BANKING_TRANSFER_PACKAGE2;

create table E_BANKING_TRANSFER_PACKAGE2 as  SELECT  USERID,CUSTOMERNO CUSTOMERNO,MIN(SCHEME_CODE) SCHEME_CODE FROM E_BANKING_TRANSFER_PACKAGE GROUP BY USERID,CUSTOMERNO;


create index user_USERID1 on E_BANKING_TRANSFER_PACKAGE2(USERID);

create index user_CUSTOMERNO1 on E_BANKING_TRANSFER_PACKAGE2(CUSTOMERNO);

--UPDATE SMS_AND_E_BANKING_USER_O_TABLE A SET SCHEME_CODE=( 
--SELECT SCHEME_CODE
--FROM (E_BANKING_TRANSFER_PACKAGE2) B WHERE B.USERID = A.CORP_USER AND B.CUSTOMERNO = A.CUST_ID);


DECLARE
 V_I NUMBER :=0;
   CURSOR c1
   IS
        select USERID,CUSTOMERNO,SCHEME_CODE from E_BANKING_TRANSFER_PACKAGE2;

BEGIN

   FOR l_record IN c1
   LOOP
    
    update SMS_AND_E_BANKING_USER_O_TABLE a set a.SCHEME_CODE = l_record.SCHEME_CODE where --l_record.USERID = A.CORP_USER AND 
	l_record.CUSTOMERNO = A.CUST_ID;
    
    
    END LOOP;
    
    IF mod(V_I, 1000) = 0 THEN
              COMMIT;
        END IF;

END;

COMMIT;

COMMIT;                                
UPDATE     SMS_AND_E_BANKING_USER_O_TABLE SET     SCHEME_CODE    ='RL2' WHERE TRIM(SCHEME_CODE) IS NULL;
COMMIT;                
      			
								
EXIT;
 
